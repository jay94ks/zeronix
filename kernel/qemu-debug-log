CPU Reset (CPU 0)
EAX=00000000 EBX=00000000 ECX=00000000 EDX=00000000
ESI=00000000 EDI=00000000 EBP=00000000 ESP=00000000
EIP=00000000 EFL=00000000 [-------] CPL=0 II=0 A20=0 SMM=0 HLT=0
ES =0000 00000000 00000000 00000000
CS =0000 00000000 00000000 00000000
SS =0000 00000000 00000000 00000000
DS =0000 00000000 00000000 00000000
FS =0000 00000000 00000000 00000000
GS =0000 00000000 00000000 00000000
LDT=0000 00000000 00000000 00000000
TR =0000 00000000 00000000 00000000
GDT=     00000000 00000000
IDT=     00000000 00000000
CR0=00000000 CR2=00000000 CR3=00000000 CR4=00000000
DR0=00000000 DR1=00000000 DR2=00000000 DR3=00000000 
DR6=00000000 DR7=00000000
CCS=00000000 CCD=00000000 CCO=DYNAMIC
EFER=0000000000000000
FCW=0000 FSW=0000 [ST=0] FTW=ff MXCSR=00000000
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=0000000000000000 0000000000000000 XMM01=0000000000000000 0000000000000000
XMM02=0000000000000000 0000000000000000 XMM03=0000000000000000 0000000000000000
XMM04=0000000000000000 0000000000000000 XMM05=0000000000000000 0000000000000000
XMM06=0000000000000000 0000000000000000 XMM07=0000000000000000 0000000000000000
CPU Reset (CPU 1)
EAX=00000000 EBX=00000000 ECX=00000000 EDX=00000000
ESI=00000000 EDI=00000000 EBP=00000000 ESP=00000000
EIP=00000000 EFL=00000000 [-------] CPL=0 II=0 A20=0 SMM=0 HLT=0
ES =0000 00000000 00000000 00000000
CS =0000 00000000 00000000 00000000
SS =0000 00000000 00000000 00000000
DS =0000 00000000 00000000 00000000
FS =0000 00000000 00000000 00000000
GS =0000 00000000 00000000 00000000
LDT=0000 00000000 00000000 00000000
TR =0000 00000000 00000000 00000000
GDT=     00000000 00000000
IDT=     00000000 00000000
CR0=00000000 CR2=00000000 CR3=00000000 CR4=00000000
DR0=00000000 DR1=00000000 DR2=00000000 DR3=00000000 
DR6=00000000 DR7=00000000
CCS=00000000 CCD=00000000 CCO=DYNAMIC
EFER=0000000000000000
FCW=0000 FSW=0000 [ST=0] FTW=ff MXCSR=00000000
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=0000000000000000 0000000000000000 XMM01=0000000000000000 0000000000000000
XMM02=0000000000000000 0000000000000000 XMM03=0000000000000000 0000000000000000
XMM04=0000000000000000 0000000000000000 XMM05=0000000000000000 0000000000000000
XMM06=0000000000000000 0000000000000000 XMM07=0000000000000000 0000000000000000
CPU Reset (CPU 2)
EAX=00000000 EBX=00000000 ECX=00000000 EDX=00000000
ESI=00000000 EDI=00000000 EBP=00000000 ESP=00000000
EIP=00000000 EFL=00000000 [-------] CPL=0 II=0 A20=0 SMM=0 HLT=0
ES =0000 00000000 00000000 00000000
CS =0000 00000000 00000000 00000000
SS =0000 00000000 00000000 00000000
DS =0000 00000000 00000000 00000000
FS =0000 00000000 00000000 00000000
GS =0000 00000000 00000000 00000000
LDT=0000 00000000 00000000 00000000
TR =0000 00000000 00000000 00000000
GDT=     00000000 00000000
IDT=     00000000 00000000
CR0=00000000 CR2=00000000 CR3=00000000 CR4=00000000
DR0=00000000 DR1=00000000 DR2=00000000 DR3=00000000 
DR6=00000000 DR7=00000000
CCS=00000000 CCD=00000000 CCO=DYNAMIC
EFER=0000000000000000
FCW=0000 FSW=0000 [ST=0] FTW=ff MXCSR=00000000
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=0000000000000000 0000000000000000 XMM01=0000000000000000 0000000000000000
XMM02=0000000000000000 0000000000000000 XMM03=0000000000000000 0000000000000000
XMM04=0000000000000000 0000000000000000 XMM05=0000000000000000 0000000000000000
XMM06=0000000000000000 0000000000000000 XMM07=0000000000000000 0000000000000000
CPU Reset (CPU 3)
EAX=00000000 EBX=00000000 ECX=00000000 EDX=00000000
ESI=00000000 EDI=00000000 EBP=00000000 ESP=00000000
EIP=00000000 EFL=00000000 [-------] CPL=0 II=0 A20=0 SMM=0 HLT=0
ES =0000 00000000 00000000 00000000
CS =0000 00000000 00000000 00000000
SS =0000 00000000 00000000 00000000
DS =0000 00000000 00000000 00000000
FS =0000 00000000 00000000 00000000
GS =0000 00000000 00000000 00000000
LDT=0000 00000000 00000000 00000000
TR =0000 00000000 00000000 00000000
GDT=     00000000 00000000
IDT=     00000000 00000000
CR0=00000000 CR2=00000000 CR3=00000000 CR4=00000000
DR0=00000000 DR1=00000000 DR2=00000000 DR3=00000000 
DR6=00000000 DR7=00000000
CCS=00000000 CCD=00000000 CCO=DYNAMIC
EFER=0000000000000000
FCW=0000 FSW=0000 [ST=0] FTW=ff MXCSR=00000000
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=0000000000000000 0000000000000000 XMM01=0000000000000000 0000000000000000
XMM02=0000000000000000 0000000000000000 XMM03=0000000000000000 0000000000000000
XMM04=0000000000000000 0000000000000000 XMM05=0000000000000000 0000000000000000
XMM06=0000000000000000 0000000000000000 XMM07=0000000000000000 0000000000000000
CPU Reset (CPU 0)
EAX=00000000 EBX=00000000 ECX=00000000 EDX=00000663
ESI=00000000 EDI=00000000 EBP=00000000 ESP=00000000
EIP=0000fff0 EFL=00000002 [-------] CPL=0 II=0 A20=1 SMM=0 HLT=0
ES =0000 00000000 0000ffff 00009300
CS =f000 ffff0000 0000ffff 00009b00
SS =0000 00000000 0000ffff 00009300
DS =0000 00000000 0000ffff 00009300
FS =0000 00000000 0000ffff 00009300
GS =0000 00000000 0000ffff 00009300
LDT=0000 00000000 0000ffff 00008200
TR =0000 00000000 0000ffff 00008b00
GDT=     00000000 0000ffff
IDT=     00000000 0000ffff
CR0=60000010 CR2=00000000 CR3=00000000 CR4=00000000
DR0=00000000 DR1=00000000 DR2=00000000 DR3=00000000 
DR6=ffff0ff0 DR7=00000400
CCS=00000000 CCD=00000000 CCO=DYNAMIC
EFER=0000000000000000
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=0000000000000000 0000000000000000 XMM01=0000000000000000 0000000000000000
XMM02=0000000000000000 0000000000000000 XMM03=0000000000000000 0000000000000000
XMM04=0000000000000000 0000000000000000 XMM05=0000000000000000 0000000000000000
XMM06=0000000000000000 0000000000000000 XMM07=0000000000000000 0000000000000000
CPU Reset (CPU 1)
EAX=00000000 EBX=00000000 ECX=00000000 EDX=00000663
ESI=00000000 EDI=00000000 EBP=00000000 ESP=00000000
EIP=0000fff0 EFL=00000002 [-------] CPL=0 II=0 A20=1 SMM=0 HLT=1
ES =0000 00000000 0000ffff 00009300
CS =f000 ffff0000 0000ffff 00009b00
SS =0000 00000000 0000ffff 00009300
DS =0000 00000000 0000ffff 00009300
FS =0000 00000000 0000ffff 00009300
GS =0000 00000000 0000ffff 00009300
LDT=0000 00000000 0000ffff 00008200
TR =0000 00000000 0000ffff 00008b00
GDT=     00000000 0000ffff
IDT=     00000000 0000ffff
CR0=60000010 CR2=00000000 CR3=00000000 CR4=00000000
DR0=00000000 DR1=00000000 DR2=00000000 DR3=00000000 
DR6=ffff0ff0 DR7=00000400
CCS=00000000 CCD=00000000 CCO=DYNAMIC
EFER=0000000000000000
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=0000000000000000 0000000000000000 XMM01=0000000000000000 0000000000000000
XMM02=0000000000000000 0000000000000000 XMM03=0000000000000000 0000000000000000
XMM04=0000000000000000 0000000000000000 XMM05=0000000000000000 0000000000000000
XMM06=0000000000000000 0000000000000000 XMM07=0000000000000000 0000000000000000
CPU Reset (CPU 2)
EAX=00000000 EBX=00000000 ECX=00000000 EDX=00000663
ESI=00000000 EDI=00000000 EBP=00000000 ESP=00000000
EIP=0000fff0 EFL=00000002 [-------] CPL=0 II=0 A20=1 SMM=0 HLT=1
ES =0000 00000000 0000ffff 00009300
CS =f000 ffff0000 0000ffff 00009b00
SS =0000 00000000 0000ffff 00009300
DS =0000 00000000 0000ffff 00009300
FS =0000 00000000 0000ffff 00009300
GS =0000 00000000 0000ffff 00009300
LDT=0000 00000000 0000ffff 00008200
TR =0000 00000000 0000ffff 00008b00
GDT=     00000000 0000ffff
IDT=     00000000 0000ffff
CR0=60000010 CR2=00000000 CR3=00000000 CR4=00000000
DR0=00000000 DR1=00000000 DR2=00000000 DR3=00000000 
DR6=ffff0ff0 DR7=00000400
CCS=00000000 CCD=00000000 CCO=DYNAMIC
EFER=0000000000000000
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=0000000000000000 0000000000000000 XMM01=0000000000000000 0000000000000000
XMM02=0000000000000000 0000000000000000 XMM03=0000000000000000 0000000000000000
XMM04=0000000000000000 0000000000000000 XMM05=0000000000000000 0000000000000000
XMM06=0000000000000000 0000000000000000 XMM07=0000000000000000 0000000000000000
CPU Reset (CPU 3)
EAX=00000000 EBX=00000000 ECX=00000000 EDX=00000663
ESI=00000000 EDI=00000000 EBP=00000000 ESP=00000000
EIP=0000fff0 EFL=00000002 [-------] CPL=0 II=0 A20=1 SMM=0 HLT=1
ES =0000 00000000 0000ffff 00009300
CS =f000 ffff0000 0000ffff 00009b00
SS =0000 00000000 0000ffff 00009300
DS =0000 00000000 0000ffff 00009300
FS =0000 00000000 0000ffff 00009300
GS =0000 00000000 0000ffff 00009300
LDT=0000 00000000 0000ffff 00008200
TR =0000 00000000 0000ffff 00008b00
GDT=     00000000 0000ffff
IDT=     00000000 0000ffff
CR0=60000010 CR2=00000000 CR3=00000000 CR4=00000000
DR0=00000000 DR1=00000000 DR2=00000000 DR3=00000000 
DR6=ffff0ff0 DR7=00000400
CCS=00000000 CCD=00000000 CCO=DYNAMIC
EFER=0000000000000000
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=0000000000000000 0000000000000000 XMM01=0000000000000000 0000000000000000
XMM02=0000000000000000 0000000000000000 XMM03=0000000000000000 0000000000000000
XMM04=0000000000000000 0000000000000000 XMM05=0000000000000000 0000000000000000
XMM06=0000000000000000 0000000000000000 XMM07=0000000000000000 0000000000000000
----------------
IN: 
0xfffffff0:  ljmp   $0xf000,$0xe05b

----------------
IN: 
0x000fe05b:  cmpl   $0x0,%cs:0x61c8
0x000fe062:  jne    0xfd0ae

----------------
IN: 
0x000fe066:  xor    %dx,%dx
0x000fe068:  mov    %dx,%ss

----------------
IN: 
0x000fe06a:  mov    $0x7000,%esp

----------------
IN: 
0x000fe070:  mov    $0xefc1c,%edx
0x000fe076:  jmp    0xfcf2b

----------------
IN: 
0x000fcf2b:  cli    
0x000fcf2c:  cld    
0x000fcf2d:  mov    %eax,%ecx
0x000fcf30:  mov    $0x8f,%eax
0x000fcf36:  out    %al,$0x70
0x000fcf38:  in     $0x71,%al
0x000fcf3a:  in     $0x92,%al
0x000fcf3c:  or     $0x2,%al
0x000fcf3e:  out    %al,$0x92
0x000fcf40:  mov    %ecx,%eax
0x000fcf43:  lidtw  %cs:0x61b8
0x000fcf49:  lgdtw  %cs:0x6178
0x000fcf4f:  mov    %cr0,%ecx
0x000fcf52:  and    $0x1fffffff,%ecx
0x000fcf59:  or     $0x1,%ecx
0x000fcf5d:  mov    %ecx,%cr0

----------------
IN: 
0x000fcf60:  ljmpl  $0x8,$0xfcf68

----------------
IN: 
0x000fcf68:  mov    $0x10,%ecx
0x000fcf6d:  mov    %ecx,%ds

----------------
IN: 
0x000fcf6f:  mov    %ecx,%es

----------------
IN: 
0x000fcf71:  mov    %ecx,%ss

----------------
IN: 
0x000fcf73:  mov    %ecx,%fs

----------------
IN: 
0x000fcf75:  mov    %ecx,%gs
0x000fcf77:  jmp    *%edx

----------------
IN: 
0x000efc1c:  push   %ebx
0x000efc1d:  sub    $0x20,%esp
0x000efc20:  call   0xec4eb

----------------
IN: 
0x000ec4eb:  push   $0xf51d0
0x000ec4f0:  push   $0xf047f
0x000ec4f5:  call   0xec4d8

----------------
IN: 
0x000ec4d8:  lea    0x8(%esp),%ecx
0x000ec4dc:  mov    0x4(%esp),%edx
0x000ec4e0:  mov    $0xf5168,%eax
0x000ec4e5:  call   0xebd11

----------------
IN: 
0x000ebd11:  push   %ebp
0x000ebd12:  push   %edi
0x000ebd13:  push   %esi
0x000ebd14:  push   %ebx
0x000ebd15:  sub    $0x8,%esp
0x000ebd18:  mov    %eax,%ebx
0x000ebd1a:  mov    %edx,%edi
0x000ebd1c:  mov    %ecx,%ebp
0x000ebd1e:  movsbl (%edi),%edx
0x000ebd21:  test   %dl,%dl
0x000ebd23:  je     0xebf7a

----------------
IN: 
0x000ebd29:  cmp    $0x25,%dl
0x000ebd2c:  jne    0xebf65

----------------
IN: 
0x000ebf65:  mov    %ebx,%eax
0x000ebf67:  call   0xe9803

----------------
IN: 
0x000e9803:  movsbl %dl,%edx
0x000e9806:  jmp    *(%eax)

----------------
IN: 
0x000eb0a7:  mov    %dl,%al
0x000eb0a9:  mov    0xf6034,%dx
0x000eb0b0:  test   %dx,%dx
0x000eb0b3:  je     0xeb0b6

----------------
IN: 
0x000eb0b5:  out    %al,(%dx)
0x000eb0b6:  ret    

----------------
IN: 
0x000ebf6c:  mov    %edi,%esi
0x000ebf6e:  jmp    0xebf72

----------------
IN: 
0x000ebf72:  lea    0x1(%esi),%edi
0x000ebf75:  jmp    0xebd1e

----------------
IN: 
0x000ebd1e:  movsbl (%edi),%edx
0x000ebd21:  test   %dl,%dl
0x000ebd23:  je     0xebf7a

----------------
IN: 
0x000ebd32:  lea    0x1(%edi),%esi
0x000ebd35:  movb   $0x20,(%esp)
0x000ebd39:  xor    %ecx,%ecx
0x000ebd3b:  movsbl (%esi),%eax
0x000ebd3e:  lea    -0x30(%eax),%edx
0x000ebd41:  cmp    $0x9,%dl
0x000ebd44:  ja     0xebd60

----------------
IN: 
0x000ebd60:  xor    %edx,%edx
0x000ebd62:  cmp    $0x6c,%al
0x000ebd64:  jne    0xebd78

----------------
IN: 
0x000ebd78:  cmp    $0x64,%al
0x000ebd7a:  je     0xebde8

----------------
IN: 
0x000ebd7c:  jg     0xebdc4

----------------
IN: 
0x000ebdc4:  cmp    $0x73,%al
0x000ebdc6:  je     0xebf48

----------------
IN: 
0x000ebf48:  lea    0x4(%ebp),%edi
0x000ebf4b:  mov    0x0(%ebp),%ebp
0x000ebf4e:  movsbl 0x0(%ebp),%edx
0x000ebf52:  test   %dl,%dl
0x000ebf54:  je     0xebf70

----------------
IN: 
0x000ebf56:  mov    %ebx,%eax
0x000ebf58:  call   0xe9803

----------------
IN: 
0x000ebf5d:  inc    %ebp
0x000ebf5e:  jmp    0xebf4e

----------------
IN: 
0x000ebf4e:  movsbl 0x0(%ebp),%edx
0x000ebf52:  test   %dl,%dl
0x000ebf54:  je     0xebf70

----------------
IN: 
0x000ebf70:  mov    %edi,%ebp
0x000ebf72:  lea    0x1(%esi),%edi
0x000ebf75:  jmp    0xebd1e

----------------
IN: 
0x000ebf7a:  add    $0x8,%esp
0x000ebf7d:  pop    %ebx
0x000ebf7e:  pop    %esi
0x000ebf7f:  pop    %edi
0x000ebf80:  pop    %ebp
0x000ebf81:  ret    

----------------
IN: 
0x000ec4ea:  ret    

----------------
IN: 
0x000ec4fa:  push   $0xf5180
0x000ec4ff:  push   $0xf0495
0x000ec504:  call   0xec4d8

----------------
IN: 
0x000ec509:  add    $0x10,%esp
0x000ec50c:  ret    

----------------
IN: 
0x000efc25:  mov    $0x40000000,%ebx
0x000efc2a:  lea    0xc(%esp),%eax
0x000efc2e:  push   %eax
0x000efc2f:  lea    0xc(%esp),%eax
0x000efc33:  push   %eax
0x000efc34:  lea    0xc(%esp),%ecx
0x000efc38:  lea    0x8(%esp),%edx
0x000efc3c:  mov    %ebx,%eax
0x000efc3e:  call   0xe99c3

----------------
IN: 
0x000e99c3:  push   %ebp
0x000e99c4:  push   %edi
0x000e99c5:  push   %esi
0x000e99c6:  push   %ebx
0x000e99c7:  mov    %edx,%edi
0x000e99c9:  mov    %ecx,%esi
0x000e99cb:  mov    0x14(%esp),%ebp
0x000e99cf:  pushf  
0x000e99d0:  pop    %ecx
0x000e99d1:  mov    %ecx,%edx
0x000e99d3:  xor    $0x200000,%edx
0x000e99d9:  push   %edx
0x000e99da:  popf   

----------------
IN: 
0x000e99db:  pushf  
0x000e99dc:  pop    %edx
0x000e99dd:  push   %ecx
0x000e99de:  popf   

----------------
IN: 
0x000e99df:  xor    %ecx,%edx
0x000e99e1:  bt     $0x15,%edx
0x000e99e5:  jb     0xe9a06

----------------
IN: 
0x000e9a06:  cpuid  
0x000e9a08:  mov    %eax,(%edi)
0x000e9a0a:  mov    %ebx,(%esi)
0x000e9a0c:  mov    %ecx,0x0(%ebp)
0x000e9a0f:  mov    0x18(%esp),%eax
0x000e9a13:  mov    %edx,(%eax)
0x000e9a15:  pop    %ebx
0x000e9a16:  pop    %esi
0x000e9a17:  pop    %edi
0x000e9a18:  pop    %ebp
0x000e9a19:  ret    

----------------
IN: 
0x000efc43:  mov    0xc(%esp),%eax
0x000efc47:  mov    %eax,0x1b(%esp)
0x000efc4b:  mov    0x10(%esp),%eax
0x000efc4f:  mov    %eax,0x1f(%esp)
0x000efc53:  mov    0x14(%esp),%eax
0x000efc57:  mov    %eax,0x23(%esp)
0x000efc5b:  movb   $0x0,0x27(%esp)
0x000efc60:  mov    $0xf4949,%edx
0x000efc65:  lea    0x1b(%esp),%eax
0x000efc69:  call   0xe9971

----------------
IN: 
0x000e9971:  push   %ebx
0x000e9972:  xor    %ecx,%ecx
0x000e9974:  mov    (%eax,%ecx,1),%bl
0x000e9977:  cmp    (%edx,%ecx,1),%bl
0x000e997a:  je     0xe9988

----------------
IN: 
0x000e997c:  setge  %al
0x000e997f:  movzbl %al,%eax
0x000e9982:  lea    -0x1(%eax,%eax,1),%eax
0x000e9986:  jmp    0xe998f

----------------
IN: 
0x000e998f:  pop    %ebx
0x000e9990:  ret    

----------------
IN: 
0x000efc6e:  pop    %edx
0x000efc6f:  pop    %ecx
0x000efc70:  test   %eax,%eax
0x000efc72:  jne    0xefcb5

----------------
IN: 
0x000efcb5:  add    $0x100,%ebx
0x000efcbb:  cmp    $0x40010000,%ebx
0x000efcc1:  jne    0xefc2a

----------------
IN: 
0x000efc2a:  lea    0xc(%esp),%eax
0x000efc2e:  push   %eax
0x000efc2f:  lea    0xc(%esp),%eax
0x000efc33:  push   %eax
0x000efc34:  lea    0xc(%esp),%ecx
0x000efc38:  lea    0x8(%esp),%edx
0x000efc3c:  mov    %ebx,%eax
0x000efc3e:  call   0xe99c3

----------------
IN: 
0x000efcc7:  cmpl   $0x0,0xf5208
0x000efcce:  jne    0xefcdd

----------------
IN: 
0x000efcd0:  push   $0xf49af
0x000efcd5:  call   0xec4d8

----------------
IN: 
0x000efcda:  pop    %eax
0x000efcdb:  jmp    0xefce7

----------------
IN: 
0x000efce7:  call   0xedfdb

----------------
IN: 
0x000edfdb:  push   %esi
0x000edfdc:  push   %ebx
0x000edfdd:  call   0xe97da

----------------
IN: 
0x000e97da:  mov    0xf5d00,%eax
0x000e97df:  shr    %eax
0x000e97e1:  and    $0x1,%eax
0x000e97e4:  ret    

----------------
IN: 
0x000edfe2:  test   %eax,%eax
0x000edfe4:  jne    0xee04a

----------------
IN: 
0x000edfe6:  xor    %edx,%edx
0x000edfe8:  or     $0xffffffff,%eax
0x000edfeb:  call   0xea50b

----------------
IN: 
0x000ea50b:  push   %esi
0x000ea50c:  push   %ebx
0x000ea50d:  mov    %eax,%ebx
0x000ea50f:  mov    %edx,%esi
0x000ea511:  test   $0x7,%al
0x000ea513:  jne    0xea546

----------------
IN: 
0x000ea546:  inc    %ebx
0x000ea547:  jmp    0xea529

----------------
IN: 
0x000ea529:  movzwl %bx,%eax
0x000ea52c:  movzbl %bh,%edx
0x000ea52f:  cmp    %esi,%edx
0x000ea531:  jne    0xea549

----------------
IN: 
0x000ea533:  xor    %edx,%edx
0x000ea535:  call   0xea491

----------------
IN: 
0x000ea491:  mov    %edx,%ecx
0x000ea493:  mov    0xf54d8,%edx
0x000ea499:  test   %edx,%edx
0x000ea49b:  movzwl %ax,%eax
0x000ea49e:  je     0xea4ab

----------------
IN: 
0x000ea4ab:  shl    $0x8,%eax
0x000ea4ae:  mov    %ecx,%edx
0x000ea4b0:  and    $0xfc,%edx
0x000ea4b6:  or     %edx,%eax
0x000ea4b8:  or     $0x80000000,%eax
0x000ea4bd:  mov    $0xcf8,%edx
0x000ea4c2:  out    %eax,(%dx)
0x000ea4c3:  and    $0x2,%ecx
0x000ea4c6:  lea    0xcfc(%ecx),%edx
0x000ea4cc:  in     (%dx),%ax
0x000ea4ce:  ret    

----------------
IN: 
0x000ea53a:  dec    %eax
0x000ea53b:  cmp    $0xfffffffd,%ax
0x000ea53f:  jbe    0xea54c

----------------
IN: 
0x000ea54c:  mov    %ebx,%eax
0x000ea54e:  pop    %ebx
0x000ea54f:  pop    %esi
0x000ea550:  ret    

----------------
IN: 
0x000edff0:  mov    %eax,%ebx
0x000edff2:  test   %eax,%eax
0x000edff4:  js     0xee03f

----------------
IN: 
0x000edff6:  movzwl %bx,%esi
0x000edff9:  xor    %edx,%edx
0x000edffb:  mov    %esi,%eax
0x000edffd:  call   0xea337

----------------
IN: 
0x000ea337:  mov    0xf54d8,%ecx
0x000ea33d:  test   %ecx,%ecx
0x000ea33f:  movzwl %ax,%eax
0x000ea342:  je     0xea34e

----------------
IN: 
0x000ea34e:  shl    $0x8,%eax
0x000ea351:  and    $0xfc,%edx
0x000ea357:  or     %edx,%eax
0x000ea359:  or     $0x80000000,%eax
0x000ea35e:  mov    $0xcf8,%edx
0x000ea363:  out    %eax,(%dx)
0x000ea364:  mov    $0xcfc,%edx
0x000ea369:  in     (%dx),%eax
0x000ea36a:  ret    

----------------
IN: 
0x000ee002:  cmp    $0x8086,%ax
0x000ee006:  jne    0xee039

----------------
IN: 
0x000ee008:  shr    $0x10,%eax
0x000ee00b:  cmp    $0x1237,%eax
0x000ee010:  jne    0xee019

----------------
IN: 
0x000ee012:  mov    $0x59,%edx
0x000ee017:  jmp    0xee025

----------------
IN: 
0x000ee025:  mov    %esi,%eax
0x000ee027:  call   0xea6ff

----------------
IN: 
0x000ea6ff:  push   %ebx
0x000ea700:  push   %ecx
0x000ea701:  movzwl %ax,%ebx
0x000ea704:  mov    %edx,(%esp)
0x000ea707:  mov    %ebx,%eax
0x000ea709:  call   0xea4cf

----------------
IN: 
0x000ea4cf:  mov    %edx,%ecx
0x000ea4d1:  mov    0xf54d8,%edx
0x000ea4d7:  test   %edx,%edx
0x000ea4d9:  movzwl %ax,%eax
0x000ea4dc:  je     0xea4e8

----------------
IN: 
0x000ea4e8:  shl    $0x8,%eax
0x000ea4eb:  mov    %ecx,%edx
0x000ea4ed:  and    $0xfc,%edx
0x000ea4f3:  or     %edx,%eax
0x000ea4f5:  or     $0x80000000,%eax
0x000ea4fa:  mov    $0xcf8,%edx
0x000ea4ff:  out    %eax,(%dx)
0x000ea500:  and    $0x3,%ecx
0x000ea503:  lea    0xcfc(%ecx),%edx
0x000ea509:  in     (%dx),%al
0x000ea50a:  ret    

----------------
IN: 
0x000ea70e:  test   $0x10,%al
0x000ea710:  mov    (%esp),%edx
0x000ea713:  mov    %ebx,%eax
0x000ea715:  jne    0xea720

----------------
IN: 
0x000ea717:  mov    $0xfffea408,%ecx
0x000ea71c:  pop    %ebx
0x000ea71d:  pop    %ebx
0x000ea71e:  jmp    *%ecx

----------------
IN: 
0xfffea408:  push   %ebp
0xfffea409:  push   %edi
0xfffea40a:  push   %esi
0xfffea40b:  push   %ebx
0xfffea40c:  sub    $0x8,%esp
0xfffea40f:  mov    %edx,%esi
0xfffea411:  mov    %edx,%edi
0xfffea413:  and    $0xfffffffc,%edi
0xfffea416:  movzwl %ax,%ebx
0xfffea419:  mov    %edi,%edx
0xfffea41b:  mov    %ebx,%eax
0xfffea41d:  call   0xfffea337

----------------
IN: 
0xfffea337:  mov    0xf54d8,%ecx
0xfffea33d:  test   %ecx,%ecx
0xfffea33f:  movzwl %ax,%eax
0xfffea342:  je     0xfffea34e

----------------
IN: 
0xfffea34e:  shl    $0x8,%eax
0xfffea351:  and    $0xfc,%edx
0xfffea357:  or     %edx,%eax
0xfffea359:  or     $0x80000000,%eax
0xfffea35e:  mov    $0xcf8,%edx
0xfffea363:  out    %eax,(%dx)
0xfffea364:  mov    $0xcfc,%edx
0xfffea369:  in     (%dx),%eax
0xfffea36a:  ret    

----------------
IN: 
0xfffea422:  mov    %eax,(%esp)
0xfffea425:  lea    0x4(%edi),%ebp
0xfffea428:  mov    %ebp,%edx
0xfffea42a:  mov    %ebx,%eax
0xfffea42c:  call   0xfffea337

----------------
IN: 
0xfffea431:  mov    %eax,0x4(%esp)
0xfffea435:  mov    %esi,%eax
0xfffea437:  and    $0x3,%eax
0xfffea43a:  lea    (%esp,%eax,1),%ecx
0xfffea43d:  xor    %edx,%edx
0xfffea43f:  movb   $0x33,0x1(%ecx,%edx,1)
0xfffea444:  inc    %edx
0xfffea445:  cmp    $0x6,%edx
0xfffea448:  jne    0xfffea43f

----------------
IN: 
0xfffea43f:  movb   $0x33,0x1(%ecx,%edx,1)
0xfffea444:  inc    %edx
0xfffea445:  cmp    $0x6,%edx
0xfffea448:  jne    0xfffea43f

----------------
IN: 
0xfffea44a:  movzbl (%esp,%eax,1),%esi
0xfffea44e:  and    $0x10,%esi
0xfffea451:  movb   $0x30,(%esp,%eax,1)
0xfffea455:  mov    (%esp),%ecx
0xfffea458:  mov    %edi,%edx
0xfffea45a:  mov    %ebx,%eax
0xfffea45c:  call   0xfffea07a

----------------
IN: 
0xfffea07a:  push   %esi
0xfffea07b:  push   %ebx
0xfffea07c:  mov    %edx,%ebx
0xfffea07e:  mov    0xf54d8,%esi
0xfffea084:  test   %esi,%esi
0xfffea086:  movzwl %ax,%edx
0xfffea089:  je     0xfffea096

----------------
IN: 
0xfffea096:  mov    %edx,%eax
0xfffea098:  shl    $0x8,%eax
0xfffea09b:  and    $0xfc,%ebx
0xfffea0a1:  or     %ebx,%eax
0xfffea0a3:  or     $0x80000000,%eax
0xfffea0a8:  mov    $0xcf8,%edx
0xfffea0ad:  out    %eax,(%dx)
0xfffea0ae:  mov    $0xcfc,%edx
0xfffea0b3:  mov    %ecx,%eax
0xfffea0b5:  out    %eax,(%dx)
0xfffea0b6:  pop    %ebx
0xfffea0b7:  pop    %esi
0xfffea0b8:  ret    

----------------
IN: 
0xfffea461:  mov    0x4(%esp),%ecx
0xfffea465:  mov    %ebp,%edx
0xfffea467:  mov    %ebx,%eax
0xfffea469:  call   0xfffea07a

----------------
IN: 
0xfffea46e:  mov    %esi,%eax
0xfffea470:  test   %al,%al
0xfffea472:  jne    0xfffea489

----------------
IN: 
0xfffea474:  mov    $0xd2d80,%eax
0xfffea479:  mov    $0x100000,%ecx
0xfffea47e:  sub    %eax,%ecx
0xfffea480:  mov    $0xfffd2d80,%esi
0xfffea485:  mov    %eax,%edi
0xfffea487:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0xfffea487:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0xfffea489:  add    $0x8,%esp
0xfffea48c:  pop    %ebx
0xfffea48d:  pop    %esi
0xfffea48e:  pop    %edi
0xfffea48f:  pop    %ebp
0xfffea490:  ret    

----------------
IN: 
0x000ee02c:  call   0xea727

----------------
IN: 
0x000ea727:  cmpl   $0x0,0xf61c8
0x000ea72e:  jne    0xea742

----------------
IN: 
0x000ea730:  mov    $0x8f,%al
0x000ea732:  out    %al,$0x70
0x000ea734:  xor    %eax,%eax
0x000ea736:  out    %al,$0x71
0x000ea738:  movl   $0x1,0xf61c8
0x000ea742:  ret    

----------------
IN: 
0x000ee031:  mov    %ebx,0xf5158
0x000ee037:  jmp    0xee04a

----------------
IN: 
0x000ee04a:  pop    %ebx
0x000ee04b:  pop    %esi
0x000ee04c:  ret    

----------------
IN: 
0x000efcec:  call   0xe7f27

----------------
IN: 
0x000e7f27:  push   %ebp
0x000e7f28:  push   %edi
0x000e7f29:  push   %esi
0x000e7f2a:  push   %ebx
0x000e7f2b:  sub    $0x70,%esp
0x000e7f2e:  call   0xea727

----------------
IN: 
0x000ea742:  ret    

----------------
IN: 
0x000e7f33:  call   0xe97da

----------------
IN: 
0x000e97da:  mov    0xf5d00,%eax
0x000e97df:  shr    %eax
0x000e97e1:  and    $0x1,%eax
0x000e97e4:  ret    

----------------
IN: 
0x000e7f38:  test   %eax,%eax
0x000e7f3a:  jne    0xe7f51

----------------
IN: 
0x000e7f3c:  mov    0xf6034,%dx
0x000e7f43:  in     (%dx),%al
0x000e7f44:  cmp    $0xe9,%al
0x000e7f46:  je     0xe7f51

----------------
IN: 
0x000e7f48:  movw   $0x0,0xf6034
0x000e7f51:  xor    %edx,%edx
0x000e7f53:  xor    %eax,%eax
0x000e7f55:  call   0xea491

----------------
IN: 
0x000ea491:  mov    %edx,%ecx
0x000ea493:  mov    0xf54d8,%edx
0x000ea499:  test   %edx,%edx
0x000ea49b:  movzwl %ax,%eax
0x000ea49e:  je     0xea4ab

----------------
IN: 
0x000ea4ab:  shl    $0x8,%eax
0x000ea4ae:  mov    %ecx,%edx
0x000ea4b0:  and    $0xfc,%edx
0x000ea4b6:  or     %edx,%eax
0x000ea4b8:  or     $0x80000000,%eax
0x000ea4bd:  mov    $0xcf8,%edx
0x000ea4c2:  out    %eax,(%dx)
0x000ea4c3:  and    $0x2,%ecx
0x000ea4c6:  lea    0xcfc(%ecx),%edx
0x000ea4cc:  in     (%dx),%ax
0x000ea4ce:  ret    

----------------
IN: 
0x000e7f5a:  movzwl %ax,%esi
0x000e7f5d:  lea    -0x1(%esi),%eax
0x000e7f60:  cmp    $0xfffffffd,%ax
0x000e7f64:  ja     0xe7fd4

----------------
IN: 
0x000e7f66:  mov    $0x2,%edx
0x000e7f6b:  xor    %eax,%eax
0x000e7f6d:  call   0xea491

----------------
IN: 
0x000e7f72:  movzwl %ax,%ebx
0x000e7f75:  mov    $0x2c,%edx
0x000e7f7a:  xor    %eax,%eax
0x000e7f7c:  call   0xea491

----------------
IN: 
0x000e7f81:  mov    %eax,%edi
0x000e7f83:  mov    $0x2e,%edx
0x000e7f88:  xor    %eax,%eax
0x000e7f8a:  call   0xea491

----------------
IN: 
0x000e7f8f:  cmp    $0x1100,%ax
0x000e7f93:  jne    0xe7fd4

----------------
IN: 
0x000e7f95:  cmp    $0x1af4,%di
0x000e7f9a:  jne    0xe7fd4

----------------
IN: 
0x000e7f9c:  orl    $0x1,0xf5d00
0x000e7fa3:  cmp    $0x1237,%bx
0x000e7fa8:  je     0xe7fb8

----------------
IN: 
0x000e7fb8:  push   $0xf4790
0x000e7fbd:  call   0xec4d8

----------------
IN: 
0x000ec4d8:  lea    0x8(%esp),%ecx
0x000ec4dc:  mov    0x4(%esp),%edx
0x000ec4e0:  mov    $0xf5168,%eax
0x000ec4e5:  call   0xebd11

----------------
IN: 
0x000ebd11:  push   %ebp
0x000ebd12:  push   %edi
0x000ebd13:  push   %esi
0x000ebd14:  push   %ebx
0x000ebd15:  sub    $0x8,%esp
0x000ebd18:  mov    %eax,%ebx
0x000ebd1a:  mov    %edx,%edi
0x000ebd1c:  mov    %ecx,%ebp
0x000ebd1e:  movsbl (%edi),%edx
0x000ebd21:  test   %dl,%dl
0x000ebd23:  je     0xebf7a

----------------
IN: 
0x000ebd29:  cmp    $0x25,%dl
0x000ebd2c:  jne    0xebf65

----------------
IN: 
0x000ebf65:  mov    %ebx,%eax
0x000ebf67:  call   0xe9803

----------------
IN: 
0x000e9803:  movsbl %dl,%edx
0x000e9806:  jmp    *(%eax)

----------------
IN: 
0x000eb0a7:  mov    %dl,%al
0x000eb0a9:  mov    0xf6034,%dx
0x000eb0b0:  test   %dx,%dx
0x000eb0b3:  je     0xeb0b6

----------------
IN: 
0x000eb0b6:  ret    

----------------
IN: 
0x000ebf6c:  mov    %edi,%esi
0x000ebf6e:  jmp    0xebf72

----------------
IN: 
0x000ebf72:  lea    0x1(%esi),%edi
0x000ebf75:  jmp    0xebd1e

----------------
IN: 
0x000ebd1e:  movsbl (%edi),%edx
0x000ebd21:  test   %dl,%dl
0x000ebd23:  je     0xebf7a

----------------
IN: 
0x000ebf7a:  add    $0x8,%esp
0x000ebf7d:  pop    %ebx
0x000ebf7e:  pop    %esi
0x000ebf7f:  pop    %edi
0x000ebf80:  pop    %ebp
0x000ebf81:  ret    

----------------
IN: 
0x000ec4ea:  ret    

----------------
IN: 
0x000e7fc2:  pop    %ebp
0x000e7fc3:  jmp    0xe7fd4

----------------
IN: 
0x000e7fd4:  lea    0x1c(%esp),%eax
0x000e7fd8:  push   %eax
0x000e7fd9:  lea    0x1c(%esp),%esi
0x000e7fdd:  push   %esi
0x000e7fde:  lea    0x1c(%esp),%ecx
0x000e7fe2:  lea    0x18(%esp),%edx
0x000e7fe6:  mov    $0x40000000,%eax
0x000e7feb:  call   0xe99c3

----------------
IN: 
0x000e99c3:  push   %ebp
0x000e99c4:  push   %edi
0x000e99c5:  push   %esi
0x000e99c6:  push   %ebx
0x000e99c7:  mov    %edx,%edi
0x000e99c9:  mov    %ecx,%esi
0x000e99cb:  mov    0x14(%esp),%ebp
0x000e99cf:  pushf  
0x000e99d0:  pop    %ecx
0x000e99d1:  mov    %ecx,%edx
0x000e99d3:  xor    $0x200000,%edx
0x000e99d9:  push   %edx
0x000e99da:  popf   

----------------
IN: 
0x000e99db:  pushf  
0x000e99dc:  pop    %edx
0x000e99dd:  push   %ecx
0x000e99de:  popf   

----------------
IN: 
0x000e99df:  xor    %ecx,%edx
0x000e99e1:  bt     $0x15,%edx
0x000e99e5:  jb     0xe9a06

----------------
IN: 
0x000e9a06:  cpuid  
0x000e9a08:  mov    %eax,(%edi)
0x000e9a0a:  mov    %ebx,(%esi)
0x000e9a0c:  mov    %ecx,0x0(%ebp)
0x000e9a0f:  mov    0x18(%esp),%eax
0x000e9a13:  mov    %edx,(%eax)
0x000e9a15:  pop    %ebx
0x000e9a16:  pop    %esi
0x000e9a17:  pop    %edi
0x000e9a18:  pop    %ebp
0x000e9a19:  ret    

----------------
IN: 
0x000e7ff0:  mov    0x1c(%esp),%eax
0x000e7ff4:  mov    %eax,0x38(%esp)
0x000e7ff8:  mov    0x20(%esp),%eax
0x000e7ffc:  mov    %eax,0x3c(%esp)
0x000e8000:  mov    0x24(%esp),%eax
0x000e8004:  mov    %eax,0x40(%esp)
0x000e8008:  movb   $0x0,0x44(%esp)
0x000e800d:  mov    $0xf47ea,%edx
0x000e8012:  lea    0x38(%esp),%eax
0x000e8016:  call   0xe9971

----------------
IN: 
0x000e9971:  push   %ebx
0x000e9972:  xor    %ecx,%ecx
0x000e9974:  mov    (%eax,%ecx,1),%bl
0x000e9977:  cmp    (%edx,%ecx,1),%bl
0x000e997a:  je     0xe9988

----------------
IN: 
0x000e997c:  setge  %al
0x000e997f:  movzbl %al,%eax
0x000e9982:  lea    -0x1(%eax,%eax,1),%eax
0x000e9986:  jmp    0xe998f

----------------
IN: 
0x000e998f:  pop    %ebx
0x000e9990:  ret    

----------------
IN: 
0x000e801b:  pop    %ebx
0x000e801c:  pop    %edi
0x000e801d:  test   %eax,%eax
0x000e801f:  jne    0xe807e

----------------
IN: 
0x000e807e:  call   0xe97da

----------------
IN: 
0x000e8083:  test   %eax,%eax
0x000e8085:  je     0xe8112

----------------
IN: 
0x000e8112:  call   0xdb345

----------------
IN: 
0x000db345:  mov    0xf53e4,%ecx
0x000db34b:  test   %ecx,%ecx
0x000db34d:  jne    0xdb3c1

----------------
IN: 
0x000db34f:  push   %esi
0x000db350:  push   %ebx
0x000db351:  push   %esi
0x000db352:  xor    %eax,%eax
0x000db354:  mov    $0x510,%edx
0x000db359:  out    %ax,(%dx)
0x000db35b:  xor    %ebx,%ebx
0x000db35d:  mov    $0x511,%edx
0x000db362:  in     (%dx),%al
0x000db363:  movzbl %al,%eax
0x000db366:  movsbl 0xf1235(%ebx),%esi
0x000db36d:  cmp    %esi,%eax
0x000db36f:  jne    0xdb3c7

----------------
IN: 
0x000db371:  inc    %ebx
0x000db372:  cmp    $0x4,%ebx
0x000db375:  jne    0xdb362

----------------
IN: 
0x000db362:  in     (%dx),%al
0x000db363:  movzbl %al,%eax
0x000db366:  movsbl 0xf1235(%ebx),%esi
0x000db36d:  cmp    %esi,%eax
0x000db36f:  jne    0xdb3c7

----------------
IN: 
0x000db377:  push   $0xf123a
0x000db37c:  call   0xec4d8

----------------
IN: 
0x000db381:  movl   $0x1,0xf53e4
0x000db38b:  mov    $0x4,%ecx
0x000db390:  mov    $0x1,%edx
0x000db395:  lea    0x4(%esp),%eax
0x000db399:  call   0xec37e

----------------
IN: 
0x000ec37e:  push   %esi
0x000ec37f:  push   %ebx
0x000ec380:  mov    %eax,%ebx
0x000ec382:  mov    %edx,%eax
0x000ec384:  mov    %ecx,%esi
0x000ec386:  cmpl   $0x0,0xf53e0
0x000ec38d:  je     0xec3a2

----------------
IN: 
0x000ec3a2:  mov    $0x510,%edx
0x000ec3a7:  out    %ax,(%dx)
0x000ec3a9:  test   %ecx,%ecx
0x000ec3ab:  je     0xec3b8

----------------
IN: 
0x000ec3ad:  mov    %ecx,%edx
0x000ec3af:  mov    %ebx,%eax
0x000ec3b1:  pop    %ebx
0x000ec3b2:  pop    %esi
0x000ec3b3:  jmp    0xec35d

----------------
IN: 
0x000ec35d:  cmpl   $0x0,0xf53e0
0x000ec364:  je     0xec370

----------------
IN: 
0x000ec370:  push   %edi
0x000ec371:  mov    %edx,%ecx
0x000ec373:  mov    %eax,%edi
0x000ec375:  mov    $0x511,%edx
0x000ec37a:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x000ec37a:  rep insb (%dx),%es:(%edi)

----------------
IN: 
0x000ec37c:  pop    %edi
0x000ec37d:  ret    

----------------
IN: 
0x000db39e:  pop    %ebx
0x000db39f:  testb  $0x2,(%esp)
0x000db3a3:  je     0xdb3ba

----------------
IN: 
0x000db3a5:  push   $0xf124d
0x000db3aa:  call   0xec4d8

----------------
IN: 
0x000db3af:  movl   $0x1,0xf53e0
0x000db3b9:  pop    %ecx
0x000db3ba:  mov    $0x1,%ecx
0x000db3bf:  jmp    0xdb3c7

----------------
IN: 
0x000db3c7:  mov    %ecx,%eax
0x000db3c9:  pop    %edx
0x000db3ca:  pop    %ebx
0x000db3cb:  pop    %esi
0x000db3cc:  ret    

----------------
IN: 
0x000e8117:  test   %eax,%eax
0x000e8119:  je     0xe82a6

----------------
IN: 
0x000e811f:  mov    $0x4,%ecx
0x000e8124:  mov    $0x19,%edx
0x000e8129:  mov    %esi,%eax
0x000e812b:  call   0xec37e

----------------
IN: 
0x000ec38f:  shl    $0x10,%eax
0x000ec392:  or     $0xa,%eax
0x000ec395:  mov    %eax,%ecx
0x000ec397:  mov    %esi,%edx
0x000ec399:  mov    %ebx,%eax
0x000ec39b:  pop    %ebx
0x000ec39c:  pop    %esi
0x000ec39d:  jmp    0xec309

----------------
IN: 
0x000ec309:  push   %esi
0x000ec30a:  push   %ebx
0x000ec30b:  sub    $0x10,%esp
0x000ec30e:  mov    %edx,%esi
0x000ec310:  mov    %ecx,%ebx
0x000ec312:  xor    %edx,%edx
0x000ec314:  call   0xeb449

----------------
IN: 
0x000eb449:  push   %ebp
0x000eb44a:  mov    %esp,%ebp
0x000eb44c:  mov    %edx,%ecx
0x000eb44e:  bswap  %ecx
0x000eb450:  mov    %eax,%edx
0x000eb452:  bswap  %edx
0x000eb454:  mov    %ecx,%eax
0x000eb456:  pop    %ebp
0x000eb457:  ret    

----------------
IN: 
0x000ec319:  mov    %eax,0x8(%esp)
0x000ec31d:  mov    %edx,0xc(%esp)
0x000ec321:  mov    %esi,%eax
0x000ec323:  call   0xe9c60

----------------
IN: 
0x000e9c60:  bswap  %eax
0x000e9c62:  ret    

----------------
IN: 
0x000ec328:  mov    %eax,0x4(%esp)
0x000ec32c:  mov    %ebx,%eax
0x000ec32e:  call   0xe9c60

----------------
IN: 
0x000ec333:  mov    %eax,(%esp)
0x000ec336:  mov    %esp,%eax
0x000ec338:  call   0xe9c60

----------------
IN: 
0x000ec33d:  mov    $0x518,%edx
0x000ec342:  out    %eax,(%dx)
0x000ec343:  mov    (%esp),%eax
0x000ec346:  call   0xe9c60

----------------
IN: 
0x000ec34b:  and    $0xfffffffe,%eax
0x000ec34e:  je     0xec357

----------------
IN: 
0x000ec357:  add    $0x10,%esp
0x000ec35a:  pop    %ebx
0x000ec35b:  pop    %esi
0x000ec35c:  ret    

----------------
IN: 
0x000e8130:  mov    0x18(%esp),%eax
0x000e8134:  call   0xe9c60

----------------
IN: 
0x000e8139:  mov    %eax,0x18(%esp)
0x000e813d:  xor    %esi,%esi
0x000e813f:  cmp    0x18(%esp),%esi
0x000e8143:  jae    0xe8185

----------------
IN: 
0x000e8145:  mov    $0x40,%edx
0x000e814a:  lea    0x30(%esp),%eax
0x000e814e:  call   0xec35d

----------------
IN: 
0x000ec366:  mov    $0x2,%ecx
0x000ec36b:  jmp    0xec309

----------------
IN: 
0x000e8153:  mov    $0x9,%ecx
0x000e8158:  mov    $0xf1709,%edx
0x000e815d:  lea    0x38(%esp),%eax
0x000e8161:  call   0xd4eee

----------------
IN: 
0x000d4eee:  add    %eax,%ecx
0x000d4ef0:  cmp    %ecx,%eax
0x000d4ef2:  jne    0xd4ef7

----------------
IN: 
0x000d4ef7:  push   %ebx
0x000d4ef8:  mov    (%edx),%bl
0x000d4efa:  cmp    %bl,(%eax)
0x000d4efc:  je     0xd4f05

----------------
IN: 
0x000d4efe:  sbb    %eax,%eax
0x000d4f00:  or     $0x1,%eax
0x000d4f03:  jmp    0xd4f0d

----------------
IN: 
0x000d4f0d:  pop    %ebx
0x000d4f0e:  ret    

----------------
IN: 
0x000e8166:  test   %eax,%eax
0x000e8168:  je     0xe816d

----------------
IN: 
0x000e816a:  inc    %esi
0x000e816b:  jmp    0xe813f

----------------
IN: 
0x000e813f:  cmp    0x18(%esp),%esi
0x000e8143:  jae    0xe8185

----------------
IN: 
0x000d4f05:  inc    %eax
0x000d4f06:  inc    %edx
0x000d4f07:  cmp    %ecx,%eax
0x000d4f09:  jne    0xd4ef8

----------------
IN: 
0x000d4ef8:  mov    (%edx),%bl
0x000d4efa:  cmp    %bl,(%eax)
0x000d4efc:  je     0xd4f05

----------------
IN: 
0x000d4f0b:  xor    %eax,%eax
0x000d4f0d:  pop    %ebx
0x000d4f0e:  ret    

----------------
IN: 
0x000e816d:  mov    0x34(%esp),%esi
0x000e8171:  rol    $0x8,%si
0x000e8175:  mov    0x30(%esp),%eax
0x000e8179:  call   0xe9c60

----------------
IN: 
0x000e817e:  mov    %eax,%ecx
0x000e8180:  test   %si,%si
0x000e8183:  jne    0xe8195

----------------
IN: 
0x000e8195:  mov    $0x510,%edx
0x000e819a:  mov    %esi,%eax
0x000e819c:  out    %ax,(%dx)
0x000e819e:  mov    $0x14,%esi
0x000e81a3:  mov    %ecx,%eax
0x000e81a5:  xor    %edx,%edx
0x000e81a7:  div    %esi
0x000e81a9:  mov    %eax,0x18(%esp)
0x000e81ad:  xor    %ebp,%ebp
0x000e81af:  cmp    0x18(%esp),%ebp
0x000e81b3:  jae    0xe830c

----------------
IN: 
0x000e81b9:  mov    $0x14,%edx
0x000e81be:  lea    0x1c(%esp),%eax
0x000e81c2:  call   0xec35d

----------------
IN: 
0x000e81c7:  mov    0x2c(%esp),%eax
0x000e81cb:  cmp    $0x1,%eax
0x000e81ce:  je     0xe81f8

----------------
IN: 
0x000e81f8:  push   $0x1
0x000e81fa:  pushl  0x2c(%esp)
0x000e81fe:  pushl  0x2c(%esp)
0x000e8202:  mov    0x28(%esp),%eax
0x000e8206:  mov    0x2c(%esp),%edx
0x000e820a:  call   0xd776b

----------------
IN: 
0x000d776b:  push   %edi
0x000d776c:  push   %esi
0x000d776d:  push   %ebx
0x000d776e:  mov    0x10(%esp),%ebx
0x000d7772:  mov    0x14(%esp),%ecx
0x000d7776:  mov    %ecx,%edi
0x000d7778:  or     %ebx,%edi
0x000d777a:  je     0xd7784

----------------
IN: 
0x000d777c:  pop    %ebx
0x000d777d:  pop    %esi
0x000d777e:  pop    %edi
0x000d777f:  jmp    0xd759c

----------------
IN: 
0x000d759c:  push   %ebp
0x000d759d:  push   %edi
0x000d759e:  push   %esi
0x000d759f:  push   %ebx
0x000d75a0:  sub    $0x24,%esp
0x000d75a3:  mov    %eax,0xc(%esp)
0x000d75a7:  mov    %edx,0x10(%esp)
0x000d75ab:  mov    0x38(%esp),%eax
0x000d75af:  mov    0x3c(%esp),%edx
0x000d75b3:  mov    %eax,0x1c(%esp)
0x000d75b7:  mov    %edx,0x20(%esp)
0x000d75bb:  mov    0x40(%esp),%ebp
0x000d75bf:  mov    %eax,%esi
0x000d75c1:  mov    %edx,%edi
0x000d75c3:  add    0xc(%esp),%esi
0x000d75c7:  adc    0x10(%esp),%edi
0x000d75cb:  mov    %esi,(%esp)
0x000d75ce:  mov    %edi,0x4(%esp)
0x000d75d2:  mov    0xf5d24,%edx
0x000d75d8:  movl   $0x0,0x8(%esp)
0x000d75e0:  cmp    %edx,0x8(%esp)
0x000d75e4:  jge    0xd7732

----------------
IN: 
0x000d7732:  cmp    $0xffffffff,%ebp
0x000d7735:  je     0xd7763

----------------
IN: 
0x000d7737:  mov    %ebp,0x40(%esp)
0x000d773b:  mov    0x1c(%esp),%eax
0x000d773f:  mov    0x20(%esp),%edx
0x000d7743:  mov    %eax,0x38(%esp)
0x000d7747:  mov    %edx,0x3c(%esp)
0x000d774b:  mov    0xc(%esp),%edx
0x000d774f:  mov    0x10(%esp),%ecx
0x000d7753:  mov    0x8(%esp),%eax
0x000d7757:  add    $0x24,%esp
0x000d775a:  pop    %ebx
0x000d775b:  pop    %esi
0x000d775c:  pop    %edi
0x000d775d:  pop    %ebp
0x000d775e:  jmp    0xd7512

----------------
IN: 
0x000d7512:  push   %ebp
0x000d7513:  push   %edi
0x000d7514:  push   %esi
0x000d7515:  push   %ebx
0x000d7516:  sub    $0xc,%esp
0x000d7519:  mov    %ecx,%edi
0x000d751b:  mov    0x20(%esp),%ecx
0x000d751f:  mov    0x24(%esp),%ebx
0x000d7523:  mov    %ecx,(%esp)
0x000d7526:  mov    %ebx,0x4(%esp)
0x000d752a:  mov    0x28(%esp),%ebp
0x000d752e:  mov    0xf5d24,%ecx
0x000d7534:  cmp    $0x1f,%ecx
0x000d7537:  jle    0xd754f

----------------
IN: 
0x000d754f:  mov    %edx,%esi
0x000d7551:  imul   $0x14,%eax,%ebx
0x000d7554:  sub    %eax,%ecx
0x000d7556:  imul   $0x14,%ecx,%ecx
0x000d7559:  lea    0xf5d40(%ebx),%edx
0x000d755f:  lea    0xf5d54(%ebx),%eax
0x000d7565:  mov    %edx,0x8(%esp)
0x000d7569:  call   0xd6dfd

----------------
IN: 
0x000d6dfd:  push   %edi
0x000d6dfe:  push   %esi
0x000d6dff:  mov    %edx,%esi
0x000d6e01:  cmp    %eax,%edx
0x000d6e03:  jb     0xd6e0b

----------------
IN: 
0x000d6e0b:  sub    $0x1,%ecx
0x000d6e0e:  jb     0xd6e18

----------------
IN: 
0x000d6e18:  pop    %esi
0x000d6e19:  pop    %edi
0x000d6e1a:  ret    

----------------
IN: 
0x000d756e:  incl   0xf5d24
0x000d7574:  mov    %esi,0xf5d40(%ebx)
0x000d757a:  mov    %edi,0xf5d44(%ebx)
0x000d7580:  mov    (%esp),%esi
0x000d7583:  mov    0x4(%esp),%edi
0x000d7587:  mov    0x8(%esp),%edx
0x000d758b:  mov    %esi,0x8(%edx)
0x000d758e:  mov    %edi,0xc(%edx)
0x000d7591:  mov    %ebp,0x10(%edx)
0x000d7594:  add    $0xc,%esp
0x000d7597:  pop    %ebx
0x000d7598:  pop    %esi
0x000d7599:  pop    %edi
0x000d759a:  pop    %ebp
0x000d759b:  ret    

----------------
IN: 
0x000e820f:  pushl  0x34(%esp)
0x000e8213:  pushl  0x34(%esp)
0x000e8217:  pushl  0x34(%esp)
0x000e821b:  pushl  0x34(%esp)
0x000e821f:  push   $0xf48ba
0x000e8224:  call   0xec4d8

----------------
IN: 
0x000ebd32:  lea    0x1(%edi),%esi
0x000ebd35:  movb   $0x20,(%esp)
0x000ebd39:  xor    %ecx,%ecx
0x000ebd3b:  movsbl (%esi),%eax
0x000ebd3e:  lea    -0x30(%eax),%edx
0x000ebd41:  cmp    $0x9,%dl
0x000ebd44:  ja     0xebd60

----------------
IN: 
0x000ebd46:  cmp    $0x30,%al
0x000ebd48:  jne    0xebd4e

----------------
IN: 
0x000ebd4a:  test   %ecx,%ecx
0x000ebd4c:  je     0xebd57

----------------
IN: 
0x000ebd57:  movb   $0x30,(%esp)
0x000ebd5b:  xor    %ecx,%ecx
0x000ebd5d:  inc    %esi
0x000ebd5e:  jmp    0xebd3b

----------------
IN: 
0x000ebd3b:  movsbl (%esi),%eax
0x000ebd3e:  lea    -0x30(%eax),%edx
0x000ebd41:  cmp    $0x9,%dl
0x000ebd44:  ja     0xebd60

----------------
IN: 
0x000ebd4e:  imul   $0xa,%ecx,%edx
0x000ebd51:  lea    -0x30(%edx,%eax,1),%ecx
0x000ebd55:  jmp    0xebd5d

----------------
IN: 
0x000ebd5d:  inc    %esi
0x000ebd5e:  jmp    0xebd3b

----------------
IN: 
0x000ebd60:  xor    %edx,%edx
0x000ebd62:  cmp    $0x6c,%al
0x000ebd64:  jne    0xebd78

----------------
IN: 
0x000ebd66:  mov    0x1(%esi),%al
0x000ebd69:  cmp    $0x6c,%al
0x000ebd6b:  je     0xebd70

----------------
IN: 
0x000ebd70:  mov    0x2(%esi),%al
0x000ebd73:  add    $0x2,%esi
0x000ebd76:  mov    $0x1,%dl
0x000ebd78:  cmp    $0x64,%al
0x000ebd7a:  je     0xebde8

----------------
IN: 
0x000ebd7c:  jg     0xebdc4

----------------
IN: 
0x000ebdc4:  cmp    $0x73,%al
0x000ebdc6:  je     0xebf48

----------------
IN: 
0x000ebdcc:  jg     0xebdd7

----------------
IN: 
0x000ebdd7:  cmp    $0x75,%al
0x000ebdd9:  je     0xebe0d

----------------
IN: 
0x000ebddb:  cmp    $0x78,%al
0x000ebddd:  je     0xebebc

----------------
IN: 
0x000ebebc:  cmp    $0x58,%al
0x000ebebe:  sete   %al
0x000ebec1:  movzbl %al,%eax
0x000ebec4:  mov    %eax,%edi
0x000ebec6:  mov    0x0(%ebp),%eax
0x000ebec9:  mov    %eax,0x4(%esp)
0x000ebecd:  movsbl (%esp),%eax
0x000ebed1:  test   %dl,%dl
0x000ebed3:  je     0xebf04

----------------
IN: 
0x000ebed5:  lea    0x8(%ebp),%edx
0x000ebed8:  mov    %edx,(%esp)
0x000ebedb:  mov    0x4(%ebp),%edx
0x000ebede:  test   %edx,%edx
0x000ebee0:  je     0xebf0a

----------------
IN: 
0x000ebf0a:  push   %edi
0x000ebf0b:  push   %eax
0x000ebf0c:  mov    0xc(%esp),%edx
0x000ebf10:  mov    %ebx,%eax
0x000ebf12:  call   0xe990b

----------------
IN: 
0x000e990b:  push   %ebp
0x000e990c:  push   %edi
0x000e990d:  push   %esi
0x000e990e:  push   %ebx
0x000e990f:  sub    $0x8,%esp
0x000e9912:  mov    %edx,%esi
0x000e9914:  mov    %ecx,%ebx
0x000e9916:  mov    0x20(%esp),%edi
0x000e991a:  mov    0x1c(%esp),%dl
0x000e991e:  mov    %esi,%ebp
0x000e9920:  mov    $0x1,%ecx
0x000e9925:  shr    $0x4,%ebp
0x000e9928:  je     0xe992d

----------------
IN: 
0x000e992d:  sub    %ecx,%ebx
0x000e992f:  movsbl %dl,%ebp
0x000e9932:  test   %ebx,%ebx
0x000e9934:  jle    0xe994e

----------------
IN: 
0x000e9936:  mov    %ecx,0x4(%esp)
0x000e993a:  mov    %ebp,%edx
0x000e993c:  mov    %eax,(%esp)
0x000e993f:  call   0xe9803

----------------
IN: 
0x000e9944:  dec    %ebx
0x000e9945:  mov    0x4(%esp),%ecx
0x000e9949:  mov    (%esp),%eax
0x000e994c:  jmp    0xe9932

----------------
IN: 
0x000e9932:  test   %ebx,%ebx
0x000e9934:  jle    0xe994e

----------------
IN: 
0x000e994e:  mov    %edi,0x1c(%esp)
0x000e9952:  mov    %esi,%edx
0x000e9954:  add    $0x8,%esp
0x000e9957:  pop    %ebx
0x000e9958:  pop    %esi
0x000e9959:  pop    %edi
0x000e995a:  pop    %ebp
0x000e995b:  jmp    0xe9872

----------------
IN: 
0x000e9872:  push   %edi
0x000e9873:  push   %esi
0x000e9874:  push   %ebx
0x000e9875:  mov    %eax,%esi
0x000e9877:  mov    %edx,%ebx
0x000e9879:  mov    0x10(%esp),%edi
0x000e987d:  dec    %ecx
0x000e987e:  cmp    $0x6,%ecx
0x000e9881:  ja     0xe988a

----------------
IN: 
0x000e9883:  jmp    *0xf4ab8(,%ecx,4)

----------------
IN: 
0x000e98fa:  and    $0xf,%ebx
0x000e98fd:  mov    %ebx,%edx
0x000e98ff:  mov    %edi,%ecx
0x000e9901:  mov    %esi,%eax
0x000e9903:  pop    %ebx
0x000e9904:  pop    %esi
0x000e9905:  pop    %edi
0x000e9906:  jmp    0xe9856

----------------
IN: 
0x000e9856:  push   %ebx
0x000e9857:  lea    0x30(%edx),%ebx
0x000e985a:  cmp    $0x9,%edx
0x000e985d:  jbe    0xe9869

----------------
IN: 
0x000e9869:  movsbl %bl,%edx
0x000e986c:  pop    %ebx
0x000e986d:  jmp    0xe9803

----------------
IN: 
0x000ebf17:  pop    %ecx
0x000ebf18:  pop    %edi
0x000ebf19:  mov    (%esp),%ebp
0x000ebf1c:  jmp    0xebf72

----------------
IN: 
0x000e992a:  inc    %ecx
0x000e992b:  jmp    0xe9925

----------------
IN: 
0x000e9925:  shr    $0x4,%ebp
0x000e9928:  je     0xe992d

----------------
IN: 
0x000e988a:  shr    $0x1c,%edx
0x000e988d:  mov    %edi,%ecx
0x000e988f:  call   0xe9856

----------------
IN: 
0x000e9894:  mov    %ebx,%edx
0x000e9896:  shr    $0x18,%edx
0x000e9899:  and    $0xf,%edx
0x000e989c:  mov    %edi,%ecx
0x000e989e:  mov    %esi,%eax
0x000e98a0:  call   0xe9856

----------------
IN: 
0x000e98a5:  mov    %ebx,%edx
0x000e98a7:  shr    $0x14,%edx
0x000e98aa:  and    $0xf,%edx
0x000e98ad:  mov    %edi,%ecx
0x000e98af:  mov    %esi,%eax
0x000e98b1:  call   0xe9856

----------------
IN: 
0x000e98b6:  mov    %ebx,%edx
0x000e98b8:  shr    $0x10,%edx
0x000e98bb:  and    $0xf,%edx
0x000e98be:  mov    %edi,%ecx
0x000e98c0:  mov    %esi,%eax
0x000e98c2:  call   0xe9856

----------------
IN: 
0x000e98c7:  mov    %ebx,%edx
0x000e98c9:  shr    $0xc,%edx
0x000e98cc:  and    $0xf,%edx
0x000e98cf:  mov    %edi,%ecx
0x000e98d1:  mov    %esi,%eax
0x000e98d3:  call   0xe9856

----------------
IN: 
0x000e98d8:  mov    %ebx,%edx
0x000e98da:  shr    $0x8,%edx
0x000e98dd:  and    $0xf,%edx
0x000e98e0:  mov    %edi,%ecx
0x000e98e2:  mov    %esi,%eax
0x000e98e4:  call   0xe9856

----------------
IN: 
0x000e98e9:  mov    %ebx,%edx
0x000e98eb:  shr    $0x4,%edx
0x000e98ee:  and    $0xf,%edx
0x000e98f1:  mov    %edi,%ecx
0x000e98f3:  mov    %esi,%eax
0x000e98f5:  call   0xe9856

----------------
IN: 
0x000e8229:  mov    0x3c(%esp),%eax
0x000e822d:  mov    0x40(%esp),%edx
0x000e8231:  add    $0x20,%esp
0x000e8234:  cmp    $0x0,%edx
0x000e8237:  mov    0x24(%esp),%esi
0x000e823b:  mov    0x28(%esp),%edi
0x000e823f:  ja     0xe827c

----------------
IN: 
0x000e8241:  mov    0xe9778,%ecx
0x000e8247:  xor    %ebx,%ebx
0x000e8249:  mov    %ecx,0x8(%esp)
0x000e824d:  mov    %ebx,0xc(%esp)
0x000e8251:  mov    %eax,%ecx
0x000e8253:  mov    %edx,%ebx
0x000e8255:  add    %esi,%ecx
0x000e8257:  adc    %edi,%ebx
0x000e8259:  mov    %ecx,(%esp)
0x000e825c:  mov    %ebx,0x4(%esp)
0x000e8260:  mov    (%esp),%ebx
0x000e8263:  cmp    %ebx,0xe9778
0x000e8269:  mov    0xc(%esp),%ebx
0x000e826d:  sbb    0x4(%esp),%ebx
0x000e8271:  jae    0xe82a0

----------------
IN: 
0x000e8273:  add    %esi,%eax
0x000e8275:  mov    %eax,0xe9778
0x000e827a:  jmp    0xe82a0

----------------
IN: 
0x000e82a0:  inc    %ebp
0x000e82a1:  jmp    0xe81af

----------------
IN: 
0x000e81af:  cmp    0x18(%esp),%ebp
0x000e81b3:  jae    0xe830c

----------------
IN: 
0x000e830c:  push   $0x2
0x000e830e:  push   $0x0
0x000e8310:  push   $0x40000
0x000e8315:  mov    $0xfffc0000,%eax
0x000e831a:  xor    %edx,%edx
0x000e831c:  call   0xd759c

----------------
IN: 
0x000d75ea:  imul   $0x14,0x8(%esp),%eax
0x000d75ef:  mov    0xf5d40(%eax),%ecx
0x000d75f5:  mov    0xf5d44(%eax),%ebx
0x000d75fb:  mov    %ecx,%esi
0x000d75fd:  mov    %ebx,%edi
0x000d75ff:  add    0xf5d48(%eax),%esi
0x000d7605:  adc    0xf5d4c(%eax),%edi
0x000d760b:  mov    %esi,0x14(%esp)
0x000d760f:  mov    %edi,0x18(%esp)
0x000d7613:  mov    0x14(%esp),%edi
0x000d7617:  cmp    0xc(%esp),%edi
0x000d761b:  mov    0x18(%esp),%edi
0x000d761f:  sbb    0x10(%esp),%edi
0x000d7623:  jae    0xd762b

----------------
IN: 
0x000d7625:  incl   0x8(%esp)
0x000d7629:  jmp    0xd75e0

----------------
IN: 
0x000d75e0:  cmp    %edx,0x8(%esp)
0x000d75e4:  jge    0xd7732

----------------
IN: 
0x000e8321:  add    $0xc,%esp
0x000e8324:  push   $0xffffffff
0x000e8326:  push   $0x0
0x000e8328:  push   $0x50000
0x000e832d:  mov    $0xa0000,%eax
0x000e8332:  xor    %edx,%edx
0x000e8334:  call   0xd759c

----------------
IN: 
0x000d762b:  cmp    0xc(%esp),%ecx
0x000d762f:  mov    %ebx,%edi
0x000d7631:  sbb    0x10(%esp),%edi
0x000d7635:  jae    0xd76b2

----------------
IN: 
0x000d7637:  add    $0xf5d40,%eax
0x000d763c:  mov    %eax,%edi
0x000d763e:  mov    0x10(%eax),%eax
0x000d7641:  mov    %eax,%esi
0x000d7643:  cmp    %ebp,%eax
0x000d7645:  jne    0xd7664

----------------
IN: 
0x000d7664:  mov    0xc(%esp),%eax
0x000d7668:  mov    0x10(%esp),%edx
0x000d766c:  sub    %ecx,%eax
0x000d766e:  sbb    %ebx,%edx
0x000d7670:  mov    %eax,0x8(%edi)
0x000d7673:  mov    %edx,0xc(%edi)
0x000d7676:  incl   0x8(%esp)
0x000d767a:  mov    0x14(%esp),%eax
0x000d767e:  cmp    %eax,(%esp)
0x000d7681:  mov    0x4(%esp),%eax
0x000d7685:  sbb    0x18(%esp),%eax
0x000d7689:  jae    0xd76b2

----------------
IN: 
0x000d768b:  push   %esi
0x000d768c:  mov    0x18(%esp),%eax
0x000d7690:  mov    0x1c(%esp),%edx
0x000d7694:  sub    0x4(%esp),%eax
0x000d7698:  sbb    0x8(%esp),%edx
0x000d769c:  push   %edx
0x000d769d:  push   %eax
0x000d769e:  mov    0xc(%esp),%edx
0x000d76a2:  mov    0x10(%esp),%ecx
0x000d76a6:  mov    0x14(%esp),%eax
0x000d76aa:  call   0xd7512

----------------
IN: 
0x000d6e10:  mov    (%esi,%ecx,1),%dl
0x000d6e13:  mov    %dl,(%eax,%ecx,1)
0x000d6e16:  jmp    0xd6e0b

----------------
IN: 
0x000d76af:  add    $0xc,%esp
0x000d76b2:  imul   $0x14,0x8(%esp),%ebx
0x000d76b7:  mov    0x8(%esp),%eax
0x000d76bb:  cmp    0xf5d24,%eax
0x000d76c1:  jge    0xd7732

----------------
IN: 
0x000d76c3:  lea    0xf5d40(%ebx),%ecx
0x000d76c9:  mov    0xf5d40(%ebx),%eax
0x000d76cf:  mov    0xf5d44(%ebx),%edx
0x000d76d5:  cmp    %eax,(%esp)
0x000d76d8:  mov    0x4(%esp),%edi
0x000d76dc:  sbb    %edx,%edi
0x000d76de:  jb     0xd7732

----------------
IN: 
0x000d76e0:  lea    0x8(%ecx),%edi
0x000d76e3:  mov    %edi,0x14(%esp)
0x000d76e7:  add    0x8(%ecx),%eax
0x000d76ea:  adc    0xc(%ecx),%edx
0x000d76ed:  cmp    %eax,(%esp)
0x000d76f0:  mov    0x4(%esp),%edi
0x000d76f4:  sbb    %edx,%edi
0x000d76f6:  jb     0xd7703

----------------
IN: 
0x000d7703:  mov    (%esp),%ebx
0x000d7706:  mov    0x4(%esp),%esi
0x000d770a:  mov    %ebx,(%ecx)
0x000d770c:  mov    %esi,0x4(%ecx)
0x000d770f:  sub    %ebx,%eax
0x000d7711:  sbb    %esi,%edx
0x000d7713:  mov    0x14(%esp),%ebx
0x000d7717:  mov    %eax,(%ebx)
0x000d7719:  mov    %edx,0x4(%ebx)
0x000d771c:  cmp    0x10(%ecx),%ebp
0x000d771f:  jne    0xd7732

----------------
IN: 
0x000d7763:  add    $0x24,%esp
0x000d7766:  pop    %ebx
0x000d7767:  pop    %esi
0x000d7768:  pop    %edi
0x000d7769:  pop    %ebp
0x000d776a:  ret    

----------------
IN: 
0x000e8339:  push   $0x2
0x000e833b:  push   $0x0
0x000e833d:  push   $0x10000
0x000e8342:  mov    $0xf0000,%eax
0x000e8347:  xor    %edx,%edx
0x000e8349:  call   0xd759c

----------------
IN: 
0x000d76b2:  imul   $0x14,0x8(%esp),%ebx
0x000d76b7:  mov    0x8(%esp),%eax
0x000d76bb:  cmp    0xf5d24,%eax
0x000d76c1:  jge    0xd7732

----------------
IN: 
0x000e834e:  mov    0xf5d24,%eax
0x000e8353:  lea    -0x1(%eax),%esi
0x000e8356:  add    $0x18,%esp
0x000e8359:  xor    %ebx,%ebx
0x000e835b:  test   %esi,%esi
0x000e835d:  js     0xe83d3

----------------
IN: 
0x000e835f:  imul   $0x14,%esi,%ecx
0x000e8362:  mov    0xf5d40(%ecx),%eax
0x000e8368:  mov    0xf5d44(%ecx),%edx
0x000e836e:  mov    %eax,%edi
0x000e8370:  mov    %edx,%ebp
0x000e8372:  add    0xf5d48(%ecx),%edi
0x000e8378:  adc    0xf5d4c(%ecx),%ebp
0x000e837e:  mov    %edi,(%esp)
0x000e8381:  mov    %ebp,0x4(%esp)
0x000e8385:  mov    $0xfffff,%edi
0x000e838a:  cmp    (%esp),%edi
0x000e838d:  mov    $0x0,%edi
0x000e8392:  sbb    0x4(%esp),%edi
0x000e8396:  jae    0xe83d3

----------------
IN: 
0x000e8398:  cmpl   $0x1,0xf5d50(%ecx)
0x000e839f:  jne    0xe83d0

----------------
IN: 
0x000e83d0:  dec    %esi
0x000e83d1:  jmp    0xe835b

----------------
IN: 
0x000e835b:  test   %esi,%esi
0x000e835d:  js     0xe83d3

----------------
IN: 
0x000e83a1:  cmpl   $0x0,0x4(%esp)
0x000e83a6:  ja     0xe83d0

----------------
IN: 
0x000e83a8:  mov    (%esp),%ecx
0x000e83ab:  test   %ebx,%ebx
0x000e83ad:  jne    0xe83c4

----------------
IN: 
0x000e83af:  lea    -0x40000(%ecx),%edx
0x000e83b5:  and    $0xfffffff0,%edx
0x000e83b8:  cmp    %edx,%ecx
0x000e83ba:  jb     0xe83c4

----------------
IN: 
0x000e83bc:  cmp    %edx,%eax
0x000e83be:  ja     0xe83c4

----------------
IN: 
0x000e83c0:  mov    %edx,%ebx
0x000e83c2:  mov    %edx,%ecx
0x000e83c4:  mov    %eax,%edx
0x000e83c6:  mov    $0xe96d8,%eax
0x000e83cb:  call   0xd797e

----------------
IN: 
0x000d797e:  push   %ebx
0x000d797f:  sub    $0x2c,%esp
0x000d7982:  mov    %edx,%ebx
0x000d7984:  mov    %eax,%edx
0x000d7986:  mov    (%eax),%eax
0x000d7988:  test   %eax,%eax
0x000d798a:  jne    0xd79c3

----------------
IN: 
0x000d798c:  movl   $0xffffffff,0x28(%esp)
0x000d7994:  mov    %ebx,0x1c(%esp)
0x000d7998:  mov    %ecx,0x20(%esp)
0x000d799c:  movl   $0x0,0x24(%esp)
0x000d79a4:  lea    0x14(%esp),%eax
0x000d79a8:  call   0xd4ecf

----------------
IN: 
0x000d4ecf:  mov    (%edx),%ecx
0x000d4ed1:  mov    %edx,0x4(%eax)
0x000d4ed4:  mov    %ecx,(%eax)
0x000d4ed6:  test   %ecx,%ecx
0x000d4ed8:  je     0xd4edd

----------------
IN: 
0x000d4edd:  mov    %eax,(%edx)
0x000d4edf:  ret    

----------------
IN: 
0x000d79ad:  mov    %esp,%eax
0x000d79af:  call   0xd7788

----------------
IN: 
0x000d7788:  push   %edi
0x000d7789:  push   %esi
0x000d778a:  push   %ebx
0x000d778b:  mov    %eax,%ebx
0x000d778d:  push   %eax
0x000d778e:  mov    $0x10,%ecx
0x000d7793:  mov    $0x2c,%edx
0x000d7798:  mov    0xe96d8,%eax
0x000d779d:  call   0xd6ecd

----------------
IN: 
0x000d6ecd:  push   %ebp
0x000d6ece:  push   %edi
0x000d6ecf:  push   %esi
0x000d6ed0:  push   %ebx
0x000d6ed1:  mov    %ecx,%esi
0x000d6ed3:  mov    0x14(%esp),%ecx
0x000d6ed7:  neg    %esi
0x000d6ed9:  test   %eax,%eax
0x000d6edb:  je     0xd6f10

----------------
IN: 
0x000d6edd:  mov    0xc(%eax),%edi
0x000d6ee0:  mov    %edi,%ebx
0x000d6ee2:  sub    %edx,%ebx
0x000d6ee4:  and    %esi,%ebx
0x000d6ee6:  mov    0x10(%eax),%ebp
0x000d6ee9:  add    0x8(%eax),%ebp
0x000d6eec:  cmp    %ebx,%ebp
0x000d6eee:  ja     0xd6f0c

----------------
IN: 
0x000d6ef0:  cmp    %ebx,%edi
0x000d6ef2:  jb     0xd6f0c

----------------
IN: 
0x000d6ef4:  mov    %ebx,0x8(%ecx)
0x000d6ef7:  mov    %edi,0xc(%ecx)
0x000d6efa:  mov    %edx,0x10(%ecx)
0x000d6efd:  mov    %ebx,0xc(%eax)
0x000d6f00:  mov    0x4(%eax),%edx
0x000d6f03:  mov    %ecx,%eax
0x000d6f05:  call   0xd4ecf

----------------
IN: 
0x000d4eda:  mov    %eax,0x4(%ecx)
0x000d4edd:  mov    %eax,(%edx)
0x000d4edf:  ret    

----------------
IN: 
0x000d6f0a:  jmp    0xd6f12

----------------
IN: 
0x000d6f12:  mov    %ebx,%eax
0x000d6f14:  pop    %ebx
0x000d6f15:  pop    %esi
0x000d6f16:  pop    %edi
0x000d6f17:  pop    %ebp
0x000d6f18:  ret    

----------------
IN: 
0x000d77a2:  pop    %ecx
0x000d77a3:  test   %eax,%eax
0x000d77a5:  jne    0xd77d4

----------------
IN: 
0x000d77d4:  mov    %eax,%edx
0x000d77d6:  mov    $0xb,%ecx
0x000d77db:  mov    %eax,%edi
0x000d77dd:  mov    %ebx,%esi
0x000d77df:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000d77df:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000d77e1:  mov    (%ebx),%ecx
0x000d77e3:  mov    %ecx,(%eax)
0x000d77e5:  test   %ecx,%ecx
0x000d77e7:  je     0xd77ec

----------------
IN: 
0x000d77e9:  mov    %eax,0x4(%ecx)
0x000d77ec:  mov    0x4(%ebx),%ecx
0x000d77ef:  mov    %ecx,0x4(%eax)
0x000d77f2:  mov    %eax,(%ecx)
0x000d77f4:  lea    0x14(%eax),%esi
0x000d77f7:  mov    0x14(%ebx),%ecx
0x000d77fa:  mov    %ecx,0x14(%eax)
0x000d77fd:  test   %ecx,%ecx
0x000d77ff:  je     0xd7804

----------------
IN: 
0x000d7804:  mov    0x18(%ebx),%ecx
0x000d7807:  mov    %ecx,0x18(%eax)
0x000d780a:  mov    %esi,(%ecx)
0x000d780c:  mov    %edx,%eax
0x000d780e:  pop    %ebx
0x000d780f:  pop    %esi
0x000d7810:  pop    %edi
0x000d7811:  ret    

----------------
IN: 
0x000d79b4:  test   %eax,%eax
0x000d79b6:  jne    0xd79ca

----------------
IN: 
0x000d79ca:  add    $0x2c,%esp
0x000d79cd:  pop    %ebx
0x000d79ce:  ret    

----------------
IN: 
0x000e83d3:  mov    $0x90000,%ecx
0x000e83d8:  mov    $0x7000,%edx
0x000e83dd:  mov    $0xe96dc,%eax
0x000e83e2:  call   0xd797e

----------------
IN: 
0x000d6f0c:  mov    (%eax),%eax
0x000d6f0e:  jmp    0xd6ed9

----------------
IN: 
0x000d6ed9:  test   %eax,%eax
0x000d6edb:  je     0xd6f10

----------------
IN: 
0x000e83e7:  test   %ebx,%ebx
0x000e83e9:  je     0xe8412

----------------
IN: 
0x000e83eb:  lea    0x40000(%ebx),%ecx
0x000e83f1:  mov    %ebx,%edx
0x000e83f3:  mov    $0xe96e4,%eax
0x000e83f8:  call   0xd797e

----------------
IN: 
0x000e83fd:  mov    %ebx,%eax
0x000e83ff:  xor    %edx,%edx
0x000e8401:  push   $0x2
0x000e8403:  push   $0x0
0x000e8405:  push   $0x40000
0x000e840a:  call   0xd759c

----------------
IN: 
0x000e840f:  add    $0xc,%esp
0x000e8412:  mov    $0xe97c0,%ebp
0x000e8417:  sub    $0xd4ec0,%ebp
0x000e841d:  mov    %ebp,%edx
0x000e841f:  mov    $0x20,%eax
0x000e8424:  call   0xdecff

----------------
IN: 
0x000decff:  sub    $0x8,%esp
0x000ded02:  mov    %eax,%ecx
0x000ded04:  mov    %eax,0x4(%esp)
0x000ded08:  mov    %edx,(%esp)
0x000ded0b:  mov    $0xe96d8,%eax
0x000ded10:  call   0xd7812

----------------
IN: 
0x000d7812:  push   %esi
0x000d7813:  push   %ebx
0x000d7814:  sub    $0x2c,%esp
0x000d7817:  mov    %edx,%ebx
0x000d7819:  test   %edx,%edx
0x000d781b:  je     0xd784c

----------------
IN: 
0x000d781d:  movl   $0xffffffff,0x28(%esp)
0x000d7825:  lea    0x14(%esp),%esi
0x000d7829:  push   %esi
0x000d782a:  mov    (%eax),%eax
0x000d782c:  call   0xd6ecd

----------------
IN: 
0x000d7831:  mov    %eax,%ebx
0x000d7833:  pop    %eax
0x000d7834:  test   %ebx,%ebx
0x000d7836:  je     0xd784c

----------------
IN: 
0x000d7838:  mov    %esp,%eax
0x000d783a:  call   0xd7788

----------------
IN: 
0x000d7801:  mov    %esi,0x4(%ecx)
0x000d7804:  mov    0x18(%ebx),%ecx
0x000d7807:  mov    %ecx,0x18(%eax)
0x000d780a:  mov    %esi,(%ecx)
0x000d780c:  mov    %edx,%eax
0x000d780e:  pop    %ebx
0x000d780f:  pop    %esi
0x000d7810:  pop    %edi
0x000d7811:  ret    

----------------
IN: 
0x000d783f:  test   %eax,%eax
0x000d7841:  jne    0xd784c

----------------
IN: 
0x000d784c:  mov    %ebx,%eax
0x000d784e:  add    $0x2c,%esp
0x000d7851:  pop    %ebx
0x000d7852:  pop    %esi
0x000d7853:  ret    

----------------
IN: 
0x000ded15:  test   %eax,%eax
0x000ded17:  mov    (%esp),%edx
0x000ded1a:  mov    0x4(%esp),%ecx
0x000ded1e:  jne    0xded2d

----------------
IN: 
0x000ded2d:  add    $0x8,%esp
0x000ded30:  ret    

----------------
IN: 
0x000e8429:  mov    %eax,%ebx
0x000e842b:  test   %eax,%eax
0x000e842d:  jne    0xe8439

----------------
IN: 
0x000e8439:  push   %ebp
0x000e843a:  push   %eax
0x000e843b:  push   $0xd4ec0
0x000e8440:  push   $0xf4920
0x000e8445:  call   0xec4d8

----------------
IN: 
0x000ebd78:  cmp    $0x64,%al
0x000ebd7a:  je     0xebde8

----------------
IN: 
0x000ebdce:  cmp    $0x70,%al
0x000ebdd0:  je     0xebe2a

----------------
IN: 
0x000ebe2a:  lea    0x4(%ebp),%edi
0x000ebe2d:  mov    0x0(%ebp),%ebp
0x000ebe30:  cmpb   $0x50,0x1(%esi)
0x000ebe34:  jne    0xebe8e

----------------
IN: 
0x000ebe8e:  mov    $0x30,%edx
0x000ebe93:  mov    %ebx,%eax
0x000ebe95:  call   0xe9803

----------------
IN: 
0x000ebe9a:  mov    $0x78,%edx
0x000ebe9f:  mov    %ebx,%eax
0x000ebea1:  call   0xe9803

----------------
IN: 
0x000ebea6:  push   $0x0
0x000ebea8:  mov    $0x8,%ecx
0x000ebead:  mov    %ebp,%edx
0x000ebeaf:  mov    %ebx,%eax
0x000ebeb1:  call   0xe9872

----------------
IN: 
0x000e985f:  lea    0x57(%edx),%ebx
0x000e9862:  test   %ecx,%ecx
0x000e9864:  je     0xe9869

----------------
IN: 
0x000ebeb6:  pop    %ebp
0x000ebeb7:  jmp    0xebf70

----------------
IN: 
0x000ebf70:  mov    %edi,%ebp
0x000ebf72:  lea    0x1(%esi),%edi
0x000ebf75:  jmp    0xebd1e

----------------
IN: 
0x000ebde8:  mov    0x0(%ebp),%edi
0x000ebdeb:  test   %dl,%dl
0x000ebded:  jne    0xebdf4

----------------
IN: 
0x000ebdef:  add    $0x4,%ebp
0x000ebdf2:  jmp    0xebdf7

----------------
IN: 
0x000ebdf7:  test   %edi,%edi
0x000ebdf9:  jns    0xebe09

----------------
IN: 
0x000ebe09:  mov    %edi,%edx
0x000ebe0b:  jmp    0xebe1e

----------------
IN: 
0x000ebe1e:  mov    %ebx,%eax
0x000ebe20:  call   0xe9808

----------------
IN: 
0x000e9808:  push   %edi
0x000e9809:  push   %esi
0x000e980a:  push   %ebx
0x000e980b:  sub    $0xc,%esp
0x000e980e:  mov    %eax,%esi
0x000e9810:  mov    %edx,%ecx
0x000e9812:  movb   $0x0,0xb(%esp)
0x000e9817:  lea    0xa(%esp),%ebx
0x000e981b:  mov    $0xa,%edi
0x000e9820:  mov    %ecx,%eax
0x000e9822:  xor    %edx,%edx
0x000e9824:  div    %edi
0x000e9826:  add    $0x30,%edx
0x000e9829:  mov    %dl,(%ebx)
0x000e982b:  cmp    $0x9,%ecx
0x000e982e:  jbe    0xe9835

----------------
IN: 
0x000e9830:  dec    %ebx
0x000e9831:  mov    %eax,%ecx
0x000e9833:  jmp    0xe9820

----------------
IN: 
0x000e9820:  mov    %ecx,%eax
0x000e9822:  xor    %edx,%edx
0x000e9824:  div    %edi
0x000e9826:  add    $0x30,%edx
0x000e9829:  mov    %dl,(%ebx)
0x000e982b:  cmp    $0x9,%ecx
0x000e982e:  jbe    0xe9835

----------------
IN: 
0x000e9835:  test   %ebx,%ebx
0x000e9837:  jne    0xe983e

----------------
IN: 
0x000e983e:  movsbl (%ebx),%edx
0x000e9841:  test   %dl,%dl
0x000e9843:  je     0xe984f

----------------
IN: 
0x000e9845:  mov    %esi,%eax
0x000e9847:  call   0xe9803

----------------
IN: 
0x000e984c:  inc    %ebx
0x000e984d:  jmp    0xe983e

----------------
IN: 
0x000e984f:  add    $0xc,%esp
0x000e9852:  pop    %ebx
0x000e9853:  pop    %esi
0x000e9854:  pop    %edi
0x000e9855:  ret    

----------------
IN: 
0x000ebe25:  jmp    0xebf72

----------------
IN: 
0x000e844a:  mov    $0xd4ec0,%esi
0x000e844f:  mov    %ebx,%edi
0x000e8451:  mov    %ebp,%ecx
0x000e8453:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000e8453:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000e8455:  mov    %ebx,%eax
0x000e8457:  sub    $0xd4ec0,%eax
0x000e845c:  add    $0x10,%esp
0x000e845f:  mov    $0xd2d80,%edx
0x000e8464:  cmp    $0xd36c4,%edx
0x000e846a:  jae    0xe8477

----------------
IN: 
0x000e846c:  mov    (%edx),%ecx
0x000e846e:  add    %ebx,%ecx
0x000e8470:  add    %eax,(%ecx)
0x000e8472:  add    $0x4,%edx
0x000e8475:  jmp    0xe8464

----------------
IN: 
0x000e8464:  cmp    $0xd36c4,%edx
0x000e846a:  jae    0xe8477

----------------
IN: 
0x000e8477:  mov    $0xd4ec0,%ecx
0x000e847c:  sub    %ebx,%ecx
0x000e847e:  mov    $0xd36c4,%edx
0x000e8483:  cmp    $0xd45f4,%edx
0x000e8489:  jae    0xe8496

----------------
IN: 
0x000e848b:  mov    (%edx),%esi
0x000e848d:  add    %ebx,%esi
0x000e848f:  add    %ecx,(%esi)
0x000e8491:  add    $0x4,%edx
0x000e8494:  jmp    0xe8483

----------------
IN: 
0x000e8483:  cmp    $0xd45f4,%edx
0x000e8489:  jae    0xe8496

----------------
IN: 
0x000e8496:  mov    $0xd45f4,%edx
0x000e849b:  cmp    $0xd4600,%edx
0x000e84a1:  jae    0xe84b0

----------------
IN: 
0x000e84a3:  mov    (%edx),%ecx
0x000e84a5:  add    %eax,0xd2d80(%ecx)
0x000e84ab:  add    $0x4,%edx
0x000e84ae:  jmp    0xe849b

----------------
IN: 
0x000e849b:  cmp    $0xd4600,%edx
0x000e84a1:  jae    0xe84b0

----------------
IN: 
0x000e84b0:  mov    $0xe5312,%ecx
0x000e84b5:  cmp    $0xe97c0,%ecx
0x000e84bb:  jae    0xe84c8

----------------
IN: 
0x000e84bd:  lea    (%eax,%ecx,1),%edx
0x000e84c0:  cmp    $0xd4ec0,%ecx
0x000e84c6:  jae    0xe84cd

----------------
IN: 
0x000e84cd:  xor    %eax,%eax
0x000e84cf:  call   *%edx

----------------
IN: 
0x0ffbbab2:  push   %ebp
0x0ffbbab3:  push   %edi
0x0ffbbab4:  push   %esi
0x0ffbbab5:  push   %ebx
0x0ffbbab6:  sub    $0x124,%esp
0x0ffbbabc:  call   0xffb2f55

----------------
IN: 
0x0ffb2f55:  push   %ebp
0x0ffb2f56:  push   %edi
0x0ffb2f57:  push   %esi
0x0ffb2f58:  push   %ebx
0x0ffb2f59:  sub    $0xa8,%esp
0x0ffb2f5f:  xor    %eax,%eax
0x0ffb2f61:  mov    0xffbfe64(,%eax,4),%ecx
0x0ffb2f68:  mov    (%ecx),%edx
0x0ffb2f6a:  test   %edx,%edx
0x0ffb2f6c:  je     0xffb2f71

----------------
IN: 
0x0ffb2f6e:  mov    %ecx,0x4(%edx)
0x0ffb2f71:  inc    %eax
0x0ffb2f72:  cmp    $0x5,%eax
0x0ffb2f75:  jne    0xffb2f61

----------------
IN: 
0x0ffb2f61:  mov    0xffbfe64(,%eax,4),%ecx
0x0ffb2f68:  mov    (%ecx),%edx
0x0ffb2f6a:  test   %edx,%edx
0x0ffb2f6c:  je     0xffb2f71

----------------
IN: 
0x0ffb2f71:  inc    %eax
0x0ffb2f72:  cmp    $0x5,%eax
0x0ffb2f75:  jne    0xffb2f61

----------------
IN: 
0x0ffb2f77:  mov    $0xd4ec0,%ecx
0x0ffb2f7c:  sub    $0xd4600,%ecx
0x0ffb2f82:  mov    $0xd4600,%edx
0x0ffb2f87:  mov    $0xe8f00,%eax
0x0ffb2f8c:  call   0xffad59d

----------------
IN: 
0x0ffad59d:  push   %edi
0x0ffad59e:  push   %esi
0x0ffad59f:  mov    %edx,%esi
0x0ffad5a1:  cmp    %eax,%edx
0x0ffad5a3:  jb     0xffad5ab

----------------
IN: 
0x0ffad5ab:  sub    $0x1,%ecx
0x0ffad5ae:  jb     0xffad5b8

----------------
IN: 
0x0ffad5b0:  mov    (%esi,%ecx,1),%dl
0x0ffad5b3:  mov    %dl,(%eax,%ecx,1)
0x0ffad5b6:  jmp    0xffad5ab

----------------
IN: 
0x0ffad5b8:  pop    %esi
0x0ffad5b9:  pop    %edi
0x0ffad5ba:  ret    

----------------
IN: 
0x0ffb2f91:  mov    %eax,%ecx
0x0ffb2f93:  mov    $0xd9810,%edx
0x0ffb2f98:  mov    $0xffbfe88,%eax
0x0ffb2f9d:  call   0xffae11e

----------------
IN: 
0x0ffae11e:  push   %ebx
0x0ffae11f:  sub    $0x2c,%esp
0x0ffae122:  mov    %edx,%ebx
0x0ffae124:  mov    %eax,%edx
0x0ffae126:  mov    (%eax),%eax
0x0ffae128:  test   %eax,%eax
0x0ffae12a:  jne    0xffae163

----------------
IN: 
0x0ffae12c:  movl   $0xffffffff,0x28(%esp)
0x0ffae134:  mov    %ebx,0x1c(%esp)
0x0ffae138:  mov    %ecx,0x20(%esp)
0x0ffae13c:  movl   $0x0,0x24(%esp)
0x0ffae144:  lea    0x14(%esp),%eax
0x0ffae148:  call   0xffab66f

----------------
IN: 
0x0ffab66f:  mov    (%edx),%ecx
0x0ffab671:  mov    %edx,0x4(%eax)
0x0ffab674:  mov    %ecx,(%eax)
0x0ffab676:  test   %ecx,%ecx
0x0ffab678:  je     0xffab67d

----------------
IN: 
0x0ffab67d:  mov    %eax,(%edx)
0x0ffab67f:  ret    

----------------
IN: 
0x0ffae14d:  mov    %esp,%eax
0x0ffae14f:  call   0xffadf28

----------------
IN: 
0x0ffadf28:  push   %edi
0x0ffadf29:  push   %esi
0x0ffadf2a:  push   %ebx
0x0ffadf2b:  mov    %eax,%ebx
0x0ffadf2d:  push   %eax
0x0ffadf2e:  mov    $0x10,%ecx
0x0ffadf33:  mov    $0x2c,%edx
0x0ffadf38:  mov    0xffbfe78,%eax
0x0ffadf3d:  call   0xffad66d

----------------
IN: 
0x0ffad66d:  push   %ebp
0x0ffad66e:  push   %edi
0x0ffad66f:  push   %esi
0x0ffad670:  push   %ebx
0x0ffad671:  mov    %ecx,%esi
0x0ffad673:  mov    0x14(%esp),%ecx
0x0ffad677:  neg    %esi
0x0ffad679:  test   %eax,%eax
0x0ffad67b:  je     0xffad6b0

----------------
IN: 
0x0ffad67d:  mov    0xc(%eax),%edi
0x0ffad680:  mov    %edi,%ebx
0x0ffad682:  sub    %edx,%ebx
0x0ffad684:  and    %esi,%ebx
0x0ffad686:  mov    0x10(%eax),%ebp
0x0ffad689:  add    0x8(%eax),%ebp
0x0ffad68c:  cmp    %ebx,%ebp
0x0ffad68e:  ja     0xffad6ac

----------------
IN: 
0x0ffad6ac:  mov    (%eax),%eax
0x0ffad6ae:  jmp    0xffad679

----------------
IN: 
0x0ffad679:  test   %eax,%eax
0x0ffad67b:  je     0xffad6b0

----------------
IN: 
0x0ffad690:  cmp    %ebx,%edi
0x0ffad692:  jb     0xffad6ac

----------------
IN: 
0x0ffad694:  mov    %ebx,0x8(%ecx)
0x0ffad697:  mov    %edi,0xc(%ecx)
0x0ffad69a:  mov    %edx,0x10(%ecx)
0x0ffad69d:  mov    %ebx,0xc(%eax)
0x0ffad6a0:  mov    0x4(%eax),%edx
0x0ffad6a3:  mov    %ecx,%eax
0x0ffad6a5:  call   0xffab66f

----------------
IN: 
0x0ffab67a:  mov    %eax,0x4(%ecx)
0x0ffab67d:  mov    %eax,(%edx)
0x0ffab67f:  ret    

----------------
IN: 
0x0ffad6aa:  jmp    0xffad6b2

----------------
IN: 
0x0ffad6b2:  mov    %ebx,%eax
0x0ffad6b4:  pop    %ebx
0x0ffad6b5:  pop    %esi
0x0ffad6b6:  pop    %edi
0x0ffad6b7:  pop    %ebp
0x0ffad6b8:  ret    

----------------
IN: 
0x0ffadf42:  pop    %ecx
0x0ffadf43:  test   %eax,%eax
0x0ffadf45:  jne    0xffadf74

----------------
IN: 
0x0ffadf74:  mov    %eax,%edx
0x0ffadf76:  mov    $0xb,%ecx
0x0ffadf7b:  mov    %eax,%edi
0x0ffadf7d:  mov    %ebx,%esi
0x0ffadf7f:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffadf7f:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffadf81:  mov    (%ebx),%ecx
0x0ffadf83:  mov    %ecx,(%eax)
0x0ffadf85:  test   %ecx,%ecx
0x0ffadf87:  je     0xffadf8c

----------------
IN: 
0x0ffadf89:  mov    %eax,0x4(%ecx)
0x0ffadf8c:  mov    0x4(%ebx),%ecx
0x0ffadf8f:  mov    %ecx,0x4(%eax)
0x0ffadf92:  mov    %eax,(%ecx)
0x0ffadf94:  lea    0x14(%eax),%esi
0x0ffadf97:  mov    0x14(%ebx),%ecx
0x0ffadf9a:  mov    %ecx,0x14(%eax)
0x0ffadf9d:  test   %ecx,%ecx
0x0ffadf9f:  je     0xffadfa4

----------------
IN: 
0x0ffadfa4:  mov    0x18(%ebx),%ecx
0x0ffadfa7:  mov    %ecx,0x18(%eax)
0x0ffadfaa:  mov    %esi,(%ecx)
0x0ffadfac:  mov    %edx,%eax
0x0ffadfae:  pop    %ebx
0x0ffadfaf:  pop    %esi
0x0ffadfb0:  pop    %edi
0x0ffadfb1:  ret    

----------------
IN: 
0x0ffae154:  test   %eax,%eax
0x0ffae156:  jne    0xffae16a

----------------
IN: 
0x0ffae16a:  add    $0x2c,%esp
0x0ffae16d:  pop    %ebx
0x0ffae16e:  ret    

----------------
IN: 
0x0ffb2fa2:  mov    0xffbfe88,%eax
0x0ffb2fa7:  xor    %edx,%edx
0x0ffb2fa9:  test   %eax,%eax
0x0ffb2fab:  je     0xffb2fb3

----------------
IN: 
0x0ffb2fad:  mov    %eax,%edx
0x0ffb2faf:  mov    (%eax),%eax
0x0ffb2fb1:  jmp    0xffb2fa9

----------------
IN: 
0x0ffb2fa9:  test   %eax,%eax
0x0ffb2fab:  je     0xffb2fb3

----------------
IN: 
0x0ffb2fb3:  mov    %edx,0xf54d4
0x0ffb2fb9:  mov    $0xf5d00,%ecx
0x0ffb2fbe:  sub    $0xf5500,%ecx
0x0ffb2fc4:  xor    %edx,%edx
0x0ffb2fc6:  mov    $0xf5500,%eax
0x0ffb2fcb:  call   0xeab7b

----------------
IN: 
0x000eab7b:  test   %ecx,%ecx
0x000eab7d:  je     0xeab85

----------------
IN: 
0x000eab7f:  dec    %ecx
0x000eab80:  mov    %dl,(%eax,%ecx,1)
0x000eab83:  jmp    0xeab7b

----------------
IN: 
0x000eab85:  ret    

----------------
IN: 
0x0ffb2fd0:  mov    $0xf5d00,%ecx
0x0ffb2fd5:  mov    %eax,%edx
0x0ffb2fd7:  mov    $0xffbfe80,%eax
0x0ffb2fdc:  call   0xffae11e

----------------
IN: 
0x0ffb2fe1:  call   0xffaba05

----------------
IN: 
0x0ffaba05:  push   %esi
0x0ffaba06:  push   %ebx
0x0ffaba07:  mov    0xf5d24,%ecx
0x0ffaba0d:  lea    -0x1(%ecx),%ebx
0x0ffaba10:  imul   $0x14,%ecx,%ecx
0x0ffaba13:  add    $0xf5d40,%ecx
0x0ffaba19:  test   %ebx,%ebx
0x0ffaba1b:  js     0xffaba3d

----------------
IN: 
0x0ffaba1d:  mov    -0xc(%ecx),%eax
0x0ffaba20:  mov    -0x8(%ecx),%edx
0x0ffaba23:  add    -0x14(%ecx),%eax
0x0ffaba26:  adc    -0x10(%ecx),%edx
0x0ffaba29:  cmp    $0x0,%edx
0x0ffaba2c:  ja     0xffaba37

----------------
IN: 
0x0ffaba37:  dec    %ebx
0x0ffaba38:  sub    $0x14,%ecx
0x0ffaba3b:  jmp    0xffaba19

----------------
IN: 
0x0ffaba19:  test   %ebx,%ebx
0x0ffaba1b:  js     0xffaba3d

----------------
IN: 
0x0ffaba2e:  mov    -0x4(%ecx),%esi
0x0ffaba31:  and    $0xfffffffd,%esi
0x0ffaba34:  dec    %esi
0x0ffaba35:  je     0xffaba3f

----------------
IN: 
0x0ffaba3f:  cmp    $0x100000,%eax
0x0ffaba44:  jae    0xffaba4b

----------------
IN: 
0x0ffaba4b:  mov    %eax,0xf5d20
0x0ffaba50:  pop    %ebx
0x0ffaba51:  pop    %esi
0x0ffaba52:  ret    

----------------
IN: 
0x0ffb2fe6:  call   0xffb1ae5

----------------
IN: 
0x0ffb1ae5:  mov    0xf53e4,%ecx
0x0ffb1aeb:  test   %ecx,%ecx
0x0ffb1aed:  jne    0xffb1b61

----------------
IN: 
0x0ffb1b61:  mov    $0x1,%eax
0x0ffb1b66:  ret    

----------------
IN: 
0x0ffb2feb:  test   %eax,%eax
0x0ffb2fed:  jne    0xffb2ffb

----------------
IN: 
0x0ffb2ffb:  push   $0x2
0x0ffb2ffd:  xor    %ecx,%ecx
0x0ffb2fff:  mov    $0xe,%edx
0x0ffb3004:  mov    $0xf1698,%eax
0x0ffb3009:  call   0xffae2ff

----------------
IN: 
0x0ffae2ff:  push   %ebp
0x0ffae300:  push   %edi
0x0ffae301:  push   %esi
0x0ffae302:  push   %ebx
0x0ffae303:  push   %ebx
0x0ffae304:  mov    %eax,(%esp)
0x0ffae307:  mov    %edx,%edi
0x0ffae309:  mov    %ecx,%esi
0x0ffae30b:  mov    0x18(%esp),%ebp
0x0ffae30f:  mov    $0x94,%eax
0x0ffae314:  call   0xffae09f

----------------
IN: 
0x0ffae09f:  push   %edx
0x0ffae0a0:  mov    %eax,(%esp)
0x0ffae0a3:  call   0xffae08e

----------------
IN: 
0x0ffae08e:  mov    %eax,%edx
0x0ffae090:  mov    $0x10,%ecx
0x0ffae095:  mov    $0xffbfe78,%eax
0x0ffae09a:  jmp    0xffadfb2

----------------
IN: 
0x0ffadfb2:  push   %esi
0x0ffadfb3:  push   %ebx
0x0ffadfb4:  sub    $0x2c,%esp
0x0ffadfb7:  mov    %edx,%ebx
0x0ffadfb9:  test   %edx,%edx
0x0ffadfbb:  je     0xffadfec

----------------
IN: 
0x0ffadfbd:  movl   $0xffffffff,0x28(%esp)
0x0ffadfc5:  lea    0x14(%esp),%esi
0x0ffadfc9:  push   %esi
0x0ffadfca:  mov    (%eax),%eax
0x0ffadfcc:  call   0xffad66d

----------------
IN: 
0x0ffadfd1:  mov    %eax,%ebx
0x0ffadfd3:  pop    %eax
0x0ffadfd4:  test   %ebx,%ebx
0x0ffadfd6:  je     0xffadfec

----------------
IN: 
0x0ffadfd8:  mov    %esp,%eax
0x0ffadfda:  call   0xffadf28

----------------
IN: 
0x0ffadfa1:  mov    %esi,0x4(%ecx)
0x0ffadfa4:  mov    0x18(%ebx),%ecx
0x0ffadfa7:  mov    %ecx,0x18(%eax)
0x0ffadfaa:  mov    %esi,(%ecx)
0x0ffadfac:  mov    %edx,%eax
0x0ffadfae:  pop    %ebx
0x0ffadfaf:  pop    %esi
0x0ffadfb0:  pop    %edi
0x0ffadfb1:  ret    

----------------
IN: 
0x0ffadfdf:  test   %eax,%eax
0x0ffadfe1:  jne    0xffadfec

----------------
IN: 
0x0ffadfec:  mov    %ebx,%eax
0x0ffadfee:  add    $0x2c,%esp
0x0ffadff1:  pop    %ebx
0x0ffadff2:  pop    %esi
0x0ffadff3:  ret    

----------------
IN: 
0x0ffae0a8:  test   %eax,%eax
0x0ffae0aa:  mov    (%esp),%edx
0x0ffae0ad:  jne    0xffae0c1

----------------
IN: 
0x0ffae0c1:  pop    %edx
0x0ffae0c2:  ret    

----------------
IN: 
0x0ffae319:  test   %eax,%eax
0x0ffae31b:  jne    0xffae331

----------------
IN: 
0x0ffae331:  mov    %eax,%ebx
0x0ffae333:  mov    $0x94,%ecx
0x0ffae338:  xor    %edx,%edx
0x0ffae33a:  call   0xeab7b

----------------
IN: 
0x0ffae33f:  lea    0x4(%eax),%eax
0x0ffae342:  mov    $0x80,%ecx
0x0ffae347:  mov    (%esp),%edx
0x0ffae34a:  call   0xffab6af

----------------
IN: 
0x0ffab6af:  push   %esi
0x0ffab6b0:  push   %ebx
0x0ffab6b1:  lea    0x1(%edx),%ebx
0x0ffab6b4:  lea    (%edx,%ecx,1),%esi
0x0ffab6b7:  mov    %eax,%ecx
0x0ffab6b9:  cmp    %esi,%ebx
0x0ffab6bb:  je     0xffab6cb

----------------
IN: 
0x0ffab6bd:  inc    %ebx
0x0ffab6be:  mov    -0x2(%ebx),%dl
0x0ffab6c1:  test   %dl,%dl
0x0ffab6c3:  je     0xffab6cb

----------------
IN: 
0x0ffab6c5:  inc    %ecx
0x0ffab6c6:  mov    %dl,-0x1(%ecx)
0x0ffab6c9:  jmp    0xffab6b9

----------------
IN: 
0x0ffab6b9:  cmp    %esi,%ebx
0x0ffab6bb:  je     0xffab6cb

----------------
IN: 
0x0ffab6cb:  movb   $0x0,(%ecx)
0x0ffab6ce:  pop    %ebx
0x0ffab6cf:  pop    %esi
0x0ffab6d0:  ret    

----------------
IN: 
0x0ffae34f:  mov    %ebp,0x84(%ebx)
0x0ffae355:  mov    %edi,0x8c(%ebx)
0x0ffae35b:  mov    %esi,0x90(%ebx)
0x0ffae361:  movl   $0xffad926,0x88(%ebx)
0x0ffae36b:  mov    0xffbfe5c,%eax
0x0ffae370:  mov    %eax,(%ebx)
0x0ffae372:  mov    %ebx,0xffbfe5c
0x0ffae378:  pop    %eax
0x0ffae379:  pop    %ebx
0x0ffae37a:  pop    %esi
0x0ffae37b:  pop    %edi
0x0ffae37c:  pop    %ebp
0x0ffae37d:  ret    

----------------
IN: 
0x0ffb300e:  push   $0x1
0x0ffb3010:  xor    %ecx,%ecx
0x0ffb3012:  mov    $0x8002,%edx
0x0ffb3017:  mov    $0xf16ab,%eax
0x0ffb301c:  call   0xffae2ff

----------------
IN: 
0x0ffb3021:  push   $0x2
0x0ffb3023:  xor    %ecx,%ecx
0x0ffb3025:  mov    $0xf,%edx
0x0ffb302a:  mov    $0xf16bd,%eax
0x0ffb302f:  call   0xffae2ff

----------------
IN: 
0x0ffb3034:  mov    $0x8,%ecx
0x0ffb3039:  mov    $0xd,%edx
0x0ffb303e:  lea    0x2c(%esp),%eax
0x0ffb3042:  call   0xec37e

----------------
IN: 
0x0ffb3047:  xor    %edx,%edx
0x0ffb3049:  xor    %ecx,%ecx
0x0ffb304b:  mov    $0xf16bd,%eax
0x0ffb3050:  call   0xffad81f

----------------
IN: 
0x0ffad81f:  push   %ebp
0x0ffad820:  mov    %esp,%ebp
0x0ffad822:  push   %edi
0x0ffad823:  push   %esi
0x0ffad824:  sub    $0x8,%esp
0x0ffad827:  mov    %edx,%esi
0x0ffad829:  mov    %ecx,%edi
0x0ffad82b:  call   0xffad7ee

----------------
IN: 
0x0ffad7ee:  push   %edi
0x0ffad7ef:  push   %esi
0x0ffad7f0:  push   %ebx
0x0ffad7f1:  mov    %eax,%esi
0x0ffad7f3:  call   0xe9960

----------------
IN: 
0x000e9960:  mov    %eax,%ecx
0x000e9962:  mov    %eax,%edx
0x000e9964:  cmpb   $0x0,(%edx)
0x000e9967:  je     0xe996c

----------------
IN: 
0x000e9969:  inc    %edx
0x000e996a:  jmp    0xe9964

----------------
IN: 
0x000e9964:  cmpb   $0x0,(%edx)
0x000e9967:  je     0xe996c

----------------
IN: 
0x000e996c:  mov    %edx,%eax
0x000e996e:  sub    %ecx,%eax
0x000e9970:  ret    

----------------
IN: 
0x0ffad7f8:  lea    0x1(%eax),%edi
0x0ffad7fb:  mov    0xffbfe5c,%ebx
0x0ffad801:  test   %ebx,%ebx
0x0ffad803:  je     0xffad819

----------------
IN: 
0x0ffad805:  lea    0x4(%ebx),%edx
0x0ffad808:  mov    %edi,%ecx
0x0ffad80a:  mov    %esi,%eax
0x0ffad80c:  call   0xffab68e

----------------
IN: 
0x0ffab68e:  add    %eax,%ecx
0x0ffab690:  cmp    %ecx,%eax
0x0ffab692:  jne    0xffab697

----------------
IN: 
0x0ffab697:  push   %ebx
0x0ffab698:  mov    (%edx),%bl
0x0ffab69a:  cmp    %bl,(%eax)
0x0ffab69c:  je     0xffab6a5

----------------
IN: 
0x0ffab6a5:  inc    %eax
0x0ffab6a6:  inc    %edx
0x0ffab6a7:  cmp    %ecx,%eax
0x0ffab6a9:  jne    0xffab698

----------------
IN: 
0x0ffab698:  mov    (%edx),%bl
0x0ffab69a:  cmp    %bl,(%eax)
0x0ffab69c:  je     0xffab6a5

----------------
IN: 
0x0ffab6ab:  xor    %eax,%eax
0x0ffab6ad:  pop    %ebx
0x0ffab6ae:  ret    

----------------
IN: 
0x0ffad811:  test   %eax,%eax
0x0ffad813:  je     0xffad819

----------------
IN: 
0x0ffad819:  mov    %ebx,%eax
0x0ffad81b:  pop    %ebx
0x0ffad81c:  pop    %esi
0x0ffad81d:  pop    %edi
0x0ffad81e:  ret    

----------------
IN: 
0x0ffad830:  test   %eax,%eax
0x0ffad832:  jne    0xffad83a

----------------
IN: 
0x0ffad83a:  mov    0x84(%eax),%edx
0x0ffad840:  lea    -0x1(%edx),%ecx
0x0ffad843:  cmp    $0x7,%ecx
0x0ffad846:  ja     0xffad834

----------------
IN: 
0x0ffad848:  test   %edx,%ecx
0x0ffad84a:  jne    0xffad834

----------------
IN: 
0x0ffad84c:  movl   $0x0,(%esp)
0x0ffad853:  movl   $0x0,0x4(%esp)
0x0ffad85b:  mov    $0x8,%ecx
0x0ffad860:  mov    %esp,%edx
0x0ffad862:  call   *0x88(%eax)

----------------
IN: 
0x0ffad926:  push   %esi
0x0ffad927:  push   %ebx
0x0ffad928:  mov    %edx,%esi
0x0ffad92a:  mov    0x84(%eax),%edx
0x0ffad930:  cmp    %ecx,%edx
0x0ffad932:  ja     0xffad97a

----------------
IN: 
0x0ffad934:  mov    %eax,%ebx
0x0ffad936:  mov    0x90(%eax),%ecx
0x0ffad93c:  mov    0x8c(%eax),%eax
0x0ffad942:  test   %ecx,%ecx
0x0ffad944:  jne    0xffad953

----------------
IN: 
0x0ffad946:  mov    %edx,%ecx
0x0ffad948:  mov    %eax,%edx
0x0ffad94a:  mov    %esi,%eax
0x0ffad94c:  call   0xec37e

----------------
IN: 
0x0ffad951:  jmp    0xffad972

----------------
IN: 
0x0ffad972:  mov    0x84(%ebx),%eax
0x0ffad978:  jmp    0xffad97d

----------------
IN: 
0x0ffad97d:  pop    %ebx
0x0ffad97e:  pop    %esi
0x0ffad97f:  ret    

----------------
IN: 
0x0ffad868:  test   %eax,%eax
0x0ffad86a:  js     0xffad834

----------------
IN: 
0x0ffad86c:  mov    (%esp),%eax
0x0ffad86f:  mov    0x4(%esp),%edx
0x0ffad873:  pop    %ecx
0x0ffad874:  pop    %esi
0x0ffad875:  pop    %esi
0x0ffad876:  pop    %edi
0x0ffad877:  pop    %ebp
0x0ffad878:  ret    

----------------
IN: 
0x0ffb3055:  lea    0x0(,%eax,8),%ebx
0x0ffb305c:  push   %ebx
0x0ffb305d:  mov    $0x8,%ecx
0x0ffb3062:  mov    $0xd,%edx
0x0ffb3067:  mov    $0xf16ca,%eax
0x0ffb306c:  call   0xffae2ff

----------------
IN: 
0x0ffb3071:  lea    0x8(%ebx),%ecx
0x0ffb3074:  mov    0x30(%esp),%eax
0x0ffb3078:  shl    $0x3,%eax
0x0ffb307b:  push   %eax
0x0ffb307c:  mov    $0xd,%edx
0x0ffb3081:  mov    $0xf16db,%eax
0x0ffb3086:  call   0xffae2ff

----------------
IN: 
0x0ffb308b:  mov    $0x2,%ecx
0x0ffb3090:  mov    $0x8000,%edx
0x0ffb3095:  lea    0x2a(%esp),%eax
0x0ffb3099:  call   0xec37e

----------------
IN: 
0x0ffb309e:  add    $0x14,%esp
0x0ffb30a1:  mov    $0x2,%esi
0x0ffb30a6:  xor    %ebx,%ebx
0x0ffb30a8:  movzwl 0x16(%esp),%eax
0x0ffb30ad:  cmp    %eax,%ebx
0x0ffb30af:  jge    0xffb3102

----------------
IN: 
0x0ffb3102:  mov    $0x2,%ecx
0x0ffb3107:  mov    $0x8001,%edx
0x0ffb310c:  lea    0x16(%esp),%eax
0x0ffb3110:  call   0xec37e

----------------
IN: 
0x0ffb3115:  mov    $0x2,%esi
0x0ffb311a:  xor    %ebx,%ebx
0x0ffb311c:  movzwl 0x16(%esp),%eax
0x0ffb3121:  cmp    %eax,%ebx
0x0ffb3123:  jge    0xffb31b6

----------------
IN: 
0x0ffb31b6:  mov    $0x4,%ecx
0x0ffb31bb:  mov    $0x19,%edx
0x0ffb31c0:  lea    0x18(%esp),%eax
0x0ffb31c4:  call   0xec37e

----------------
IN: 
0x0ffb31c9:  mov    0x18(%esp),%eax
0x0ffb31cd:  call   0xe9c60

----------------
IN: 
0x0ffb31d2:  mov    %eax,0x18(%esp)
0x0ffb31d6:  xor    %ebx,%ebx
0x0ffb31d8:  cmp    0x18(%esp),%ebx
0x0ffb31dc:  jae    0xffb320e

----------------
IN: 
0x0ffb31de:  mov    $0x40,%edx
0x0ffb31e3:  lea    0x28(%esp),%eax
0x0ffb31e7:  call   0xec35d

----------------
IN: 
0x0ffb31ec:  mov    0x28(%esp),%eax
0x0ffb31f0:  call   0xe9c60

----------------
IN: 
0x0ffb31f5:  mov    0x2c(%esp),%edx
0x0ffb31f9:  xchg   %dh,%dl
0x0ffb31fb:  movzwl %dx,%edx
0x0ffb31fe:  push   %eax
0x0ffb31ff:  xor    %ecx,%ecx
0x0ffb3201:  lea    0x34(%esp),%eax
0x0ffb3205:  call   0xffae2ff

----------------
IN: 
0x0ffb320a:  inc    %ebx
0x0ffb320b:  pop    %esi
0x0ffb320c:  jmp    0xffb31d8

----------------
IN: 
0x0ffb31d8:  cmp    0x18(%esp),%ebx
0x0ffb31dc:  jae    0xffb320e

----------------
IN: 
0x0ffb320e:  mov    $0xf1709,%eax
0x0ffb3213:  call   0xffad7ee

----------------
IN: 
0x0ffab69e:  sbb    %eax,%eax
0x0ffab6a0:  or     $0x1,%eax
0x0ffab6a3:  jmp    0xffab6ad

----------------
IN: 
0x0ffab6ad:  pop    %ebx
0x0ffab6ae:  ret    

----------------
IN: 
0x0ffad815:  mov    (%ebx),%ebx
0x0ffad817:  jmp    0xffad801

----------------
IN: 
0x0ffad801:  test   %ebx,%ebx
0x0ffad803:  je     0xffad819

----------------
IN: 
0x0ffb3218:  test   %eax,%eax
0x0ffb321a:  jne    0xffb32e7

----------------
IN: 
0x0ffb32e7:  mov    $0xf1733,%eax
0x0ffb32ec:  call   0xffad7ee

----------------
IN: 
0x0ffb32f1:  test   %eax,%eax
0x0ffb32f3:  je     0xffb330f

----------------
IN: 
0x0ffb32f5:  movw   $0x600,0xf515c
0x0ffb32fe:  push   $0x600
0x0ffb3303:  push   $0xf1744
0x0ffb3308:  call   0xec4d8

----------------
IN: 
0x000ebf04:  lea    0x4(%ebp),%edx
0x000ebf07:  mov    %edx,(%esp)
0x000ebf0a:  push   %edi
0x000ebf0b:  push   %eax
0x000ebf0c:  mov    0xc(%esp),%edx
0x000ebf10:  mov    %ebx,%eax
0x000ebf12:  call   0xe990b

----------------
IN: 
0x0ffb330d:  pop    %ecx
0x0ffb330e:  pop    %ebx
0x0ffb330f:  movw   $0x0,0x28(%esp)
0x0ffb3316:  mov    $0x2,%ecx
0x0ffb331b:  mov    $0x4,%edx
0x0ffb3320:  lea    0x28(%esp),%eax
0x0ffb3324:  call   0xec37e

----------------
IN: 
0x0ffb3329:  cmpw   $0x0,0x28(%esp)
0x0ffb332f:  je     0xffb2fef

----------------
IN: 
0x0ffb2fef:  xor    %eax,%eax
0x0ffb2ff1:  mov    $0xfff53,%edx
0x0ffb2ff6:  jmp    0xffb33e9

----------------
IN: 
0x0ffb33e9:  mov    %dx,(%eax)
0x0ffb33ec:  movw   $0xf000,0x2(%eax)
0x0ffb33f2:  add    $0x4,%eax
0x0ffb33f5:  cmp    $0x400,%eax
0x0ffb33fa:  jne    0xffb33e9

----------------
IN: 
0x0ffb33fc:  mov    $0x20,%eax
0x0ffb3401:  mov    $0xfd440,%edx
0x0ffb3406:  mov    %dx,(%eax)
0x0ffb3409:  movw   $0xf000,0x2(%eax)
0x0ffb340f:  add    $0x4,%eax
0x0ffb3412:  cmp    $0x40,%eax
0x0ffb3415:  jne    0xffb3406

----------------
IN: 
0x0ffb3406:  mov    %dx,(%eax)
0x0ffb3409:  movw   $0xf000,0x2(%eax)
0x0ffb340f:  add    $0x4,%eax
0x0ffb3412:  cmp    $0x40,%eax
0x0ffb3415:  jne    0xffb3406

----------------
IN: 
0x0ffb3417:  mov    $0x1c0,%eax
0x0ffb341c:  mov    $0xfd449,%edx
0x0ffb3421:  mov    %dx,(%eax)
0x0ffb3424:  movw   $0xf000,0x2(%eax)
0x0ffb342a:  add    $0x4,%eax
0x0ffb342d:  cmp    $0x1e0,%eax
0x0ffb3432:  jne    0xffb3421

----------------
IN: 
0x0ffb3421:  mov    %dx,(%eax)
0x0ffb3424:  movw   $0xf000,0x2(%eax)
0x0ffb342a:  add    $0x4,%eax
0x0ffb342d:  cmp    $0x1e0,%eax
0x0ffb3432:  jne    0xffb3421

----------------
IN: 
0x0ffb3434:  mov    $0xfe2c3,%eax
0x0ffb3439:  mov    %ax,0x8
0x0ffb343f:  movw   $0xf000,0xa
0x0ffb3448:  mov    $0xfff54,%eax
0x0ffb344d:  mov    %ax,0x14
0x0ffb3453:  movw   $0xf000,0x16
0x0ffb345c:  mov    $0xff065,%eax
0x0ffb3461:  mov    %ax,0x40
0x0ffb3467:  movw   $0xf000,0x42
0x0ffb3470:  mov    $0xff84d,%eax
0x0ffb3475:  mov    %ax,0x44
0x0ffb347b:  movw   $0xf000,0x46
0x0ffb3484:  mov    $0xff841,%eax
0x0ffb3489:  mov    %ax,0x48
0x0ffb348f:  movw   $0xf000,0x4a
0x0ffb3498:  mov    $0xfe3fe,%eax
0x0ffb349d:  mov    %ax,0x4c
0x0ffb34a3:  movw   $0xf000,0x4e
0x0ffb34ac:  mov    $0xfe739,%eax
0x0ffb34b1:  mov    %ax,0x50
0x0ffb34b7:  movw   $0xf000,0x52
0x0ffb34c0:  mov    $0xff859,%eax
0x0ffb34c5:  mov    %ax,0x54
0x0ffb34cb:  movw   $0xf000,0x56
0x0ffb34d4:  mov    $0xfe82e,%eax
0x0ffb34d9:  mov    %ax,0x58
0x0ffb34df:  movw   $0xf000,0x5a
0x0ffb34e8:  mov    $0xfefd2,%eax
0x0ffb34ed:  mov    %ax,0x5c
0x0ffb34f3:  movw   $0xf000,0x5e
0x0ffb34fc:  mov    $0xfd465,%eax
0x0ffb3501:  mov    %ax,0x60
0x0ffb3507:  movw   $0xf000,0x62
0x0ffb3510:  mov    $0xfe6f2,%eax
0x0ffb3515:  mov    %ax,0x64
0x0ffb351b:  movw   $0xf000,0x66
0x0ffb3524:  mov    $0xffe6e,%eax
0x0ffb3529:  mov    %ax,0x68
0x0ffb352f:  movw   $0xf000,0x6a
0x0ffb3538:  mov    $0xfec59,%eax
0x0ffb353d:  mov    %ax,0x100
0x0ffb3543:  movw   $0xf000,0x102
0x0ffb354c:  mov    $0x180,%eax
0x0ffb3551:  movl   $0x0,(%eax)
0x0ffb3557:  add    $0x4,%eax
0x0ffb355a:  cmp    $0x19c,%eax
0x0ffb355f:  jne    0xffb3551

----------------
IN: 
0x0ffb3551:  movl   $0x0,(%eax)
0x0ffb3557:  add    $0x4,%eax
0x0ffb355a:  cmp    $0x19c,%eax
0x0ffb355f:  jne    0xffb3551

----------------
IN: 
0x0ffb3561:  movl   $0x0,0x1e4
0x0ffb356b:  mov    $0x100,%ecx
0x0ffb3570:  xor    %edx,%edx
0x0ffb3572:  mov    $0x400,%eax
0x0ffb3577:  call   0xeab7b

----------------
IN: 
0x0ffb357c:  movw   $0x9fc0,0x40e
0x0ffb3585:  movw   $0x27f,0x413
0x0ffb358e:  mov    $0x121,%ecx
0x0ffb3593:  mov    $0x9fc00,%eax
0x0ffb3598:  call   0xeab7b

----------------
IN: 
0x0ffb359d:  movb   $0x1,0x9fc00
0x0ffb35a4:  push   $0x2
0x0ffb35a6:  push   $0x0
0x0ffb35a8:  push   $0x400
0x0ffb35ad:  mov    $0x9fc00,%eax
0x0ffb35b2:  xor    %edx,%edx
0x0ffb35b4:  call   0xffadf0b

----------------
IN: 
0x0ffadf0b:  push   %edi
0x0ffadf0c:  push   %esi
0x0ffadf0d:  push   %ebx
0x0ffadf0e:  mov    0x10(%esp),%ebx
0x0ffadf12:  mov    0x14(%esp),%ecx
0x0ffadf16:  mov    %ecx,%edi
0x0ffadf18:  or     %ebx,%edi
0x0ffadf1a:  je     0xffadf24

----------------
IN: 
0x0ffadf1c:  pop    %ebx
0x0ffadf1d:  pop    %esi
0x0ffadf1e:  pop    %edi
0x0ffadf1f:  jmp    0xffadd3c

----------------
IN: 
0x0ffadd3c:  push   %ebp
0x0ffadd3d:  push   %edi
0x0ffadd3e:  push   %esi
0x0ffadd3f:  push   %ebx
0x0ffadd40:  sub    $0x24,%esp
0x0ffadd43:  mov    %eax,0xc(%esp)
0x0ffadd47:  mov    %edx,0x10(%esp)
0x0ffadd4b:  mov    0x38(%esp),%eax
0x0ffadd4f:  mov    0x3c(%esp),%edx
0x0ffadd53:  mov    %eax,0x1c(%esp)
0x0ffadd57:  mov    %edx,0x20(%esp)
0x0ffadd5b:  mov    0x40(%esp),%ebp
0x0ffadd5f:  mov    %eax,%esi
0x0ffadd61:  mov    %edx,%edi
0x0ffadd63:  add    0xc(%esp),%esi
0x0ffadd67:  adc    0x10(%esp),%edi
0x0ffadd6b:  mov    %esi,(%esp)
0x0ffadd6e:  mov    %edi,0x4(%esp)
0x0ffadd72:  mov    0xf5d24,%edx
0x0ffadd78:  movl   $0x0,0x8(%esp)
0x0ffadd80:  cmp    %edx,0x8(%esp)
0x0ffadd84:  jge    0xffaded2

----------------
IN: 
0x0ffadd8a:  imul   $0x14,0x8(%esp),%eax
0x0ffadd8f:  mov    0xf5d40(%eax),%ecx
0x0ffadd95:  mov    0xf5d44(%eax),%ebx
0x0ffadd9b:  mov    %ecx,%esi
0x0ffadd9d:  mov    %ebx,%edi
0x0ffadd9f:  add    0xf5d48(%eax),%esi
0x0ffadda5:  adc    0xf5d4c(%eax),%edi
0x0ffaddab:  mov    %esi,0x14(%esp)
0x0ffaddaf:  mov    %edi,0x18(%esp)
0x0ffaddb3:  mov    0x14(%esp),%edi
0x0ffaddb7:  cmp    0xc(%esp),%edi
0x0ffaddbb:  mov    0x18(%esp),%edi
0x0ffaddbf:  sbb    0x10(%esp),%edi
0x0ffaddc3:  jae    0xffaddcb

----------------
IN: 
0x0ffaddcb:  cmp    0xc(%esp),%ecx
0x0ffaddcf:  mov    %ebx,%edi
0x0ffaddd1:  sbb    0x10(%esp),%edi
0x0ffaddd5:  jae    0xffade52

----------------
IN: 
0x0ffaddd7:  add    $0xf5d40,%eax
0x0ffadddc:  mov    %eax,%edi
0x0ffaddde:  mov    0x10(%eax),%eax
0x0ffadde1:  mov    %eax,%esi
0x0ffadde3:  cmp    %ebp,%eax
0x0ffadde5:  jne    0xffade04

----------------
IN: 
0x0ffade04:  mov    0xc(%esp),%eax
0x0ffade08:  mov    0x10(%esp),%edx
0x0ffade0c:  sub    %ecx,%eax
0x0ffade0e:  sbb    %ebx,%edx
0x0ffade10:  mov    %eax,0x8(%edi)
0x0ffade13:  mov    %edx,0xc(%edi)
0x0ffade16:  incl   0x8(%esp)
0x0ffade1a:  mov    0x14(%esp),%eax
0x0ffade1e:  cmp    %eax,(%esp)
0x0ffade21:  mov    0x4(%esp),%eax
0x0ffade25:  sbb    0x18(%esp),%eax
0x0ffade29:  jae    0xffade52

----------------
IN: 
0x0ffade52:  imul   $0x14,0x8(%esp),%ebx
0x0ffade57:  mov    0x8(%esp),%eax
0x0ffade5b:  cmp    0xf5d24,%eax
0x0ffade61:  jge    0xffaded2

----------------
IN: 
0x0ffade63:  lea    0xf5d40(%ebx),%ecx
0x0ffade69:  mov    0xf5d40(%ebx),%eax
0x0ffade6f:  mov    0xf5d44(%ebx),%edx
0x0ffade75:  cmp    %eax,(%esp)
0x0ffade78:  mov    0x4(%esp),%edi
0x0ffade7c:  sbb    %edx,%edi
0x0ffade7e:  jb     0xffaded2

----------------
IN: 
0x0ffaded2:  cmp    $0xffffffff,%ebp
0x0ffaded5:  je     0xffadf03

----------------
IN: 
0x0ffaded7:  mov    %ebp,0x40(%esp)
0x0ffadedb:  mov    0x1c(%esp),%eax
0x0ffadedf:  mov    0x20(%esp),%edx
0x0ffadee3:  mov    %eax,0x38(%esp)
0x0ffadee7:  mov    %edx,0x3c(%esp)
0x0ffadeeb:  mov    0xc(%esp),%edx
0x0ffadeef:  mov    0x10(%esp),%ecx
0x0ffadef3:  mov    0x8(%esp),%eax
0x0ffadef7:  add    $0x24,%esp
0x0ffadefa:  pop    %ebx
0x0ffadefb:  pop    %esi
0x0ffadefc:  pop    %edi
0x0ffadefd:  pop    %ebp
0x0ffadefe:  jmp    0xffadcb2

----------------
IN: 
0x0ffadcb2:  push   %ebp
0x0ffadcb3:  push   %edi
0x0ffadcb4:  push   %esi
0x0ffadcb5:  push   %ebx
0x0ffadcb6:  sub    $0xc,%esp
0x0ffadcb9:  mov    %ecx,%edi
0x0ffadcbb:  mov    0x20(%esp),%ecx
0x0ffadcbf:  mov    0x24(%esp),%ebx
0x0ffadcc3:  mov    %ecx,(%esp)
0x0ffadcc6:  mov    %ebx,0x4(%esp)
0x0ffadcca:  mov    0x28(%esp),%ebp
0x0ffadcce:  mov    0xf5d24,%ecx
0x0ffadcd4:  cmp    $0x1f,%ecx
0x0ffadcd7:  jle    0xffadcef

----------------
IN: 
0x0ffadcef:  mov    %edx,%esi
0x0ffadcf1:  imul   $0x14,%eax,%ebx
0x0ffadcf4:  sub    %eax,%ecx
0x0ffadcf6:  imul   $0x14,%ecx,%ecx
0x0ffadcf9:  lea    0xf5d40(%ebx),%edx
0x0ffadcff:  lea    0xf5d54(%ebx),%eax
0x0ffadd05:  mov    %edx,0x8(%esp)
0x0ffadd09:  call   0xffad59d

----------------
IN: 
0x0ffadd0e:  incl   0xf5d24
0x0ffadd14:  mov    %esi,0xf5d40(%ebx)
0x0ffadd1a:  mov    %edi,0xf5d44(%ebx)
0x0ffadd20:  mov    (%esp),%esi
0x0ffadd23:  mov    0x4(%esp),%edi
0x0ffadd27:  mov    0x8(%esp),%edx
0x0ffadd2b:  mov    %esi,0x8(%edx)
0x0ffadd2e:  mov    %edi,0xc(%edx)
0x0ffadd31:  mov    %ebp,0x10(%edx)
0x0ffadd34:  add    $0xc,%esp
0x0ffadd37:  pop    %ebx
0x0ffadd38:  pop    %esi
0x0ffadd39:  pop    %edi
0x0ffadd3a:  pop    %ebp
0x0ffadd3b:  ret    

----------------
IN: 
0x0ffb35b9:  mov    $0xe9798,%eax
0x0ffb35be:  sub    $0xd9800,%eax
0x0ffb35c3:  mov    %eax,0xe8f90
0x0ffb35c8:  mov    $0xb8,%al
0x0ffb35ca:  out    %al,$0x70
0x0ffb35cc:  in     $0x71,%al
0x0ffb35ce:  add    $0xc,%esp
0x0ffb35d1:  test   $0x1,%al
0x0ffb35d3:  je     0xffb35df

----------------
IN: 
0x0ffb35df:  mov    $0xbd,%al
0x0ffb35e1:  out    %al,$0x70
0x0ffb35e3:  in     $0x71,%al
0x0ffb35e5:  movzbl %al,%edx
0x0ffb35e8:  mov    $0xb8,%al
0x0ffb35ea:  out    %al,$0x70
0x0ffb35ec:  in     $0x71,%al
0x0ffb35ee:  shl    $0x4,%eax
0x0ffb35f1:  and    $0xf00,%eax
0x0ffb35f6:  or     %eax,%edx
0x0ffb35f8:  movl   $0x270f,0xffbfe44
0x0ffb3602:  movl   $0x270f,0xffbfe48
0x0ffb360c:  movl   $0x270f,0xffbfe4c
0x0ffb3616:  movl   $0x270f,0xffbfe50
0x0ffb3620:  xor    %edi,%edi
0x0ffb3622:  movb   $0x0,0x3(%esp)
0x0ffb3627:  xor    %ebx,%ebx
0x0ffb3629:  xor    %ecx,%ecx
0x0ffb362b:  mov    $0x65,%eax
0x0ffb3630:  mov    %edx,%esi
0x0ffb3632:  and    $0xf,%esi
0x0ffb3635:  mov    %edx,0x10(%esp)
0x0ffb3639:  shr    $0x4,%edx
0x0ffb363c:  cmp    $0x3,%esi
0x0ffb363f:  je     0xffb366a

----------------
IN: 
0x0ffb3641:  testb  $0xc,0x10(%esp)
0x0ffb3646:  jne    0xffb365a

----------------
IN: 
0x0ffb3648:  cmp    $0x1,%esi
0x0ffb364b:  je     0xffb3675

----------------
IN: 
0x0ffb364d:  cmp    $0x2,%esi
0x0ffb3650:  jne    0xffb3679

----------------
IN: 
0x0ffb3652:  mov    %eax,0x8(%esp)
0x0ffb3656:  mov    $0x1,%bl
0x0ffb3658:  jmp    0xffb3679

----------------
IN: 
0x0ffb3679:  inc    %eax
0x0ffb367a:  cmp    $0x68,%eax
0x0ffb367d:  jne    0xffb3630

----------------
IN: 
0x0ffb3630:  mov    %edx,%esi
0x0ffb3632:  and    $0xf,%esi
0x0ffb3635:  mov    %edx,0x10(%esp)
0x0ffb3639:  shr    $0x4,%edx
0x0ffb363c:  cmp    $0x3,%esi
0x0ffb363f:  je     0xffb366a

----------------
IN: 
0x0ffb3675:  mov    %eax,%ebp
0x0ffb3677:  mov    $0x1,%cl
0x0ffb3679:  inc    %eax
0x0ffb367a:  cmp    $0x68,%eax
0x0ffb367d:  jne    0xffb3630

----------------
IN: 
0x0ffb366a:  mov    %eax,0xc(%esp)
0x0ffb366e:  movb   $0x1,0x3(%esp)
0x0ffb3673:  jmp    0xffb3679

----------------
IN: 
0x0ffb367f:  mov    %edi,%eax
0x0ffb3681:  test   %al,%al
0x0ffb3683:  je     0xffb368e

----------------
IN: 
0x0ffb368e:  cmpb   $0x0,0x3(%esp)
0x0ffb3693:  je     0xffb369e

----------------
IN: 
0x0ffb3695:  mov    0xc(%esp),%eax
0x0ffb3699:  mov    %eax,0xffbfe4c
0x0ffb369e:  test   %bl,%bl
0x0ffb36a0:  je     0xffb36ab

----------------
IN: 
0x0ffb36a2:  mov    0x8(%esp),%eax
0x0ffb36a6:  mov    %eax,0xffbfe48
0x0ffb36ab:  test   %cl,%cl
0x0ffb36ad:  je     0xffb36b5

----------------
IN: 
0x0ffb36af:  mov    %ebp,0xffbfe50
0x0ffb36b5:  mov    $0xea60,%edx
0x0ffb36ba:  xor    %ecx,%ecx
0x0ffb36bc:  mov    $0xf1780,%eax
0x0ffb36c1:  call   0xffad81f

----------------
IN: 
0x0ffb36c6:  mov    %eax,0xf54c0
0x0ffb36cb:  xor    %edx,%edx
0x0ffb36cd:  mov    $0xf1793,%eax
0x0ffb36d2:  call   0xffae1dd

----------------
IN: 
0x0ffae1dd:  push   %ebp
0x0ffae1de:  push   %edi
0x0ffae1df:  push   %esi
0x0ffae1e0:  push   %ebx
0x0ffae1e1:  mov    %edx,%ebp
0x0ffae1e3:  call   0xffad7ee

----------------
IN: 
0x0ffae1e8:  test   %eax,%eax
0x0ffae1ea:  je     0xffae23f

----------------
IN: 
0x0ffae1ec:  mov    %eax,%esi
0x0ffae1ee:  mov    0x84(%eax),%edi
0x0ffae1f4:  xor    %ebx,%ebx
0x0ffae1f6:  test   %edi,%edi
0x0ffae1f8:  je     0xffae241

----------------
IN: 
0x0ffae1fa:  lea    0x1(%edi),%eax
0x0ffae1fd:  call   0xffae08e

----------------
IN: 
0x0ffae202:  mov    %eax,%ebx
0x0ffae204:  test   %eax,%eax
0x0ffae206:  jne    0xffae219

----------------
IN: 
0x0ffae219:  mov    %edi,%ecx
0x0ffae21b:  mov    %eax,%edx
0x0ffae21d:  mov    %esi,%eax
0x0ffae21f:  call   *0x88(%esi)

----------------
IN: 
0x0ffae225:  test   %eax,%eax
0x0ffae227:  jns    0xffae232

----------------
IN: 
0x0ffae232:  test   %ebp,%ebp
0x0ffae234:  je     0xffae239

----------------
IN: 
0x0ffae239:  movb   $0x0,(%ebx,%edi,1)
0x0ffae23d:  jmp    0xffae241

----------------
IN: 
0x0ffae241:  mov    %ebx,%eax
0x0ffae243:  pop    %ebx
0x0ffae244:  pop    %esi
0x0ffae245:  pop    %edi
0x0ffae246:  pop    %ebp
0x0ffae247:  ret    

----------------
IN: 
0x0ffb36d7:  mov    %eax,%ebx
0x0ffb36d9:  test   %eax,%eax
0x0ffb36db:  je     0xffb3796

----------------
IN: 
0x0ffb36e1:  movl   $0x1,0xffbff30
0x0ffb36eb:  mov    %eax,%edx
0x0ffb36ed:  xor    %esi,%esi
0x0ffb36ef:  mov    $0x1,%eax
0x0ffb36f4:  mov    (%edx),%cl
0x0ffb36f6:  test   %cl,%cl
0x0ffb36f8:  je     0xffb3708

----------------
IN: 
0x0ffb36fa:  cmp    $0xa,%cl
0x0ffb36fd:  jne    0xffb3705

----------------
IN: 
0x0ffb3705:  inc    %edx
0x0ffb3706:  jmp    0xffb36f4

----------------
IN: 
0x0ffb36f4:  mov    (%edx),%cl
0x0ffb36f6:  test   %cl,%cl
0x0ffb36f8:  je     0xffb3708

----------------
IN: 
0x0ffb3708:  mov    %esi,%ecx
0x0ffb370a:  test   %cl,%cl
0x0ffb370c:  je     0xffb3713

----------------
IN: 
0x0ffb3713:  mov    0xffbff30,%eax
0x0ffb3718:  shl    $0x2,%eax
0x0ffb371b:  call   0xffae08e

----------------
IN: 
0x0ffb3720:  mov    %eax,0xffbfe54
0x0ffb3725:  test   %eax,%eax
0x0ffb3727:  jne    0xffb374b

----------------
IN: 
0x0ffb374b:  push   $0xf179d
0x0ffb3750:  call   0xec4d8

----------------
IN: 
0x0ffb3755:  pop    %edx
0x0ffb3756:  xor    %esi,%esi
0x0ffb3758:  mov    0xffbfe54,%eax
0x0ffb375d:  lea    (%eax,%esi,4),%edi
0x0ffb3760:  mov    %ebx,(%edi)
0x0ffb3762:  mov    (%ebx),%al
0x0ffb3764:  test   %al,%al
0x0ffb3766:  je     0xffb3777

----------------
IN: 
0x0ffb3768:  lea    0x1(%ebx),%edx
0x0ffb376b:  cmp    $0xa,%al
0x0ffb376d:  je     0xffb3956

----------------
IN: 
0x0ffb3773:  mov    %edx,%ebx
0x0ffb3775:  jmp    0xffb3762

----------------
IN: 
0x0ffb3762:  mov    (%ebx),%al
0x0ffb3764:  test   %al,%al
0x0ffb3766:  je     0xffb3777

----------------
IN: 
0x0ffb3777:  xor    %ebx,%ebx
0x0ffb3779:  mov    (%edi),%eax
0x0ffb377b:  call   0xffab6d1

----------------
IN: 
0x0ffab6d1:  push   %ebx
0x0ffab6d2:  mov    %eax,%ebx
0x0ffab6d4:  call   0xe9960

----------------
IN: 
0x0ffab6d9:  lea    -0x1(%ebx,%eax,1),%eax
0x0ffab6dd:  cmp    %ebx,%eax
0x0ffab6df:  jb     0xffab6f2

----------------
IN: 
0x0ffab6e1:  cmpb   $0x20,(%eax)
0x0ffab6e4:  jg     0xffab6f2

----------------
IN: 
0x0ffab6f2:  mov    (%ebx),%al
0x0ffab6f4:  cmp    $0x20,%al
0x0ffab6f6:  jle    0xffab6ed

----------------
IN: 
0x0ffab6f8:  mov    %ebx,%eax
0x0ffab6fa:  pop    %ebx
0x0ffab6fb:  ret    

----------------
IN: 
0x0ffb3780:  mov    %eax,(%edi)
0x0ffb3782:  inc    %esi
0x0ffb3783:  push   %eax
0x0ffb3784:  push   %esi
0x0ffb3785:  push   $0xf17aa
0x0ffb378a:  call   0xec4d8

----------------
IN: 
0x000ebf48:  lea    0x4(%ebp),%edi
0x000ebf4b:  mov    0x0(%ebp),%ebp
0x000ebf4e:  movsbl 0x0(%ebp),%edx
0x000ebf52:  test   %dl,%dl
0x000ebf54:  je     0xebf70

----------------
IN: 
0x000ebf56:  mov    %ebx,%eax
0x000ebf58:  call   0xe9803

----------------
IN: 
0x000ebf5d:  inc    %ebp
0x000ebf5e:  jmp    0xebf4e

----------------
IN: 
0x000ebf4e:  movsbl 0x0(%ebp),%edx
0x000ebf52:  test   %dl,%dl
0x000ebf54:  je     0xebf70

----------------
IN: 
0x0ffb378f:  add    $0xc,%esp
0x0ffb3792:  test   %ebx,%ebx
0x0ffb3794:  jne    0xffb3758

----------------
IN: 
0x0ffb3796:  xor    %edx,%edx
0x0ffb3798:  mov    $0xf17b2,%eax
0x0ffb379d:  call   0xffae1dd

----------------
IN: 
0x0ffb37a2:  mov    %eax,%ebx
0x0ffb37a4:  test   %eax,%eax
0x0ffb37a6:  je     0xffb389b

----------------
IN: 
0x0ffb389b:  movl   $0xfd27e,0xf6044
0x0ffb38a5:  mov    $0x10,%edx
0x0ffb38aa:  mov    $0xf6040,%eax
0x0ffb38af:  call   0xeaaa5

----------------
IN: 
0x000eaaa5:  add    %eax,%edx
0x000eaaa7:  xor    %ecx,%ecx
0x000eaaa9:  cmp    %edx,%eax
0x000eaaab:  je     0xeaab2

----------------
IN: 
0x000eaaad:  add    (%eax),%cl
0x000eaaaf:  inc    %eax
0x000eaab0:  jmp    0xeaaa9

----------------
IN: 
0x000eaaa9:  cmp    %edx,%eax
0x000eaaab:  je     0xeaab2

----------------
IN: 
0x000eaab2:  mov    %cl,%al
0x000eaab4:  ret    

----------------
IN: 
0x0ffb38b4:  sub    %al,0xf604a
0x0ffb38ba:  mov    $0xfd0c3,%eax
0x0ffb38bf:  mov    %ax,0xf5d17
0x0ffb38c5:  movw   $0xf000,0xf5d19
0x0ffb38ce:  mov    $0x10,%edx
0x0ffb38d3:  mov    $0xf5d10,%eax
0x0ffb38d8:  call   0xeaaa5

----------------
IN: 
0x0ffb38dd:  sub    %al,0xf5d16
0x0ffb38e3:  mov    $0xfd125,%eax
0x0ffb38e8:  mov    %ax,0xf606d
0x0ffb38ee:  mov    $0xfd121,%eax
0x0ffb38f3:  mov    %ax,0xf6071
0x0ffb38f9:  mov    $0x21,%edx
0x0ffb38fe:  mov    $0xf6060,%eax
0x0ffb3903:  call   0xeaaa5

----------------
IN: 
0x0ffb3908:  sub    %al,0xf6068
0x0ffb390e:  movb   $0x10,0x496
0x0ffb3915:  movw   $0x1e,0x41a
0x0ffb391e:  movw   $0x1e,0x41c
0x0ffb3927:  movw   $0x1e,0x480
0x0ffb3930:  movw   $0x3e,0x482
0x0ffb3939:  orw    $0x4,0x410
0x0ffb3941:  add    $0xa8,%esp
0x0ffb3947:  pop    %ebx
0x0ffb3948:  pop    %esi
0x0ffb3949:  pop    %edi
0x0ffb394a:  pop    %ebp
0x0ffb394b:  ret    

----------------
IN: 
0x0ffbbac1:  call   0xffb934b

----------------
IN: 
0x0ffb934b:  push   %ebp
0x0ffb934c:  push   %edi
0x0ffb934d:  push   %esi
0x0ffb934e:  push   %ebx
0x0ffb934f:  sub    $0xa8,%esp
0x0ffb9355:  xor    %edx,%edx
0x0ffb9357:  mov    %dl,%al
0x0ffb9359:  out    %al,$0xd
0x0ffb935b:  out    %al,$0xda
0x0ffb935d:  mov    $0xc0,%al
0x0ffb935f:  out    %al,$0xd6
0x0ffb9361:  mov    %dl,%al
0x0ffb9363:  out    %al,$0xd4
0x0ffb9365:  call   0xea98a

----------------
IN: 
0x000ea98a:  mov    $0x11,%al
0x000ea98c:  out    %al,$0x20
0x000ea98e:  out    %al,$0xa0
0x000ea990:  mov    $0x8,%al
0x000ea992:  out    %al,$0x21
0x000ea994:  mov    $0x70,%al
0x000ea996:  out    %al,$0xa1
0x000ea998:  mov    $0x4,%al
0x000ea99a:  out    %al,$0x21
0x000ea99c:  mov    $0x2,%al
0x000ea99e:  out    %al,$0xa1
0x000ea9a0:  mov    $0x1,%al
0x000ea9a2:  out    %al,$0x21
0x000ea9a4:  out    %al,$0xa1
0x000ea9a6:  mov    $0xfb,%al
0x000ea9a8:  out    %al,$0x21
0x000ea9aa:  mov    $0xff,%al
0x000ea9ac:  out    %al,$0xa1
0x000ea9ae:  ret    

----------------
IN: 
0x0ffb936a:  movb   $0x1,0xf54e1
0x0ffb9371:  mov    $0x1,%eax
0x0ffb9376:  call   0xebf98

----------------
IN: 
0x000ebf98:  push   %ebx
0x000ebf99:  mov    %eax,%ebx
0x000ebf9b:  mov    %esp,%eax
0x000ebf9d:  cmp    $0x7000,%eax
0x000ebfa2:  jbe    0xebfae

----------------
IN: 
0x000ebfae:  mov    $0x18,%ecx
0x000ebfb3:  xor    %edx,%edx
0x000ebfb5:  mov    $0xe979c,%eax
0x000ebfba:  call   0xeab7b

----------------
IN: 
0x000ebfbf:  test   %ebx,%ebx
0x000ebfc1:  je     0xebfca

----------------
IN: 
0x000ebfc3:  movb   $0x1,0xe979c
0x000ebfca:  movb   $0x1,0xe979e
0x000ebfd1:  pop    %ebx
0x000ebfd2:  ret    

----------------
IN: 
0x0ffb937b:  mov    $0x1,%edx
0x0ffb9380:  xor    %ecx,%ecx
0x0ffb9382:  mov    $0xf36c4,%eax
0x0ffb9387:  call   0xffad81f

----------------
IN: 
0x0ffad834:  mov    %esi,%eax
0x0ffad836:  mov    %edi,%edx
0x0ffad838:  jmp    0xffad873

----------------
IN: 
0x0ffad873:  pop    %ecx
0x0ffad874:  pop    %esi
0x0ffad875:  pop    %esi
0x0ffad876:  pop    %edi
0x0ffad877:  pop    %ebp
0x0ffad878:  ret    

----------------
IN: 
0x0ffb938c:  mov    %al,0xf54e0
0x0ffb9391:  orw    $0x2,0x410
0x0ffb9399:  mov    $0xfd437,%edx
0x0ffb939e:  movzwl %dx,%edx
0x0ffb93a1:  or     $0xf0000000,%edx
0x0ffb93a7:  mov    $0xd,%eax
0x0ffb93ac:  call   0xffad04c

----------------
IN: 
0x0ffad04c:  push   %esi
0x0ffad04d:  push   %ebx
0x0ffad04e:  mov    %eax,%ecx
0x0ffad050:  mov    %edx,%ebx
0x0ffad052:  mov    $0x1,%edx
0x0ffad057:  shl    %cl,%edx
0x0ffad059:  in     $0x21,%al
0x0ffad05b:  mov    %edx,%esi
0x0ffad05d:  not    %esi
0x0ffad05f:  and    %esi,%eax
0x0ffad061:  out    %al,$0x21
0x0ffad063:  in     $0xa1,%al
0x0ffad065:  shr    $0x8,%dx
0x0ffad069:  not    %edx
0x0ffad06b:  and    %edx,%eax
0x0ffad06d:  out    %al,$0xa1
0x0ffad06f:  lea    0x8(%ecx),%eax
0x0ffad072:  cmp    $0x7,%ecx
0x0ffad075:  jle    0xffad07a

----------------
IN: 
0x0ffad077:  lea    0x68(%ecx),%eax
0x0ffad07a:  mov    %ebx,0x0(,%eax,4)
0x0ffad081:  pop    %ebx
0x0ffad082:  pop    %esi
0x0ffad083:  ret    

----------------
IN: 
0x0ffb93b1:  call   0xffb56c9

----------------
IN: 
0x0ffb56c9:  push   %ebp
0x0ffb56ca:  push   %edi
0x0ffb56cb:  push   %esi
0x0ffb56cc:  push   %ebx
0x0ffb56cd:  sub    $0xd4,%esp
0x0ffb56d3:  call   0xe97da

----------------
IN: 
0x0ffb56d8:  mov    %eax,0xc(%esp)
0x0ffb56dc:  test   %eax,%eax
0x0ffb56de:  je     0xffb5890

----------------
IN: 
0x0ffb5890:  testb  $0x4,0xf5d00
0x0ffb5897:  lea    0x50(%esp),%esi
0x0ffb589b:  je     0xffb5970

----------------
IN: 
0x0ffb5970:  call   0xffaffe1

----------------
IN: 
0x0ffaffe1:  push   %ebp
0x0ffaffe2:  push   %edi
0x0ffaffe3:  push   %esi
0x0ffaffe4:  push   %ebx
0x0ffaffe5:  sub    $0x60,%esp
0x0ffaffe8:  push   $0xf0b85
0x0ffaffed:  call   0xec4d8

----------------
IN: 
0x0ffafff2:  mov    $0xcf8,%edx
0x0ffafff7:  mov    $0x80000000,%eax
0x0ffafffc:  out    %eax,(%dx)
0x0ffafffd:  in     (%dx),%eax
0x0ffafffe:  pop    %ebp
0x0ffaffff:  cmp    $0x80000000,%eax
0x0ffb0004:  jne    0xffb0058

----------------
IN: 
0x0ffb0006:  xor    %edx,%edx
0x0ffb0008:  xor    %ecx,%ecx
0x0ffb000a:  mov    $0xf0b45,%eax
0x0ffb000f:  call   0xffad81f

----------------
IN: 
0x0ffb0014:  mov    %eax,%ebx
0x0ffb0016:  movb   $0x0,0x54(%esp)
0x0ffb001b:  lea    0x54(%esp),%edx
0x0ffb001f:  xor    %eax,%eax
0x0ffb0021:  call   0xffaf5f0

----------------
IN: 
0x0ffaf5f0:  push   %ebp
0x0ffaf5f1:  push   %edi
0x0ffaf5f2:  push   %esi
0x0ffaf5f3:  push   %ebx
0x0ffaf5f4:  sub    $0x8,%esp
0x0ffaf5f7:  mov    %eax,%ebx
0x0ffaf5f9:  mov    %edx,%edi
0x0ffaf5fb:  push   %eax
0x0ffaf5fc:  push   $0xffbf27c
0x0ffaf601:  push   $0xf0864
0x0ffaf606:  call   0xec4d8

----------------
IN: 
0x0ffaf60b:  mov    %ebx,%eax
0x0ffaf60d:  shl    $0x8,%eax
0x0ffaf610:  dec    %eax
0x0ffaf611:  mov    %eax,0xc(%esp)
0x0ffaf615:  mov    %ebx,%edx
0x0ffaf617:  call   0xea50b

----------------
IN: 
0x000ea50b:  push   %esi
0x000ea50c:  push   %ebx
0x000ea50d:  mov    %eax,%ebx
0x000ea50f:  mov    %edx,%esi
0x000ea511:  test   $0x7,%al
0x000ea513:  jne    0xea546

----------------
IN: 
0x000ea546:  inc    %ebx
0x000ea547:  jmp    0xea529

----------------
IN: 
0x000ea529:  movzwl %bx,%eax
0x000ea52c:  movzbl %bh,%edx
0x000ea52f:  cmp    %esi,%edx
0x000ea531:  jne    0xea549

----------------
IN: 
0x000ea533:  xor    %edx,%edx
0x000ea535:  call   0xea491

----------------
IN: 
0x000ea53a:  dec    %eax
0x000ea53b:  cmp    $0xfffffffd,%ax
0x000ea53f:  jbe    0xea54c

----------------
IN: 
0x000ea54c:  mov    %ebx,%eax
0x000ea54e:  pop    %ebx
0x000ea54f:  pop    %esi
0x000ea550:  ret    

----------------
IN: 
0x0ffaf61c:  mov    %eax,%esi
0x0ffaf61e:  add    $0xc,%esp
0x0ffaf621:  test   %esi,%esi
0x0ffaf623:  js     0xffaf666

----------------
IN: 
0x0ffaf625:  movzwl %si,%ebp
0x0ffaf628:  mov    $0xa,%edx
0x0ffaf62d:  mov    %ebp,%eax
0x0ffaf62f:  call   0xea491

----------------
IN: 
0x0ffaf634:  cmp    $0x604,%ax
0x0ffaf638:  jne    0xffaf659

----------------
IN: 
0x0ffaf659:  mov    %ebx,%edx
0x0ffaf65b:  mov    %esi,%eax
0x0ffaf65d:  call   0xea50b

----------------
IN: 
0x000ea515:  movzwl %ax,%eax
0x000ea518:  mov    $0xe,%edx
0x000ea51d:  call   0xea4cf

----------------
IN: 
0x000ea4cf:  mov    %edx,%ecx
0x000ea4d1:  mov    0xf54d8,%edx
0x000ea4d7:  test   %edx,%edx
0x000ea4d9:  movzwl %ax,%eax
0x000ea4dc:  je     0xea4e8

----------------
IN: 
0x000ea4e8:  shl    $0x8,%eax
0x000ea4eb:  mov    %ecx,%edx
0x000ea4ed:  and    $0xfc,%edx
0x000ea4f3:  or     %edx,%eax
0x000ea4f5:  or     $0x80000000,%eax
0x000ea4fa:  mov    $0xcf8,%edx
0x000ea4ff:  out    %eax,(%dx)
0x000ea500:  and    $0x3,%ecx
0x000ea503:  lea    0xcfc(%ecx),%edx
0x000ea509:  in     (%dx),%al
0x000ea50a:  ret    

----------------
IN: 
0x000ea522:  test   %al,%al
0x000ea524:  js     0xea546

----------------
IN: 
0x000ea526:  add    $0x8,%ebx
0x000ea529:  movzwl %bx,%eax
0x000ea52c:  movzbl %bh,%edx
0x000ea52f:  cmp    %esi,%edx
0x000ea531:  jne    0xea549

----------------
IN: 
0x0ffaf662:  mov    %eax,%esi
0x0ffaf664:  jmp    0xffaf621

----------------
IN: 
0x0ffaf621:  test   %esi,%esi
0x0ffaf623:  js     0xffaf666

----------------
IN: 
0x000ea541:  test   $0x7,%bl
0x000ea544:  je     0xea526

----------------
IN: 
0x000ea549:  or     $0xffffffff,%ebx
0x000ea54c:  mov    %ebx,%eax
0x000ea54e:  pop    %ebx
0x000ea54f:  pop    %esi
0x000ea550:  ret    

----------------
IN: 
0x0ffaf666:  mov    %ebx,%edx
0x0ffaf668:  mov    (%esp),%eax
0x0ffaf66b:  call   0xea50b

----------------
IN: 
0x0ffaf670:  mov    %eax,%ebp
0x0ffaf672:  test   %eax,%eax
0x0ffaf674:  js     0xffaf837

----------------
IN: 
0x0ffaf67a:  movzwl %bp,%eax
0x0ffaf67d:  mov    %eax,(%esp)
0x0ffaf680:  mov    $0xa,%edx
0x0ffaf685:  call   0xea491

----------------
IN: 
0x0ffaf68a:  cmp    $0x604,%ax
0x0ffaf68e:  jne    0xffaf82e

----------------
IN: 
0x0ffaf82e:  mov    %ebx,%edx
0x0ffaf830:  mov    %ebp,%eax
0x0ffaf832:  jmp    0xffaf66b

----------------
IN: 
0x0ffaf66b:  call   0xea50b

----------------
IN: 
0x0ffaf837:  add    $0x8,%esp
0x0ffaf83a:  pop    %ebx
0x0ffaf83b:  pop    %esi
0x0ffaf83c:  pop    %edi
0x0ffaf83d:  pop    %ebp
0x0ffaf83e:  ret    

----------------
IN: 
0x0ffb0026:  test   %bl,%bl
0x0ffb0028:  jne    0xffb0062

----------------
IN: 
0x0ffb002a:  push   $0xf0ba4
0x0ffb002f:  call   0xec4d8

----------------
IN: 
0x0ffb0034:  call   0xffafe37

----------------
IN: 
0x0ffafe37:  push   %ebp
0x0ffafe38:  push   %edi
0x0ffafe39:  push   %esi
0x0ffafe3a:  push   %ebx
0x0ffafe3b:  sub    $0x414,%esp
0x0ffafe41:  mov    $0x400,%ecx
0x0ffafe46:  xor    %edx,%edx
0x0ffafe48:  lea    0x14(%esp),%eax
0x0ffafe4c:  call   0xeab7b

----------------
IN: 
0x0ffafe51:  xor    %edx,%edx
0x0ffafe53:  xor    %ecx,%ecx
0x0ffafe55:  mov    $0xf0b45,%eax
0x0ffafe5a:  call   0xffad81f

----------------
IN: 
0x0ffafe5f:  mov    %eax,0x10(%esp)
0x0ffafe63:  movl   $0x0,0x8(%esp)
0x0ffafe6b:  xor    %ebp,%ebp
0x0ffafe6d:  movl   $0x0,(%esp)
0x0ffafe74:  or     $0xffffffff,%ebx
0x0ffafe77:  movl   $0xffbfde8,0x4(%esp)
0x0ffafe7f:  cmp    %ebx,0xf5d0c
0x0ffafe85:  jle    0xffaffb8

----------------
IN: 
0x0ffafe8b:  inc    %ebx
0x0ffafe8c:  mov    %ebx,%eax
0x0ffafe8e:  shl    $0x8,%eax
0x0ffafe91:  dec    %eax
0x0ffafe92:  mov    %ebx,%edx
0x0ffafe94:  call   0xea50b

----------------
IN: 
0x0ffafe99:  mov    %eax,%edi
0x0ffafe9b:  test   %edi,%edi
0x0ffafe9d:  js     0xffaffaa

----------------
IN: 
0x0ffafea3:  mov    $0x20,%eax
0x0ffafea8:  call   0xffae09f

----------------
IN: 
0x0ffafead:  mov    %eax,%esi
0x0ffafeaf:  test   %eax,%eax
0x0ffafeb1:  jne    0xffafecc

----------------
IN: 
0x0ffafecc:  mov    $0x20,%ecx
0x0ffafed1:  xor    %edx,%edx
0x0ffafed3:  call   0xeab7b

----------------
IN: 
0x0ffafed8:  lea    0x4(%eax),%eax
0x0ffafedb:  mov    %eax,0xc(%esp)
0x0ffafedf:  mov    0x4(%esp),%edx
0x0ffafee3:  call   0xffab66f

----------------
IN: 
0x0ffafee8:  incl   0x8(%esp)
0x0ffafeec:  mov    0x14(%esp,%ebx,4),%edx
0x0ffafef0:  test   %edx,%edx
0x0ffafef2:  jne    0xffaff0a

----------------
IN: 
0x0ffafef4:  cmp    %ebx,(%esp)
0x0ffafef7:  je     0xffafefa

----------------
IN: 
0x0ffafefa:  cmp    %ebx,0xf5d0c
0x0ffaff00:  jge    0xffaff10

----------------
IN: 
0x0ffaff10:  mov    %ebp,%eax
0x0ffaff12:  mov    %ebx,(%esp)
0x0ffaff15:  mov    %di,(%esi)
0x0ffaff18:  mov    %edx,0xc(%esi)
0x0ffaff1b:  mov    %al,0x2(%esi)
0x0ffaff1e:  movzwl %di,%eax
0x0ffaff21:  mov    %eax,0x4(%esp)
0x0ffaff25:  xor    %edx,%edx
0x0ffaff27:  call   0xea337

----------------
IN: 
0x000ea337:  mov    0xf54d8,%ecx
0x000ea33d:  test   %ecx,%ecx
0x000ea33f:  movzwl %ax,%eax
0x000ea342:  je     0xea34e

----------------
IN: 
0x000ea34e:  shl    $0x8,%eax
0x000ea351:  and    $0xfc,%edx
0x000ea357:  or     %edx,%eax
0x000ea359:  or     $0x80000000,%eax
0x000ea35e:  mov    $0xcf8,%edx
0x000ea363:  out    %eax,(%dx)
0x000ea364:  mov    $0xcfc,%edx
0x000ea369:  in     (%dx),%eax
0x000ea36a:  ret    

----------------
IN: 
0x0ffaff2c:  mov    %eax,0x10(%esi)
0x0ffaff2f:  mov    $0x8,%edx
0x0ffaff34:  movzwl %di,%eax
0x0ffaff37:  call   0xea337

----------------
IN: 
0x0ffaff3c:  mov    %eax,%edx
0x0ffaff3e:  shr    $0x10,%edx
0x0ffaff41:  mov    %dx,0x14(%esi)
0x0ffaff45:  xchg   %ah,%al
0x0ffaff47:  mov    %ax,0x16(%esi)
0x0ffaff4b:  mov    $0xe,%edx
0x0ffaff50:  movzwl %di,%eax
0x0ffaff53:  call   0xea4cf

----------------
IN: 
0x0ffaff58:  mov    %al,0x18(%esi)
0x0ffaff5b:  and    $0x7f,%eax
0x0ffaff5e:  dec    %eax
0x0ffaff5f:  cmp    $0x1,%al
0x0ffaff61:  ja     0xffaff92

----------------
IN: 
0x0ffaff92:  mov    %ebx,%edx
0x0ffaff94:  mov    %edi,%eax
0x0ffaff96:  call   0xea50b

----------------
IN: 
0x0ffaff9b:  mov    %eax,%edi
0x0ffaff9d:  mov    0xc(%esp),%eax
0x0ffaffa1:  mov    %eax,0x4(%esp)
0x0ffaffa5:  jmp    0xffafe9b

----------------
IN: 
0x0ffafe9b:  test   %edi,%edi
0x0ffafe9d:  js     0xffaffaa

----------------
IN: 
0x0ffaffaa:  cmp    $0xff,%ebx
0x0ffaffb0:  jne    0xffafe7f

----------------
IN: 
0x0ffafe7f:  cmp    %ebx,0xf5d0c
0x0ffafe85:  jle    0xffaffb8

----------------
IN: 
0x0ffaffb8:  cmp    %ebp,0x10(%esp)
0x0ffaffbc:  jg     0xffafe8b

----------------
IN: 
0x0ffaffc2:  pushl  0xf5d0c
0x0ffaffc8:  pushl  0xc(%esp)
0x0ffaffcc:  push   $0xf0b59
0x0ffaffd1:  call   0xec4d8

----------------
IN: 
0x0ffaffd6:  add    $0x420,%esp
0x0ffaffdc:  pop    %ebx
0x0ffaffdd:  pop    %esi
0x0ffaffde:  pop    %edi
0x0ffaffdf:  pop    %ebp
0x0ffaffe0:  ret    

----------------
IN: 
0x0ffb0039:  mov    0xffbff18,%eax
0x0ffb003e:  mov    %eax,0xffbfdc0
0x0ffb0043:  movl   $0x0,0xffbfdc4
0x0ffb004d:  mov    0xffbfde8,%eax
0x0ffb0052:  lea    -0x4(%eax),%ebx
0x0ffb0055:  pop    %edi
0x0ffb0056:  jmp    0xffb007d

----------------
IN: 
0x0ffb007d:  cmp    $0xfffffffc,%ebx
0x0ffb0080:  je     0xffb0098

----------------
IN: 
0x0ffb0082:  xor    %ecx,%ecx
0x0ffb0084:  mov    %ebx,%edx
0x0ffb0086:  mov    $0xffbf900,%eax
0x0ffb008b:  call   0xffabc0c

----------------
IN: 
0x0ffabc0c:  push   %esi
0x0ffabc0d:  push   %ebx
0x0ffabc0e:  mov    %edx,%ebx
0x0ffabc10:  mov    (%eax),%edx
0x0ffabc12:  test   %edx,%edx
0x0ffabc14:  je     0xffabc57

----------------
IN: 
0x0ffabc16:  cmp    $0xffffffff,%edx
0x0ffabc19:  je     0xffabc23

----------------
IN: 
0x0ffabc1b:  movzwl 0x10(%ebx),%esi
0x0ffabc1f:  cmp    %edx,%esi
0x0ffabc21:  jne    0xffabc52

----------------
IN: 
0x0ffabc23:  mov    0x4(%eax),%edx
0x0ffabc26:  cmp    $0xffffffff,%edx
0x0ffabc29:  je     0xffabc33

----------------
IN: 
0x0ffabc2b:  movzwl 0x12(%ebx),%esi
0x0ffabc2f:  cmp    %esi,%edx
0x0ffabc31:  jne    0xffabc52

----------------
IN: 
0x0ffabc33:  movzwl 0x14(%ebx),%edx
0x0ffabc37:  xor    0x8(%eax),%edx
0x0ffabc3a:  and    0xc(%eax),%edx
0x0ffabc3d:  jne    0xffabc52

----------------
IN: 
0x0ffabc3f:  mov    0x10(%eax),%esi
0x0ffabc42:  xor    %eax,%eax
0x0ffabc44:  test   %esi,%esi
0x0ffabc46:  je     0xffabc60

----------------
IN: 
0x0ffabc48:  mov    %ecx,%edx
0x0ffabc4a:  mov    %ebx,%eax
0x0ffabc4c:  call   *%esi

----------------
IN: 
0x0ffabd78:  mov    0xffbff18,%eax
0x0ffabd7d:  cmp    $0x80000000,%eax
0x0ffabd82:  ja     0xffabd90

----------------
IN: 
0x0ffabd84:  movl   $0x80000000,0xffbfdc0
0x0ffabd8e:  jmp    0xffabda1

----------------
IN: 
0x0ffabda1:  movl   $0x0,0xffbfdc4
0x0ffabdab:  movl   $0xffabd12,0xffbfda4
0x0ffabdb5:  ret    

----------------
IN: 
0x0ffabc4e:  xor    %eax,%eax
0x0ffabc50:  jmp    0xffabc60

----------------
IN: 
0x0ffabc60:  pop    %ebx
0x0ffabc61:  pop    %esi
0x0ffabc62:  ret    

----------------
IN: 
0x0ffb0090:  mov    0x4(%ebx),%ebx
0x0ffb0093:  sub    $0x4,%ebx
0x0ffb0096:  jmp    0xffb007d

----------------
IN: 
0x0ffabc52:  add    $0x14,%eax
0x0ffabc55:  jmp    0xffabc10

----------------
IN: 
0x0ffabc10:  mov    (%eax),%edx
0x0ffabc12:  test   %edx,%edx
0x0ffabc14:  je     0xffabc57

----------------
IN: 
0x0ffabc57:  cmpl   $0x0,0xc(%eax)
0x0ffabc5b:  jne    0xffabc1b

----------------
IN: 
0x0ffabc5d:  or     $0xffffffff,%eax
0x0ffabc60:  pop    %ebx
0x0ffabc61:  pop    %esi
0x0ffabc62:  ret    

----------------
IN: 
0x0ffb0098:  push   $0xf0bd9
0x0ffb009d:  call   0xec4d8

----------------
IN: 
0x0ffb00a2:  mov    0xf5d0c,%eax
0x0ffb00a7:  inc    %eax
0x0ffb00a8:  imul   $0x28,%eax,%eax
0x0ffb00ab:  call   0xffae09f

----------------
IN: 
0x0ffb00b0:  mov    %eax,0xc(%esp)
0x0ffb00b4:  pop    %esi
0x0ffb00b5:  test   %eax,%eax
0x0ffb00b7:  jne    0xffb00cf

----------------
IN: 
0x0ffb00cf:  mov    0xf5d0c,%eax
0x0ffb00d4:  lea    0x1(%eax),%ecx
0x0ffb00d7:  imul   $0x28,%ecx,%ecx
0x0ffb00da:  xor    %edx,%edx
0x0ffb00dc:  mov    0x8(%esp),%eax
0x0ffb00e0:  call   0xeab7b

----------------
IN: 
0x0ffb00e5:  push   $0xf0bfd
0x0ffb00ea:  call   0xec4d8

----------------
IN: 
0x0ffb00ef:  mov    0xffbfde8,%eax
0x0ffb00f4:  lea    -0x4(%eax),%ebp
0x0ffb00f7:  pop    %ebx
0x0ffb00f8:  cmp    $0xfffffffc,%ebp
0x0ffb00fb:  je     0xffb032b

----------------
IN: 
0x0ffb0101:  cmpw   $0x604,0x14(%ebp)
0x0ffb0107:  jne    0xffb0118

----------------
IN: 
0x0ffb0118:  movzbl 0x1(%ebp),%eax
0x0ffb011c:  imul   $0x28,%eax,%eax
0x0ffb011f:  add    0x8(%esp),%eax
0x0ffb0123:  mov    %eax,0x30(%esp)
0x0ffb0127:  cmpl   $0x0,0x24(%eax)
0x0ffb012b:  jne    0xffb0135

----------------
IN: 
0x0ffb012d:  mov    0x8(%esp),%eax
0x0ffb0131:  mov    %eax,0x30(%esp)
0x0ffb0135:  movl   $0x0,0x14(%esp)
0x0ffb013d:  cmpw   $0x604,0x14(%ebp)
0x0ffb0143:  jne    0xffb0155

----------------
IN: 
0x0ffb0155:  cmpl   $0x6,0x14(%esp)
0x0ffb015a:  je     0xffb0169

----------------
IN: 
0x0ffb015c:  mov    0x14(%esp),%eax
0x0ffb0160:  lea    0x10(,%eax,4),%ebx
0x0ffb0167:  jmp    0xffb017d

----------------
IN: 
0x0ffb017d:  movzwl 0x0(%ebp),%eax
0x0ffb0181:  mov    %eax,0xc(%esp)
0x0ffb0185:  mov    %ebx,%edx
0x0ffb0187:  call   0xea337

----------------
IN: 
0x0ffb018c:  mov    %eax,0x28(%esp)
0x0ffb0190:  cmpl   $0x6,0x14(%esp)
0x0ffb0195:  jne    0xffb01c1

----------------
IN: 
0x0ffb01c1:  testb  $0x1,0x28(%esp)
0x0ffb01c6:  jne    0xffb01fb

----------------
IN: 
0x0ffb01c8:  mov    0x28(%esp),%eax
0x0ffb01cc:  and    $0x8,%eax
0x0ffb01cf:  cmp    $0x1,%eax
0x0ffb01d2:  sbb    %eax,%eax
0x0ffb01d4:  mov    %eax,0x24(%esp)
0x0ffb01d8:  addl   $0x2,0x24(%esp)
0x0ffb01dd:  mov    0x28(%esp),%eax
0x0ffb01e1:  and    $0x6,%eax
0x0ffb01e4:  cmp    $0x4,%eax
0x0ffb01e7:  sete   %al
0x0ffb01ea:  movzbl %al,%eax
0x0ffb01ed:  mov    %eax,0x1c(%esp)
0x0ffb01f1:  movl   $0xfffffff0,0x2c(%esp)
0x0ffb01f9:  jmp    0xffb0213

----------------
IN: 
0x0ffb0213:  or     $0xffffffff,%ecx
0x0ffb0216:  mov    %ebx,%edx
0x0ffb0218:  mov    0xc(%esp),%eax
0x0ffb021c:  call   0xea07a

----------------
IN: 
0x000ea07a:  push   %esi
0x000ea07b:  push   %ebx
0x000ea07c:  mov    %edx,%ebx
0x000ea07e:  mov    0xf54d8,%esi
0x000ea084:  test   %esi,%esi
0x000ea086:  movzwl %ax,%edx
0x000ea089:  je     0xea096

----------------
IN: 
0x000ea096:  mov    %edx,%eax
0x000ea098:  shl    $0x8,%eax
0x000ea09b:  and    $0xfc,%ebx
0x000ea0a1:  or     %ebx,%eax
0x000ea0a3:  or     $0x80000000,%eax
0x000ea0a8:  mov    $0xcf8,%edx
0x000ea0ad:  out    %eax,(%dx)
0x000ea0ae:  mov    $0xcfc,%edx
0x000ea0b3:  mov    %ecx,%eax
0x000ea0b5:  out    %eax,(%dx)
0x000ea0b6:  pop    %ebx
0x000ea0b7:  pop    %esi
0x000ea0b8:  ret    

----------------
IN: 
0x0ffb0221:  mov    %ebx,%edx
0x0ffb0223:  mov    0xc(%esp),%eax
0x0ffb0227:  call   0xea337

----------------
IN: 
0x0ffb022c:  mov    %eax,0x34(%esp)
0x0ffb0230:  mov    %eax,0x40(%esp)
0x0ffb0234:  movl   $0x0,0x44(%esp)
0x0ffb023c:  mov    0x28(%esp),%ecx
0x0ffb0240:  mov    %ebx,%edx
0x0ffb0242:  mov    0xc(%esp),%eax
0x0ffb0246:  call   0xea07a

----------------
IN: 
0x0ffb024b:  cmpl   $0x0,0x1c(%esp)
0x0ffb0250:  je     0xffb02af

----------------
IN: 
0x0ffb02af:  mov    0x34(%esp),%eax
0x0ffb02b3:  and    0x2c(%esp),%eax
0x0ffb02b7:  neg    %eax
0x0ffb02b9:  mov    %eax,%esi
0x0ffb02bb:  xor    %edi,%edi
0x0ffb02bd:  mov    %edi,%eax
0x0ffb02bf:  or     %esi,%eax
0x0ffb02c1:  je     0xffb0311

----------------
IN: 
0x0ffb0311:  incl   0x14(%esp)
0x0ffb0315:  cmpl   $0x6,0x14(%esp)
0x0ffb031a:  jle    0xffb013d

----------------
IN: 
0x0ffb013d:  cmpw   $0x604,0x14(%ebp)
0x0ffb0143:  jne    0xffb0155

----------------
IN: 
0x0ffb0169:  mov    0x18(%ebp),%al
0x0ffb016c:  and    $0x7f,%eax
0x0ffb016f:  xor    %ebx,%ebx
0x0ffb0171:  dec    %al
0x0ffb0173:  sete   %bl
0x0ffb0176:  lea    0x30(,%ebx,8),%ebx
0x0ffb017d:  movzwl 0x0(%ebp),%eax
0x0ffb0181:  mov    %eax,0xc(%esp)
0x0ffb0185:  mov    %ebx,%edx
0x0ffb0187:  call   0xea337

----------------
IN: 
0x0ffb0197:  mov    $0xfffff800,%ecx
0x0ffb019c:  mov    %ebx,%edx
0x0ffb019e:  mov    0xc(%esp),%eax
0x0ffb01a2:  call   0xea07a

----------------
IN: 
0x0ffb01a7:  movl   $0xfffff800,0x2c(%esp)
0x0ffb01af:  movl   $0x1,0x24(%esp)
0x0ffb01b7:  movl   $0x0,0x1c(%esp)
0x0ffb01bf:  jmp    0xffb0221

----------------
IN: 
0x0ffb0320:  mov    0x4(%ebp),%eax
0x0ffb0323:  lea    -0x4(%eax),%ebp
0x0ffb0326:  jmp    0xffb00f8

----------------
IN: 
0x0ffb00f8:  cmp    $0xfffffffc,%ebp
0x0ffb00fb:  je     0xffb032b

----------------
IN: 
0x0ffb01fb:  movl   $0xfffffffc,0x2c(%esp)
0x0ffb0203:  movl   $0x0,0x24(%esp)
0x0ffb020b:  movl   $0x0,0x1c(%esp)
0x0ffb0213:  or     $0xffffffff,%ecx
0x0ffb0216:  mov    %ebx,%edx
0x0ffb0218:  mov    0xc(%esp),%eax
0x0ffb021c:  call   0xea07a

----------------
IN: 
0x0ffb02c3:  mov    $0xfff,%eax
0x0ffb02c8:  cmp    %esi,%eax
0x0ffb02ca:  mov    $0x0,%eax
0x0ffb02cf:  sbb    %edi,%eax
0x0ffb02d1:  jb     0xffb02e1

----------------
IN: 
0x0ffb02d3:  cmpl   $0x0,0x24(%esp)
0x0ffb02d8:  je     0xffb02e1

----------------
IN: 
0x0ffb02e1:  pushl  0x1c(%esp)
0x0ffb02e5:  pushl  0x28(%esp)
0x0ffb02e9:  push   %edi
0x0ffb02ea:  push   %esi
0x0ffb02eb:  push   %edi
0x0ffb02ec:  push   %esi
0x0ffb02ed:  mov    0x2c(%esp),%ecx
0x0ffb02f1:  mov    %ebp,%edx
0x0ffb02f3:  mov    0x48(%esp),%eax
0x0ffb02f7:  call   0xffae37e

----------------
IN: 
0x0ffae37e:  push   %ebp
0x0ffae37f:  push   %edi
0x0ffae380:  push   %esi
0x0ffae381:  push   %ebx
0x0ffae382:  sub    $0x10,%esp
0x0ffae385:  mov    %eax,%esi
0x0ffae387:  mov    %edx,0xc(%esp)
0x0ffae38b:  mov    %ecx,%edi
0x0ffae38d:  mov    0x24(%esp),%eax
0x0ffae391:  mov    %eax,0x4(%esp)
0x0ffae395:  mov    0x28(%esp),%eax
0x0ffae399:  mov    %eax,0x8(%esp)
0x0ffae39d:  mov    0x2c(%esp),%eax
0x0ffae3a1:  mov    %eax,(%esp)
0x0ffae3a4:  mov    0x30(%esp),%ebp
0x0ffae3a8:  mov    $0x28,%eax
0x0ffae3ad:  call   0xffae09f

----------------
IN: 
0x0ffae3b2:  mov    %eax,%ebx
0x0ffae3b4:  test   %eax,%eax
0x0ffae3b6:  jne    0xffae3c9

----------------
IN: 
0x0ffae3c9:  mov    $0x28,%ecx
0x0ffae3ce:  xor    %edx,%edx
0x0ffae3d0:  call   0xeab7b

----------------
IN: 
0x0ffae3d5:  mov    0xc(%esp),%eax
0x0ffae3d9:  mov    %eax,(%ebx)
0x0ffae3db:  mov    %edi,0x4(%ebx)
0x0ffae3de:  mov    0x4(%esp),%eax
0x0ffae3e2:  mov    %eax,0x8(%ebx)
0x0ffae3e5:  mov    0x8(%esp),%eax
0x0ffae3e9:  mov    %eax,0xc(%ebx)
0x0ffae3ec:  mov    (%esp),%eax
0x0ffae3ef:  mov    %eax,0x10(%ebx)
0x0ffae3f2:  mov    %ebp,0x14(%ebx)
0x0ffae3f5:  mov    0x38(%esp),%eax
0x0ffae3f9:  mov    %eax,0x18(%ebx)
0x0ffae3fc:  mov    0x34(%esp),%eax
0x0ffae400:  mov    %eax,0x1c(%ebx)
0x0ffae403:  imul   $0xc,%eax,%eax
0x0ffae406:  lea    0x8(%esi,%eax,1),%edx
0x0ffae40a:  mov    0x8(%esi,%eax,1),%eax
0x0ffae40e:  test   %eax,%eax
0x0ffae410:  je     0xffae440

----------------
IN: 
0x0ffae440:  lea    0x20(%ebx),%eax
0x0ffae443:  call   0xffab66f

----------------
IN: 
0x0ffae448:  mov    %ebx,%eax
0x0ffae44a:  add    $0x10,%esp
0x0ffae44d:  pop    %ebx
0x0ffae44e:  pop    %esi
0x0ffae44f:  pop    %edi
0x0ffae450:  pop    %ebp
0x0ffae451:  ret    

----------------
IN: 
0x0ffb02fc:  add    $0x18,%esp
0x0ffb02ff:  test   %eax,%eax
0x0ffb0301:  je     0xffb0af4

----------------
IN: 
0x0ffb0307:  cmpl   $0x1,0x1c(%esp)
0x0ffb030c:  sbbl   $0xffffffff,0x14(%esp)
0x0ffb0311:  incl   0x14(%esp)
0x0ffb0315:  cmpl   $0x6,0x14(%esp)
0x0ffb031a:  jle    0xffb013d

----------------
IN: 
0x0ffae412:  mov    -0x10(%eax),%esi
0x0ffae415:  mov    -0xc(%eax),%ecx
0x0ffae418:  cmp    (%esp),%esi
0x0ffae41b:  mov    %ecx,%edi
0x0ffae41d:  sbb    %ebp,%edi
0x0ffae41f:  jb     0xffae440

----------------
IN: 
0x0ffb032b:  mov    0xf5d0c,%eax
0x0ffb0330:  mov    %eax,0x24(%esp)
0x0ffb0334:  imul   $0x28,%eax,%eax
0x0ffb0337:  mov    0x8(%esp),%edi
0x0ffb033b:  lea    (%edi,%eax,1),%ebp
0x0ffb033e:  cmpl   $0x0,0x24(%esp)
0x0ffb0343:  jle    0xffb0737

----------------
IN: 
0x0ffb0737:  push   $0xf0df4
0x0ffb073c:  call   0xec4d8

----------------
IN: 
0x0ffb0741:  mov    0xc(%esp),%eax
0x0ffb0745:  call   0xffabdd1

----------------
IN: 
0x0ffabdd1:  push   %ebp
0x0ffabdd2:  mov    %esp,%ebp
0x0ffabdd4:  push   %ebx
0x0ffabdd5:  mov    0x8(%eax),%edx
0x0ffabdd8:  sub    $0x20,%edx
0x0ffabddb:  xor    %ecx,%ecx
0x0ffabddd:  xor    %ebx,%ebx
0x0ffabddf:  cmp    $0xffffffe0,%edx
0x0ffabde2:  je     0xffabdf2

----------------
IN: 
0x0ffabde4:  add    0x8(%edx),%ecx
0x0ffabde7:  adc    0xc(%edx),%ebx
0x0ffabdea:  mov    0x20(%edx),%edx
0x0ffabded:  sub    $0x20,%edx
0x0ffabdf0:  jmp    0xffabddf

----------------
IN: 
0x0ffabddf:  cmp    $0xffffffe0,%edx
0x0ffabde2:  je     0xffabdf2

----------------
IN: 
0x0ffabdf2:  mov    %ecx,%eax
0x0ffabdf4:  mov    %ebx,%edx
0x0ffabdf6:  pop    %ebx
0x0ffabdf7:  pop    %ebp
0x0ffabdf8:  ret    

----------------
IN: 
0x0ffb074a:  pop    %ecx
0x0ffb074b:  mov    $0x3fff,%ecx
0x0ffb0750:  cmp    %eax,%ecx
0x0ffb0752:  mov    $0x0,%ecx
0x0ffb0757:  sbb    %edx,%ecx
0x0ffb0759:  jae    0xffb077f

----------------
IN: 
0x0ffb077f:  mov    $0xc000,%ecx
0x0ffb0784:  xor    %ebx,%ebx
0x0ffb0786:  mov    0x8(%esp),%edi
0x0ffb078a:  mov    %ecx,(%edi)
0x0ffb078c:  mov    %ebx,0x4(%edi)
0x0ffb078f:  mov    %ecx,%esi
0x0ffb0791:  mov    %ebx,%edi
0x0ffb0793:  add    $0xffffffff,%esi
0x0ffb0796:  adc    $0xffffffff,%edi
0x0ffb0799:  add    %eax,%esi
0x0ffb079b:  adc    %edx,%edi
0x0ffb079d:  push   %edi
0x0ffb079e:  push   %esi
0x0ffb079f:  push   %ebx
0x0ffb07a0:  push   %ecx
0x0ffb07a1:  push   $0xf0ca7
0x0ffb07a6:  call   0xec4d8

----------------
IN: 
0x0ffb07ab:  push   $0x0
0x0ffb07ad:  push   $0xfec00000
0x0ffb07b2:  pushl  0xffbfdc4
0x0ffb07b8:  pushl  0xffbfdc0
0x0ffb07be:  push   $0xf0cbf
0x0ffb07c3:  call   0xec4d8

----------------
IN: 
0x0ffb07c8:  add    $0x28,%esp
0x0ffb07cb:  mov    0x8(%esp),%eax
0x0ffb07cf:  call   0xffabe43

----------------
IN: 
0x0ffabe43:  push   %ebp
0x0ffabe44:  push   %edi
0x0ffabe45:  push   %esi
0x0ffabe46:  push   %ebx
0x0ffabe47:  sub    $0x10,%esp
0x0ffabe4a:  lea    0x18(%eax),%ebx
0x0ffabe4d:  lea    0xc(%eax),%ebp
0x0ffabe50:  mov    %ebp,%eax
0x0ffabe52:  call   0xffabdb6

----------------
IN: 
0x0ffabdb6:  push   %ebp
0x0ffabdb7:  mov    %esp,%ebp
0x0ffabdb9:  mov    0x8(%eax),%eax
0x0ffabdbc:  test   %eax,%eax
0x0ffabdbe:  je     0xffabdc8

----------------
IN: 
0x0ffabdc0:  mov    -0xc(%eax),%edx
0x0ffabdc3:  mov    -0x10(%eax),%eax
0x0ffabdc6:  jmp    0xffabdcf

----------------
IN: 
0x0ffabdcf:  pop    %ebp
0x0ffabdd0:  ret    

----------------
IN: 
0x0ffabe57:  mov    %eax,%esi
0x0ffabe59:  mov    %edx,%ecx
0x0ffabe5b:  mov    %ebx,%eax
0x0ffabe5d:  call   0xffabdb6

----------------
IN: 
0x0ffabe62:  cmp    %eax,%esi
0x0ffabe64:  sbb    %edx,%ecx
0x0ffabe66:  jae    0xffabe6a

----------------
IN: 
0x0ffabe68:  xchg   %ebp,%ebx
0x0ffabe6a:  mov    %ebx,%eax
0x0ffabe6c:  call   0xffabdd1

----------------
IN: 
0x0ffabe71:  mov    %eax,%esi
0x0ffabe73:  mov    %edx,%edi
0x0ffabe75:  mov    %ebx,%eax
0x0ffabe77:  call   0xffabdb6

----------------
IN: 
0x0ffabe7c:  mov    %eax,0x8(%esp)
0x0ffabe80:  mov    %edx,0xc(%esp)
0x0ffabe84:  mov    $0xfec00000,%eax
0x0ffabe89:  xor    %edx,%edx
0x0ffabe8b:  sub    %esi,%eax
0x0ffabe8d:  sbb    %edi,%edx
0x0ffabe8f:  mov    %eax,(%esp)
0x0ffabe92:  mov    %edx,0x4(%esp)
0x0ffabe96:  mov    0x8(%esp),%eax
0x0ffabe9a:  mov    0xc(%esp),%edx
0x0ffabe9e:  neg    %eax
0x0ffabea0:  adc    $0x0,%edx
0x0ffabea3:  neg    %edx
0x0ffabea5:  mov    (%esp),%ecx
0x0ffabea8:  and    %eax,%ecx
0x0ffabeaa:  mov    %ecx,%esi
0x0ffabeac:  mov    0x4(%esp),%ecx
0x0ffabeb0:  and    %edx,%ecx
0x0ffabeb2:  mov    %ecx,%edi
0x0ffabeb4:  mov    %esi,(%ebx)
0x0ffabeb6:  mov    %ecx,0x4(%ebx)
0x0ffabeb9:  mov    %ebp,%eax
0x0ffabebb:  call   0xffabdd1

----------------
IN: 
0x0ffabec0:  mov    %eax,%ecx
0x0ffabec2:  mov    %edx,%ebx
0x0ffabec4:  mov    %ebp,%eax
0x0ffabec6:  call   0xffabdb6

----------------
IN: 
0x0ffabecb:  sub    %ecx,%esi
0x0ffabecd:  sbb    %ebx,%edi
0x0ffabecf:  neg    %eax
0x0ffabed1:  adc    $0x0,%edx
0x0ffabed4:  neg    %edx
0x0ffabed6:  mov    %esi,%ecx
0x0ffabed8:  and    %eax,%ecx
0x0ffabeda:  and    %edi,%edx
0x0ffabedc:  mov    %ecx,0x0(%ebp)
0x0ffabedf:  mov    %edx,0x4(%ebp)
0x0ffabee2:  cmp    0xffbfdc0,%ecx
0x0ffabee8:  mov    %edx,%eax
0x0ffabeea:  sbb    0xffbfdc4,%eax
0x0ffabef0:  setb   %al
0x0ffabef3:  mov    $0xfec00000,%ebx
0x0ffabef8:  cmp    %ecx,%ebx
0x0ffabefa:  mov    $0x0,%ecx
0x0ffabeff:  sbb    %edx,%ecx
0x0ffabf01:  setb   %dl
0x0ffabf04:  or     %edx,%eax
0x0ffabf06:  movzbl %al,%eax
0x0ffabf09:  neg    %eax
0x0ffabf0b:  add    $0x10,%esp
0x0ffabf0e:  pop    %ebx
0x0ffabf0f:  pop    %esi
0x0ffabf10:  pop    %edi
0x0ffabf11:  pop    %ebp
0x0ffabf12:  ret    

----------------
IN: 
0x0ffb07d4:  test   %eax,%eax
0x0ffb07d6:  je     0xffb099a

----------------
IN: 
0x0ffb099a:  movl   $0x0,0xffbfdb8
0x0ffb09a4:  movl   $0x0,0xffbfdbc
0x0ffb09ae:  mov    0x8(%esp),%ebx
0x0ffb09b2:  xor    %esi,%esi
0x0ffb09b4:  cmp    0xf5d0c,%esi
0x0ffb09ba:  jg     0xffb06eb

----------------
IN: 
0x0ffb09c0:  mov    %ebx,%edx
0x0ffb09c2:  mov    0x8(%esp),%eax
0x0ffb09c6:  call   0xffaf850

----------------
IN: 
0x0ffaf850:  push   %ebp
0x0ffaf851:  push   %edi
0x0ffaf852:  push   %esi
0x0ffaf853:  push   %ebx
0x0ffaf854:  sub    $0x20,%esp
0x0ffaf857:  mov    %eax,0x1c(%esp)
0x0ffaf85b:  mov    %edx,%ebp
0x0ffaf85d:  mov    0x8(%edx),%eax
0x0ffaf860:  lea    -0x20(%eax),%ebx
0x0ffaf863:  cmp    $0xffffffe0,%ebx
0x0ffaf866:  je     0xffafa53

----------------
IN: 
0x0ffaf86c:  mov    0x20(%ebx),%eax
0x0ffaf86f:  mov    %eax,0x18(%esp)
0x0ffaf873:  mov    0x0(%ebp),%esi
0x0ffaf876:  mov    0x4(%ebp),%edi
0x0ffaf879:  mov    0x8(%ebx),%eax
0x0ffaf87c:  mov    0xc(%ebx),%edx
0x0ffaf87f:  mov    %eax,(%esp)
0x0ffaf882:  mov    %edx,0x4(%esp)
0x0ffaf886:  add    %esi,%eax
0x0ffaf888:  adc    %edi,%edx
0x0ffaf88a:  mov    %eax,0x10(%esp)
0x0ffaf88e:  mov    %edx,0x14(%esp)
0x0ffaf892:  mov    %eax,0x0(%ebp)
0x0ffaf895:  mov    %edx,0x4(%ebp)
0x0ffaf898:  mov    0x4(%ebx),%ecx
0x0ffaf89b:  mov    0x1c(%ebx),%eax
0x0ffaf89e:  mov    %eax,0x8(%esp)
0x0ffaf8a2:  mov    (%ebx),%eax
0x0ffaf8a4:  cmp    $0xffffffff,%ecx
0x0ffaf8a7:  jne    0xffaf8c4

----------------
IN: 
0x0ffaf8c4:  test   %ecx,%ecx
0x0ffaf8c6:  js     0xffaf903

----------------
IN: 
0x0ffaf8c8:  mov    0x8(%esp),%edx
0x0ffaf8cc:  pushl  0xffbfa5c(,%edx,4)
0x0ffaf8d3:  pushl  0x8(%esp)
0x0ffaf8d7:  pushl  0x8(%esp)
0x0ffaf8db:  push   %edi
0x0ffaf8dc:  push   %esi
0x0ffaf8dd:  push   %ecx
0x0ffaf8de:  push   %eax
0x0ffaf8df:  push   $0xf09c4
0x0ffaf8e4:  call   0xec4d8

----------------
IN: 
0x000ebe36:  inc    %esi
0x000ebe37:  movzbl 0x1(%ebp),%edx
0x000ebe3b:  push   $0x0
0x000ebe3d:  mov    $0x2,%ecx
0x000ebe42:  mov    %ebx,%eax
0x000ebe44:  call   0xe9872

----------------
IN: 
0x000ebe49:  mov    $0x3a,%edx
0x000ebe4e:  mov    %ebx,%eax
0x000ebe50:  call   0xe9803

----------------
IN: 
0x000ebe55:  mov    0x0(%ebp),%dl
0x000ebe58:  shr    $0x3,%dl
0x000ebe5b:  movzbl %dl,%edx
0x000ebe5e:  push   $0x0
0x000ebe60:  mov    $0x2,%ecx
0x000ebe65:  mov    %ebx,%eax
0x000ebe67:  call   0xe9872

----------------
IN: 
0x000ebe6c:  mov    $0x2e,%edx
0x000ebe71:  mov    %ebx,%eax
0x000ebe73:  call   0xe9803

----------------
IN: 
0x000ebe78:  mov    0x0(%ebp),%edx
0x000ebe7b:  and    $0x7,%edx
0x000ebe7e:  xor    %ecx,%ecx
0x000ebe80:  mov    %ebx,%eax
0x000ebe82:  call   0xe9856

----------------
IN: 
0x000ebe87:  pop    %eax
0x000ebe88:  pop    %edx
0x000ebe89:  jmp    0xebf70

----------------
IN: 
0x0ffaf8e9:  add    $0x20,%esp
0x0ffaf8ec:  mov    0x4(%ebx),%edx
0x0ffaf8ef:  pushl  0x18(%ebx)
0x0ffaf8f2:  push   %edi
0x0ffaf8f3:  push   %esi
0x0ffaf8f4:  mov    (%ebx),%eax
0x0ffaf8f6:  call   0xffad084

----------------
IN: 
0x0ffad084:  push   %ebp
0x0ffad085:  push   %edi
0x0ffad086:  push   %esi
0x0ffad087:  push   %ebx
0x0ffad088:  mov    %eax,%esi
0x0ffad08a:  mov    0x14(%esp),%ecx
0x0ffad08e:  mov    0x18(%esp),%edi
0x0ffad092:  mov    0x1c(%esp),%ebp
0x0ffad096:  cmp    $0x6,%edx
0x0ffad099:  je     0xffad0a4

----------------
IN: 
0x0ffad09b:  lea    0x10(,%edx,4),%ebx
0x0ffad0a2:  jmp    0xffad0b8

----------------
IN: 
0x0ffad0b8:  movzwl (%esi),%eax
0x0ffad0bb:  mov    %ebx,%edx
0x0ffad0bd:  call   0xea07a

----------------
IN: 
0x0ffad0c2:  test   %ebp,%ebp
0x0ffad0c4:  je     0xffad0d7

----------------
IN: 
0x0ffad0d7:  pop    %ebx
0x0ffad0d8:  pop    %esi
0x0ffad0d9:  pop    %edi
0x0ffad0da:  pop    %ebp
0x0ffad0db:  ret    

----------------
IN: 
0x0ffaf8fb:  add    $0xc,%esp
0x0ffaf8fe:  jmp    0xffafa38

----------------
IN: 
0x0ffafa38:  lea    0x20(%ebx),%eax
0x0ffafa3b:  call   0xffab660

----------------
IN: 
0x0ffab660:  mov    (%eax),%edx
0x0ffab662:  mov    0x4(%eax),%eax
0x0ffab665:  mov    %edx,(%eax)
0x0ffab667:  test   %edx,%edx
0x0ffab669:  je     0xffab66e

----------------
IN: 
0x0ffab66b:  mov    %eax,0x4(%edx)
0x0ffab66e:  ret    

----------------
IN: 
0x0ffafa40:  mov    %ebx,%eax
0x0ffafa42:  call   0xffadb56

----------------
IN: 
0x0ffadb56:  test   %eax,%eax
0x0ffadb58:  je     0xffadb72

----------------
IN: 
0x0ffadb5a:  call   0xffab935

----------------
IN: 
0x0ffab935:  push   %esi
0x0ffab936:  push   %ebx
0x0ffab937:  mov    %eax,%esi
0x0ffab939:  call   0xffab916

----------------
IN: 
0x0ffab916:  mov    %eax,%ecx
0x0ffab918:  xor    %edx,%edx
0x0ffab91a:  mov    0xffbfe64(,%edx,4),%eax
0x0ffab921:  mov    (%eax),%eax
0x0ffab923:  test   %eax,%eax
0x0ffab925:  je     0xffab92e

----------------
IN: 
0x0ffab927:  cmp    %ecx,0x8(%eax)
0x0ffab92a:  jne    0xffab921

----------------
IN: 
0x0ffab921:  mov    (%eax),%eax
0x0ffab923:  test   %eax,%eax
0x0ffab925:  je     0xffab92e

----------------
IN: 
0x0ffab92e:  inc    %edx
0x0ffab92f:  cmp    $0x5,%edx
0x0ffab932:  jne    0xffab91a

----------------
IN: 
0x0ffab91a:  mov    0xffbfe64(,%edx,4),%eax
0x0ffab921:  mov    (%eax),%eax
0x0ffab923:  test   %eax,%eax
0x0ffab925:  je     0xffab92e

----------------
IN: 
0x0ffab92c:  jmp    0xffab934

----------------
IN: 
0x0ffab934:  ret    

----------------
IN: 
0x0ffab93e:  test   %eax,%eax
0x0ffab940:  je     0xffab964

----------------
IN: 
0x0ffab942:  mov    %eax,%ebx
0x0ffab944:  or     $0xffffffff,%eax
0x0ffab947:  cmp    %esi,%ebx
0x0ffab949:  je     0xffab967

----------------
IN: 
0x0ffab94b:  cmpl   $0x0,0x10(%ebx)
0x0ffab94f:  je     0xffab967

----------------
IN: 
0x0ffab951:  mov    %ebx,%eax
0x0ffab953:  call   0xffab8fd

----------------
IN: 
0x0ffab8fd:  mov    (%eax),%edx
0x0ffab8ff:  test   %edx,%edx
0x0ffab901:  je     0xffab911

----------------
IN: 
0x0ffab903:  mov    0x8(%eax),%ecx
0x0ffab906:  cmp    %ecx,0xc(%edx)
0x0ffab909:  jne    0xffab911

----------------
IN: 
0x0ffab90b:  mov    0xc(%eax),%ecx
0x0ffab90e:  mov    %ecx,0xc(%edx)
0x0ffab911:  jmp    0xffab660

----------------
IN: 
0x0ffab958:  lea    -0x14(%ebx),%eax
0x0ffab95b:  call   0xffab8fd

----------------
IN: 
0x0ffab960:  xor    %eax,%eax
0x0ffab962:  jmp    0xffab967

----------------
IN: 
0x0ffab967:  pop    %ebx
0x0ffab968:  pop    %esi
0x0ffab969:  ret    

----------------
IN: 
0x0ffadb5f:  test   %eax,%eax
0x0ffadb61:  je     0xffadb72

----------------
IN: 
0x0ffadb72:  ret    

----------------
IN: 
0x0ffafa47:  mov    0x18(%esp),%ebx
0x0ffafa4b:  sub    $0x20,%ebx
0x0ffafa4e:  jmp    0xffaf863

----------------
IN: 
0x0ffaf863:  cmp    $0xffffffe0,%ebx
0x0ffaf866:  je     0xffafa53

----------------
IN: 
0x0ffab66e:  ret    

----------------
IN: 
0x0ffafa53:  add    $0x20,%esp
0x0ffafa56:  pop    %ebx
0x0ffafa57:  pop    %esi
0x0ffafa58:  pop    %edi
0x0ffafa59:  pop    %ebp
0x0ffafa5a:  ret    

----------------
IN: 
0x0ffb09cb:  lea    0xc(%ebx),%edx
0x0ffb09ce:  mov    0x8(%esp),%eax
0x0ffb09d2:  call   0xffaf850

----------------
IN: 
0x0ffad0a4:  mov    0x18(%eax),%al
0x0ffad0a7:  and    $0x7f,%eax
0x0ffad0aa:  xor    %ebx,%ebx
0x0ffad0ac:  dec    %al
0x0ffad0ae:  sete   %bl
0x0ffad0b1:  lea    0x30(,%ebx,8),%ebx
0x0ffad0b8:  movzwl (%esi),%eax
0x0ffad0bb:  mov    %ebx,%edx
0x0ffad0bd:  call   0xea07a

----------------
IN: 
0x0ffb09d7:  lea    0x18(%ebx),%edx
0x0ffb09da:  mov    0x8(%esp),%eax
0x0ffb09de:  call   0xffaf850

----------------
IN: 
0x0ffb09e3:  inc    %esi
0x0ffb09e4:  add    $0x28,%ebx
0x0ffb09e7:  jmp    0xffb09b4

----------------
IN: 
0x0ffb09b4:  cmp    0xf5d0c,%esi
0x0ffb09ba:  jg     0xffb06eb

----------------
IN: 
0x0ffb06eb:  mov    0xffbfde8,%eax
0x0ffb06f0:  lea    -0x4(%eax),%ebx
0x0ffb06f3:  cmp    $0xfffffffc,%ebx
0x0ffb06f6:  jne    0xffb09e9

----------------
IN: 
0x0ffb09e9:  movzwl 0x12(%ebx),%eax
0x0ffb09ed:  push   %eax
0x0ffb09ee:  movzwl 0x10(%ebx),%eax
0x0ffb09f2:  push   %eax
0x0ffb09f3:  push   %ebx
0x0ffb09f4:  push   $0xf0d4f
0x0ffb09f9:  call   0xec4d8

----------------
IN: 
0x0ffb09fe:  movzwl (%ebx),%esi
0x0ffb0a01:  mov    $0x3d,%edx
0x0ffb0a06:  mov    %esi,%eax
0x0ffb0a08:  call   0xea4cf

----------------
IN: 
0x0ffb0a0d:  movzbl %al,%edx
0x0ffb0a10:  add    $0x10,%esp
0x0ffb0a13:  test   %edx,%edx
0x0ffb0a15:  je     0xffb0a2e

----------------
IN: 
0x0ffb0a2e:  xor    %ecx,%ecx
0x0ffb0a30:  mov    %ebx,%edx
0x0ffb0a32:  mov    $0xffbf940,%eax
0x0ffb0a37:  call   0xffabc0c

----------------
IN: 
0x0ffb0a3c:  mov    $0x103,%ecx
0x0ffb0a41:  mov    $0x4,%edx
0x0ffb0a46:  mov    %esi,%eax
0x0ffb0a48:  call   0xffacf7a

----------------
IN: 
0x0ffacf7a:  push   %esi
0x0ffacf7b:  push   %ebx
0x0ffacf7c:  push   %ebx
0x0ffacf7d:  mov    %ecx,%esi
0x0ffacf7f:  movzwl %ax,%ebx
0x0ffacf82:  mov    %edx,(%esp)
0x0ffacf85:  mov    %ebx,%eax
0x0ffacf87:  call   0xea491

----------------
IN: 
0x0ffacf8c:  or     %esi,%eax
0x0ffacf8e:  movzwl %ax,%ecx
0x0ffacf91:  mov    (%esp),%edx
0x0ffacf94:  mov    %ebx,%eax
0x0ffacf96:  pop    %esi
0x0ffacf97:  pop    %ebx
0x0ffacf98:  pop    %esi
0x0ffacf99:  jmp    0xea0b9

----------------
IN: 
0x000ea0b9:  push   %esi
0x000ea0ba:  push   %ebx
0x000ea0bb:  mov    %edx,%ebx
0x000ea0bd:  mov    0xf54d8,%edx
0x000ea0c3:  test   %edx,%edx
0x000ea0c5:  movzwl %ax,%eax
0x000ea0c8:  je     0xea0d6

----------------
IN: 
0x000ea0d6:  shl    $0x8,%eax
0x000ea0d9:  mov    %ebx,%edx
0x000ea0db:  and    $0xfc,%edx
0x000ea0e1:  or     %edx,%eax
0x000ea0e3:  or     $0x80000000,%eax
0x000ea0e8:  mov    $0xcf8,%edx
0x000ea0ed:  out    %eax,(%dx)
0x000ea0ee:  and    $0x2,%ebx
0x000ea0f1:  lea    0xcfc(%ebx),%edx
0x000ea0f7:  mov    %ecx,%eax
0x000ea0f9:  out    %ax,(%dx)
0x000ea0fb:  pop    %ebx
0x000ea0fc:  pop    %esi
0x000ea0fd:  ret    

----------------
IN: 
0x0ffb0a4d:  testb  $0x1,0x18(%ebx)
0x0ffb0a51:  je     0xffb0a64

----------------
IN: 
0x0ffb0a64:  mov    0x4(%ebx),%ebx
0x0ffb0a67:  sub    $0x4,%ebx
0x0ffb0a6a:  jmp    0xffb06f3

----------------
IN: 
0x0ffb06f3:  cmp    $0xfffffffc,%ebx
0x0ffb06f6:  jne    0xffb09e9

----------------
IN: 
0x0ffafa5b:  push   %ebp
0x0ffafa5c:  push   %edi
0x0ffafa5d:  push   %esi
0x0ffafa5e:  push   %ebx
0x0ffafa5f:  push   %edx
0x0ffafa60:  mov    %eax,%esi
0x0ffafa62:  movw   $0x0,0x2(%esp)
0x0ffafa69:  mov    $0x60,%ebx
0x0ffafa6e:  movzbl 0xffbf9f8(%ebx),%ebp
0x0ffafa75:  mov    %ebp,%ecx
0x0ffafa77:  mov    %ebp,%edx
0x0ffafa79:  sar    $0x3,%edx
0x0ffafa7c:  and    $0x7,%ecx
0x0ffafa7f:  mov    $0x1,%edi
0x0ffafa84:  shl    %cl,%edi
0x0ffafa86:  mov    %edi,%ecx
0x0ffafa88:  or     %cl,0x2(%esp,%edx,1)
0x0ffafa8c:  movzwl (%esi),%eax
0x0ffafa8f:  mov    %ebp,%ecx
0x0ffafa91:  mov    %ebx,%edx
0x0ffafa93:  call   0xea0fe

----------------
IN: 
0x000ea0fe:  push   %esi
0x000ea0ff:  push   %ebx
0x000ea100:  mov    %edx,%ebx
0x000ea102:  mov    0xf54d8,%edx
0x000ea108:  test   %edx,%edx
0x000ea10a:  movzwl %ax,%eax
0x000ea10d:  je     0xea11a

----------------
IN: 
0x000ea11a:  shl    $0x8,%eax
0x000ea11d:  mov    %ebx,%edx
0x000ea11f:  and    $0xfc,%edx
0x000ea125:  or     %edx,%eax
0x000ea127:  or     $0x80000000,%eax
0x000ea12c:  mov    $0xcf8,%edx
0x000ea131:  out    %eax,(%dx)
0x000ea132:  and    $0x3,%ebx
0x000ea135:  lea    0xcfc(%ebx),%edx
0x000ea13b:  mov    %cl,%al
0x000ea13d:  out    %al,(%dx)
0x000ea13e:  pop    %ebx
0x000ea13f:  pop    %esi
0x000ea140:  ret    

----------------
IN: 
0x0ffafa98:  inc    %ebx
0x0ffafa99:  cmp    $0x64,%ebx
0x0ffafa9c:  jne    0xffafa6e

----------------
IN: 
0x0ffafa6e:  movzbl 0xffbf9f8(%ebx),%ebp
0x0ffafa75:  mov    %ebp,%ecx
0x0ffafa77:  mov    %ebp,%edx
0x0ffafa79:  sar    $0x3,%edx
0x0ffafa7c:  and    $0x7,%ecx
0x0ffafa7f:  mov    $0x1,%edi
0x0ffafa84:  shl    %cl,%edi
0x0ffafa86:  mov    %edi,%ecx
0x0ffafa88:  or     %cl,0x2(%esp,%edx,1)
0x0ffafa8c:  movzwl (%esi),%eax
0x0ffafa8f:  mov    %ebp,%ecx
0x0ffafa91:  mov    %ebx,%edx
0x0ffafa93:  call   0xea0fe

----------------
IN: 
0x0ffafa9e:  mov    $0x4d0,%edx
0x0ffafaa3:  mov    0x2(%esp),%al
0x0ffafaa7:  out    %al,(%dx)
0x0ffafaa8:  movzbl 0x3(%esp),%eax
0x0ffafaad:  mov    $0x4d1,%edx
0x0ffafab2:  out    %al,(%dx)
0x0ffafab3:  push   %eax
0x0ffafab4:  movzbl 0x6(%esp),%eax
0x0ffafab9:  push   %eax
0x0ffafaba:  push   $0xf0a04
0x0ffafabf:  call   0xec4d8

----------------
IN: 
0x0ffafac4:  add    $0x10,%esp
0x0ffafac7:  pop    %ebx
0x0ffafac8:  pop    %esi
0x0ffafac9:  pop    %edi
0x0ffafaca:  pop    %ebp
0x0ffafacb:  ret    

----------------
IN: 
0x0ffac262:  push   %edx
0x0ffac263:  movzwl (%eax),%eax
0x0ffac266:  mov    $0x8000,%ecx
0x0ffac26b:  mov    $0x40,%edx
0x0ffac270:  mov    %eax,(%esp)
0x0ffac273:  call   0xea0b9

----------------
IN: 
0x0ffac278:  mov    $0x42,%edx
0x0ffac27d:  mov    (%esp),%eax
0x0ffac280:  add    $0x4,%esp
0x0ffac283:  jmp    0xea0b9

----------------
IN: 
0x0ffb0a17:  mov    %ebx,%eax
0x0ffb0a19:  call   *0xffbfda4

----------------
IN: 
0x0ffabd12:  push   %ebx
0x0ffabd13:  xor    %ecx,%ecx
0x0ffabd15:  mov    0xc(%eax),%ebx
0x0ffabd18:  mov    (%eax),%eax
0x0ffabd1a:  shr    $0x3,%al
0x0ffabd1d:  movzbl %al,%eax
0x0ffabd20:  test   %ebx,%ebx
0x0ffabd22:  je     0xffabd2a

----------------
IN: 
0x0ffabd2a:  lea    -0x1(%ecx,%eax,1),%eax
0x0ffabd2e:  lea    -0x1(%edx,%eax,1),%eax
0x0ffabd32:  and    $0x3,%eax
0x0ffabd35:  movzbl 0xffbfa58(%eax),%eax
0x0ffabd3c:  pop    %ebx
0x0ffabd3d:  ret    

----------------
IN: 
0x0ffb0a1f:  movzbl %al,%ecx
0x0ffb0a22:  mov    $0x3c,%edx
0x0ffb0a27:  mov    %esi,%eax
0x0ffb0a29:  call   0xea0fe

----------------
IN: 
0x0ffaf21e:  movzwl (%eax),%eax
0x0ffaf221:  mov    %eax,0xf5150
0x0ffaf226:  call   0xea186

----------------
IN: 
0x000ea186:  push   %esi
0x000ea187:  push   %ebx
0x000ea188:  movzwl %ax,%esi
0x000ea18b:  mov    $0x9,%ecx
0x000ea190:  mov    $0x3c,%edx
0x000ea195:  mov    %esi,%eax
0x000ea197:  call   0xea0fe

----------------
IN: 
0x000ea19c:  mov    0xf515c,%bx
0x000ea1a3:  mov    %ebx,%ecx
0x000ea1a5:  or     $0x1,%ecx
0x000ea1a8:  movzwl %cx,%ecx
0x000ea1ab:  mov    $0x40,%edx
0x000ea1b0:  mov    %esi,%eax
0x000ea1b2:  call   0xea07a

----------------
IN: 
0x000ea1b7:  mov    $0x1,%ecx
0x000ea1bc:  mov    $0x80,%edx
0x000ea1c1:  mov    %esi,%eax
0x000ea1c3:  call   0xea0fe

----------------
IN: 
0x000ea1c8:  movzwl %bx,%ecx
0x000ea1cb:  add    $0x100,%ecx
0x000ea1d1:  or     $0x1,%ecx
0x000ea1d4:  mov    $0x90,%edx
0x000ea1d9:  mov    %esi,%eax
0x000ea1db:  call   0xea07a

----------------
IN: 
0x000ea1e0:  mov    $0x9,%ecx
0x000ea1e5:  mov    $0xd2,%edx
0x000ea1ea:  mov    %esi,%eax
0x000ea1ec:  pop    %ebx
0x000ea1ed:  pop    %esi
0x000ea1ee:  jmp    0xea0fe

----------------
IN: 
0x0ffaf22b:  movzwl 0xf515c,%edx
0x0ffaf232:  mov    %edx,%eax
0x0ffaf234:  add    $0x4,%edx
0x0ffaf237:  mov    %edx,0xf5d04
0x0ffaf23d:  add    $0x8,%eax
0x0ffaf240:  movzwl %ax,%eax
0x0ffaf243:  jmp    0xffaf1ed

----------------
IN: 
0x0ffaf1ed:  cmpw   $0x40,0xf6038
0x0ffaf1f5:  jne    0xffaf21d

----------------
IN: 
0x0ffaf1f7:  push   %ebx
0x0ffaf1f8:  mov    %eax,%ebx
0x0ffaf1fa:  movzwl %ax,%eax
0x0ffaf1fd:  push   %eax
0x0ffaf1fe:  push   $0xf0545
0x0ffaf203:  call   0xec4d8

----------------
IN: 
0x0ffaf208:  mov    %bx,0xf6038
0x0ffaf20f:  movl   $0xdfc,0xf603c
0x0ffaf219:  pop    %eax
0x0ffaf21a:  pop    %edx
0x0ffaf21b:  pop    %ebx
0x0ffaf21c:  ret    

----------------
IN: 
0x0ffb06fc:  mov    0x8(%esp),%eax
0x0ffb0700:  call   0xffadb56

----------------
IN: 
0x0ffb0705:  mov    0xffbfde8,%eax
0x0ffb070a:  lea    -0x4(%eax),%ebx
0x0ffb070d:  cmp    $0xfffffffc,%ebx
0x0ffb0710:  jne    0xffb0a6f

----------------
IN: 
0x0ffb0a6f:  mov    %ebx,%eax
0x0ffb0a71:  call   0xffac46f

----------------
IN: 
0x0ffac46f:  cmpw   $0x300,0x14(%eax)
0x0ffac475:  jne    0xffac4b3

----------------
IN: 
0x0ffac4b3:  xor    %eax,%eax
0x0ffac4b5:  ret    

----------------
IN: 
0x0ffb0a76:  test   %eax,%eax
0x0ffb0a78:  je     0xffb0a89

----------------
IN: 
0x0ffb0a89:  mov    0x4(%ebx),%ebx
0x0ffb0a8c:  sub    $0x4,%ebx
0x0ffb0a8f:  jmp    0xffb070d

----------------
IN: 
0x0ffb070d:  cmp    $0xfffffffc,%ebx
0x0ffb0710:  jne    0xffb0a6f

----------------
IN: 
0x0ffac477:  push   %ebx
0x0ffac478:  mov    %eax,%ebx
0x0ffac47a:  movzwl (%eax),%eax
0x0ffac47d:  mov    $0x4,%edx
0x0ffac482:  call   0xea491

----------------
IN: 
0x0ffac487:  and    $0x3,%eax
0x0ffac48a:  cmp    $0x3,%ax
0x0ffac48e:  je     0xffac4a5

----------------
IN: 
0x0ffac4a5:  mov    0xc(%ebx),%ebx
0x0ffac4a8:  test   %ebx,%ebx
0x0ffac4aa:  jne    0xffac494

----------------
IN: 
0x0ffac4ac:  mov    $0x1,%eax
0x0ffac4b1:  pop    %ebx
0x0ffac4b2:  ret    

----------------
IN: 
0x0ffb0a7a:  push   %ebx
0x0ffb0a7b:  push   $0xf0d6f
0x0ffb0a80:  call   0xec4d8

----------------
IN: 
0x0ffb0a85:  pop    %eax
0x0ffb0a86:  pop    %edx
0x0ffb0a87:  jmp    0xffb0af4

----------------
IN: 
0x0ffb0af4:  add    $0x60,%esp
0x0ffb0af7:  pop    %ebx
0x0ffb0af8:  pop    %esi
0x0ffb0af9:  pop    %edi
0x0ffb0afa:  pop    %ebp
0x0ffb0afb:  ret    

----------------
IN: 
0x0ffb5975:  mov    $0x7113,%edx
0x0ffb597a:  mov    $0x8086,%eax
0x0ffb597f:  call   0xffabbe4

----------------
IN: 
0x0ffabbe4:  push   %ebx
0x0ffabbe5:  mov    %eax,%ebx
0x0ffabbe7:  mov    0xffbfde8,%eax
0x0ffabbec:  sub    $0x4,%eax
0x0ffabbef:  cmp    $0xfffffffc,%eax
0x0ffabbf2:  je     0xffabc08

----------------
IN: 
0x0ffabbf4:  cmp    %bx,0x10(%eax)
0x0ffabbf8:  jne    0xffabc00

----------------
IN: 
0x0ffabbfa:  cmp    %dx,0x12(%eax)
0x0ffabbfe:  je     0xffabc0a

----------------
IN: 
0x0ffabc00:  mov    0x4(%eax),%ecx
0x0ffabc03:  lea    -0x4(%ecx),%eax
0x0ffabc06:  jmp    0xffabbef

----------------
IN: 
0x0ffabbef:  cmp    $0xfffffffc,%eax
0x0ffabbf2:  je     0xffabc08

----------------
IN: 
0x0ffabc0a:  pop    %ebx
0x0ffabc0b:  ret    

----------------
IN: 
0x0ffb5984:  mov    %eax,%ebx
0x0ffb5986:  mov    $0x1237,%edx
0x0ffb598b:  mov    $0x8086,%eax
0x0ffb5990:  call   0xffabbe4

----------------
IN: 
0x0ffb5995:  test   %ebx,%ebx
0x0ffb5997:  je     0xffb599d

----------------
IN: 
0x0ffb5999:  test   %eax,%eax
0x0ffb599b:  jne    0xffb59c5

----------------
IN: 
0x0ffb59c5:  movzwl (%ebx),%edx
0x0ffb59c8:  mov    %edx,0xf5144
0x0ffb59ce:  movzwl (%eax),%eax
0x0ffb59d1:  mov    %eax,0xf5140
0x0ffb59d6:  call   0xea76a

----------------
IN: 
0x000ea76a:  push   %ebp
0x000ea76b:  push   %edi
0x000ea76c:  push   %esi
0x000ea76d:  push   %ebx
0x000ea76e:  mov    0xf5144,%esi
0x000ea774:  test   %esi,%esi
0x000ea776:  js     0xea866

----------------
IN: 
0x000ea77c:  movzwl %si,%esi
0x000ea77f:  mov    $0x2,%edx
0x000ea784:  mov    %esi,%eax
0x000ea786:  call   0xea491

----------------
IN: 
0x000ea78b:  mov    0xf5140,%ebx
0x000ea791:  cmp    $0x7113,%ax
0x000ea795:  jne    0xea7fb

----------------
IN: 
0x000ea797:  mov    $0x58,%edx
0x000ea79c:  mov    %esi,%eax
0x000ea79e:  call   0xea337

----------------
IN: 
0x000ea7a3:  mov    %eax,%edi
0x000ea7a5:  bt     $0x19,%eax
0x000ea7a9:  jb     0xea866

----------------
IN: 
0x000ea7af:  movzwl %bx,%ebx
0x000ea7b2:  mov    $0x4a,%ecx
0x000ea7b7:  mov    $0x72,%edx
0x000ea7bc:  mov    %ebx,%eax
0x000ea7be:  call   0xea0fe

----------------
IN: 
0x000ea7c3:  call   0xe9b55

----------------
IN: 
0x000e9b55:  push   %edi
0x000e9b56:  push   %esi
0x000e9b57:  mov    $0xafe00,%eax
0x000e9b5c:  mov    $0x3fe00,%esi
0x000e9b61:  mov    $0x80,%ecx
0x000e9b66:  mov    %eax,%edi
0x000e9b68:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000e9b68:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000e9b6a:  mov    0x38000,%eax
0x000e9b6f:  mov    0x38004,%edx
0x000e9b75:  mov    %eax,0xa8000
0x000e9b7a:  mov    %edx,0xa8004
0x000e9b80:  mov    $0xd069,%eax
0x000e9b85:  xor    %edx,%edx
0x000e9b87:  shld   $0x18,%eax,%edx
0x000e9b8b:  shl    $0x18,%eax
0x000e9b8e:  or     $0xeac88c,%eax
0x000e9b93:  mov    %eax,0x38000
0x000e9b98:  mov    %edx,%eax
0x000e9b9a:  or     $0xf00000,%eax
0x000e9b9f:  mov    %eax,0x38004
0x000e9ba4:  pop    %esi
0x000e9ba5:  pop    %edi
0x000e9ba6:  ret    

----------------
IN: 
0x000ea7c8:  or     $0x2000000,%edi
0x000ea7ce:  mov    %edi,%ecx
0x000ea7d0:  mov    $0x58,%edx
0x000ea7d5:  mov    %esi,%eax
0x000ea7d7:  call   0xea07a

----------------
IN: 
0x000ea7dc:  mov    0xf515c,%ax
0x000ea7e2:  lea    0x28(%eax),%edx
0x000ea7e5:  in     (%dx),%eax
0x000ea7e6:  or     $0x1,%eax
0x000ea7e9:  out    %eax,(%dx)
0x000ea7ea:  call   0xe9ba7

----------------
IN: 
0x000e9ba7:  push   %edi
0x000e9ba8:  push   %esi
0x000e9ba9:  mov    $0x1,%al
0x000e9bab:  out    %al,$0xb3
0x000e9bad:  xor    %eax,%eax
0x000e9baf:  out    %al,$0xb2
0x000e9bb1:  in     $0xb3,%al
0x000e9bb3:  test   %al,%al
0x000e9bb5:  jne    0xe9bb1

----------------
IN: 
0x00038000:  mov    %cs,%ax
0x00038002:  ljmp   $0xf000,$0xd069

----------------
IN: 
0x000fd069:  mov    $0xfd072,%edx
0x000fd06f:  jmp    0xfcf43

----------------
IN: 
0x000fcf43:  lidtw  %cs:0x61b8
0x000fcf49:  lgdtw  %cs:0x6178
0x000fcf4f:  mov    %cr0,%ecx
0x000fcf52:  and    $0x1fffffff,%ecx
0x000fcf59:  or     $0x1,%ecx
0x000fcf5d:  mov    %ecx,%cr0

----------------
IN: 
0x000fcf60:  ljmpl  $0x8,$0xfcf68

----------------
IN: 
0x000fcf68:  mov    $0x10,%ecx
0x000fcf6d:  mov    %ecx,%ds

----------------
IN: 
0x000fcf6f:  mov    %ecx,%es

----------------
IN: 
0x000fcf71:  mov    %ecx,%ss

----------------
IN: 
0x000fcf73:  mov    %ecx,%fs

----------------
IN: 
0x000fcf75:  mov    %ecx,%gs
0x000fcf77:  jmp    *%edx

----------------
IN: 
0x000fd072:  mov    $0xa8000,%esp
0x000fd077:  call   0xf00cc

----------------
IN: 
0x000f00cc:  push   %ebp
0x000f00cd:  mov    %esp,%ebp
0x000f00cf:  push   %edi
0x000f00d0:  push   %esi
0x000f00d1:  push   %ebx
0x000f00d2:  and    $0xfffffff8,%esp
0x000f00d5:  sub    $0x48,%esp
0x000f00d8:  mov    %eax,%edx
0x000f00da:  in     $0xb2,%al
0x000f00dc:  movzwl %dx,%edx
0x000f00df:  shl    $0x4,%edx
0x000f00e2:  mov    %edx,%ebx
0x000f00e4:  mov    0xfefc(%edx),%edx
0x000f00ea:  and    $0x2ffff,%edx
0x000f00f0:  cmp    $0x30000,%ebx
0x000f00f6:  jne    0xf0167

----------------
IN: 
0x000f00f8:  cmp    $0x20000,%edx
0x000f00fe:  jne    0xf010c

----------------
IN: 
0x000f0100:  movl   $0xa0000,0x3fef8
0x000f010a:  jmp    0xf0136

----------------
IN: 
0x000f0136:  xor    %eax,%eax
0x000f0138:  out    %al,$0xb3
0x000f013a:  mov    $0xa0000,%ebx
0x000f013f:  mov    $0x3fe00,%eax
0x000f0144:  mov    $0x80,%ecx
0x000f0149:  mov    %ebx,%edi
0x000f014b:  mov    %eax,%esi
0x000f014d:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f014d:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f014f:  mov    $0x80,%ecx
0x000f0154:  mov    %eax,%esi
0x000f0156:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f0156:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f0158:  movl   $0x1,0xf6174
0x000f0162:  jmp    0xf0334

----------------
IN: 
0x000f0334:  lea    -0xc(%ebp),%esp
0x000f0337:  pop    %ebx
0x000f0338:  pop    %esi
0x000f0339:  pop    %edi
0x000f033a:  pop    %ebp
0x000f033b:  ret    

----------------
IN: 
0x000fd07c:  rsm    

----------------
IN: 
0x000e9bb1:  in     $0xb3,%al
0x000e9bb3:  test   %al,%al
0x000e9bb5:  jne    0xe9bb1

----------------
IN: 
0x000e9bb7:  mov    $0x3fe00,%eax
0x000e9bbc:  mov    $0xafe00,%esi
0x000e9bc1:  mov    $0x80,%ecx
0x000e9bc6:  mov    %eax,%edi
0x000e9bc8:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000e9bc8:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000e9bca:  mov    0xa8000,%eax
0x000e9bcf:  mov    0xa8004,%edx
0x000e9bd5:  mov    %eax,0x38000
0x000e9bda:  mov    %edx,0x38004
0x000e9be0:  mov    $0xd069,%eax
0x000e9be5:  xor    %edx,%edx
0x000e9be7:  shld   $0x18,%eax,%edx
0x000e9beb:  shl    $0x18,%eax
0x000e9bee:  or     $0xeac88c,%eax
0x000e9bf3:  mov    %eax,0xa8000
0x000e9bf8:  mov    %edx,%eax
0x000e9bfa:  or     $0xf00000,%eax
0x000e9bff:  mov    %eax,0xa8004
0x000e9c04:  wbinvd 
0x000e9c06:  pop    %esi
0x000e9c07:  pop    %edi
0x000e9c08:  ret    

----------------
IN: 
0x000ea7ef:  mov    $0xa,%ecx
0x000ea7f4:  mov    $0x72,%edx
0x000ea7f9:  jmp    0xea85b

----------------
IN: 
0x000ea85b:  mov    %ebx,%eax
0x000ea85d:  pop    %ebx
0x000ea85e:  pop    %esi
0x000ea85f:  pop    %edi
0x000ea860:  pop    %ebp
0x000ea861:  jmp    0xea0fe

----------------
IN: 
0x0ffb59db:  lea    0x60(%esp),%eax
0x0ffb59df:  push   %eax
0x0ffb59e0:  push   %esi
0x0ffb59e1:  lea    0x54(%esp),%ecx
0x0ffb59e5:  lea    0x50(%esp),%edx
0x0ffb59e9:  mov    $0x1,%eax
0x0ffb59ee:  call   0xe99c3

----------------
IN: 
0x0ffb59f3:  mov    0x68(%esp),%eax
0x0ffb59f7:  and    $0x1020,%eax
0x0ffb59fc:  pop    %ebp
0x0ffb59fd:  pop    %edx
0x0ffb59fe:  cmp    $0x1020,%eax
0x0ffb5a03:  jne    0xffb5c14

----------------
IN: 
0x0ffb5c14:  xor    %edx,%edx
0x0ffb5c16:  xor    %ecx,%ecx
0x0ffb5c18:  mov    $0xf1f60,%eax
0x0ffb5c1d:  call   0xffad81f

----------------
IN: 
0x0ffb5c22:  mov    %edx,%ecx
0x0ffb5c24:  mov    %edx,%edi
0x0ffb5c26:  or     %eax,%edi
0x0ffb5c28:  je     0xffb5c36

----------------
IN: 
0x0ffb5c36:  xor    %edx,%edx
0x0ffb5c38:  xor    %ecx,%ecx
0x0ffb5c3a:  mov    $0xf16bd,%eax
0x0ffb5c3f:  call   0xffad81f

----------------
IN: 
0x0ffb5c44:  mov    %eax,%ebx
0x0ffb5c46:  mov    %eax,0xf5244
0x0ffb5c4b:  call   0xec3bb

----------------
IN: 
0x000ec3bb:  push   %ecx
0x000ec3bc:  movw   $0x0,0x2(%esp)
0x000ec3c3:  cmpl   $0x0,0xf53e4
0x000ec3ca:  je     0xec3df

----------------
IN: 
0x000ec3cc:  mov    $0x2,%ecx
0x000ec3d1:  mov    $0x5,%edx
0x000ec3d6:  lea    0x2(%esp),%eax
0x000ec3da:  call   0xec37e

----------------
IN: 
0x000ec3df:  mov    $0x88,%al
0x000ec3e1:  out    %al,$0x70
0x000ec3e3:  in     $0x71,%al
0x000ec3e5:  inc    %al
0x000ec3e7:  je     0xec3ff

----------------
IN: 
0x000ec3e9:  mov    $0xdf,%al
0x000ec3eb:  out    %al,$0x70
0x000ec3ed:  in     $0x71,%al
0x000ec3ef:  movzbl %al,%eax
0x000ec3f2:  inc    %eax
0x000ec3f3:  cmp    0x2(%esp),%ax
0x000ec3f8:  jbe    0xec3ff

----------------
IN: 
0x000ec3ff:  mov    0x2(%esp),%ax
0x000ec404:  pop    %edx
0x000ec405:  ret    

----------------
IN: 
0x0ffb5c50:  movzwl %ax,%eax
0x0ffb5c53:  cmp    %eax,%ebx
0x0ffb5c55:  jae    0xffb5c5c

----------------
IN: 
0x0ffb5c5c:  call   0xee2db

----------------
IN: 
0x000ee2db:  push   %edi
0x000ee2dc:  push   %esi
0x000ee2dd:  push   %ebx
0x000ee2de:  sub    $0x10,%esp
0x000ee2e1:  lea    0xc(%esp),%eax
0x000ee2e5:  push   %eax
0x000ee2e6:  lea    0xc(%esp),%eax
0x000ee2ea:  push   %eax
0x000ee2eb:  lea    0xc(%esp),%ecx
0x000ee2ef:  lea    0x8(%esp),%edx
0x000ee2f3:  mov    $0x1,%eax
0x000ee2f8:  call   0xe99c3

----------------
IN: 
0x000ee2fd:  pop    %edx
0x000ee2fe:  pop    %ecx
0x000ee2ff:  cmpl   $0x0,(%esp)
0x000ee303:  je     0xee30c

----------------
IN: 
0x000ee305:  testb  $0x2,0xd(%esp)
0x000ee30a:  jne    0xee326

----------------
IN: 
0x000ee326:  movl   $0x1,0xf5240
0x000ee330:  mov    0x10000,%esi
0x000ee336:  mov    0x10004,%edi
0x000ee33c:  mov    $0xd07e,%eax
0x000ee341:  shl    $0x8,%eax
0x000ee344:  or     $0xea,%al
0x000ee346:  mov    %eax,0x10000
0x000ee34b:  movl   $0xf0,0x10004
0x000ee355:  mov    0xfee000f0,%eax
0x000ee35a:  or     $0x1,%ah
0x000ee35d:  mov    %eax,0xfee000f0
0x000ee362:  movl   $0x8700,0xfee00350
0x000ee36c:  movl   $0x8400,0xfee00360
0x000ee376:  movl   $0x1,0xf5210
0x000ee380:  movl   $0xc4500,0xfee00300
0x000ee38a:  movl   $0xc4610,0xfee00300
0x000ee394:  call   0xe9a42

----------------
IN: 
0x000e9a42:  push   %esi
0x000e9a43:  push   %ebx
0x000e9a44:  sub    $0x10,%esp
0x000e9a47:  lea    0xc(%esp),%eax
0x000e9a4b:  push   %eax
0x000e9a4c:  lea    0xc(%esp),%eax
0x000e9a50:  push   %eax
0x000e9a51:  lea    0xc(%esp),%ecx
0x000e9a55:  lea    0x8(%esp),%edx
0x000e9a59:  mov    $0x1,%eax
0x000e9a5e:  call   0xe99c3

CPU Reset (CPU 3)
----------------
IN: 
0x000e9a63:  pop    %eax
0x000e9a64:  pop    %edx
0x000e9a65:  cmpl   $0xff,0xf5244
0x000e9a6f:  ja     0xe9a8f

EAX=00000000 EBX=00000000 ECX=00000000 EDX=00000663
ESI=00000000 EDI=00000000 EBP=00000000 ESP=00000000
EIP=0000fff0 EFL=00000002 [-------] CPL=0 II=0 A20=1 SMM=0 HLT=0
ES =0000 00000000 0000ffff 00009300
CS =f000 ffff0000 0000ffff 00009b00
SS =0000 00000000 0000ffff 00009300
DS =0000 00000000 0000ffff 00009300
FS =0000 00000000 0000ffff 00009300
----------------
IN: 
0x000e9a71:  mov    0x4(%esp),%edx
0x000e9a75:  mov    %edx,%eax
0x000e9a77:  shr    $0x18,%eax
0x000e9a7a:  shr    $0x1d,%edx
0x000e9a7d:  mov    $0x1,%ebx
0x000e9a82:  mov    %al,%cl
0x000e9a84:  shl    %cl,%ebx
0x000e9a86:  or     %ebx,0xf5220(,%edx,4)
0x000e9a8d:  jmp    0xe9ab3

GS =0000 00000000 0000ffff 00009300
LDT=0000 00000000 0000ffff 00008200
TR =0000 00000000 0000ffff 00008b00
GDT=     00000000 0000ffff
IDT=     00000000 0000ffff
CR0=60000010 CR2=00000000 CR3=00000000 CR4=00000000
----------------
IN: 
0x000e9ab3:  add    $0x10,%esp
0x000e9ab6:  pop    %ebx
0x000e9ab7:  pop    %esi
0x000e9ab8:  ret    

DR0=00000000 ----------------
IN: 
0x000ee399:  call   0xec3bb

DR1=00000000 DR2=00000000 DR3=00000000 
DR6=ffff0ff0 DR7=00000400
CCS=00000000 CCD=00000000 CCO=EFLAGS
EFER=0000000000000000
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=0000000000000000 0000000000000000 XMM01=0000000000000000 0000000000000000
XMM02=0000000000000000 0000000000000000 XMM03=0000000000000000 0000000000000000
XMM04=0000000000000000 0000000000000000 XMM05=0000000000000000 0000000000000000
XMM06=0000000000000000 0000000000000000 XMM07=0000000000000000 0000000000000000
CPU Reset (CPU 2)
EAX=00000000 EBX=00000000 ECX=00000000 EDX=00000663
ESI=00000000 EDI=00000000 EBP=00000000 ESP=00000000
EIP=0000fff0 EFL=00000002 [-------] CPL=0 II=0 A20=1 SMM=0 HLT=0
ES =0000 00000000 0000ffff 00009300
CS =f000 ffff0000 0000ffff 00009b00
SS =0000 00000000 0000ffff 00009300
DS =0000 00000000 0000ffff 00009300
FS =0000 00000000 0000ffff 00009300
GS =0000 00000000 0000ffff 00009300
LDT=0000 00000000 0000ffff 00008200
TR =0000 00000000 0000ffff 00008b00
GDT=     00000000 0000ffff
IDT=     00000000 0000ffff
CR0=60000010 CR2=00000000 CR3=00000000 CR4=00000000
DR0=00000000 DR1=00000000 DR2=00000000 DR3=00000000 
DR6=ffff0ff0 DR7=00000400
CCS=00000000 CCD=00000000 CCO=EFLAGS
EFER=0000000000000000
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=0000000000000000 0000000000000000 XMM01=0000000000000000 0000000000000000
XMM02=0000000000000000 0000000000000000 XMM03=0000000000000000 0000000000000000
XMM04=0000000000000000 0000000000000000 XMM05=0000000000000000 0000000000000000
XMM06=0000000000000000 0000000000000000 XMM07=0000000000000000 0000000000000000
CPU Reset (CPU 1)
EAX=00000000 EBX=00000000 ECX=00000000 EDX=00000663
ESI=00000000 EDI=00000000 EBP=00000000 ESP=00000000
EIP=0000fff0 EFL=00000002 [-------] CPL=0 II=0 A20=1 SMM=0 HLT=0
ES =0000 00000000 0000ffff 00009300
CS =f000 ffff0000 0000ffff 00009b00
SS =0000 00000000 0000ffff 00009300
DS =0000 00000000 0000ffff 00009300
FS =0000 00000000 0000ffff 00009300
GS =0000 00000000 0000ffff 00009300
LDT=0000 00000000 0000ffff 00008200
TR =0000 00000000 0000ffff 00008b00
GDT=     00000000 0000ffff
IDT=     00000000 0000ffff
CR0=60000010 CR2=00000000 CR3=00000000 CR4=00000000
DR0=00000000 DR1=00000000 DR2=00000000 DR3=00000000 
DR6=ffff0ff0 DR7=00000400
CCS=00000000 CCD=00000000 CCO=EFLAGS
EFER=0000000000000000
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=0000000000000000 0000000000000000 XMM01=0000000000000000 0000000000000000
XMM02=0000000000000000 0000000000000000 XMM03=0000000000000000 0000000000000000
XMM04=0000000000000000 0000000000000000 XMM05=0000000000000000 0000000000000000
XMM06=0000000000000000 0000000000000000 XMM07=0000000000000000 0000000000000000
----------------
IN: 
0x000ee39e:  movzwl %ax,%ebx
0x000ee3a1:  cmp    0xf5240,%ebx
0x000ee3a7:  je     0xee3c8

----------------
IN: 
0x000ee3a9:  mov    %esp,0xf520c
0x000ee3af:  movl   $0x0,0xf5210
0x000ee3b9:  pause  

----------------
IN: 
0x000ee3bb:  lock btsl $0x0,0xf5210
0x000ee3c4:  jb     0xee3b9

----------------
IN: 
0x00010000:  ljmp   $0xf000,$0xd07e

----------------
IN: 
0x00010000:  ljmp   $0xf000,$0xd07e

----------------
IN: 
0x000fd07e:  cli    
0x000fd07f:  cld    
0x000fd080:  mov    $0xfd08b,%edx
0x000fd086:  jmp    0xfcf43

----------------
IN: 
0x000ee3c6:  jmp    0xee3a1

----------------
IN: 
0x00010000:  ljmp   $0xf000,$0xd07e

----------------
IN: 
0x000ee3a1:  cmp    0xf5240,%ebx
0x000ee3a7:  je     0xee3c8

----------------
IN: 
0x000fcf43:  lidtw  %cs:0x61b8
0x000fcf49:  lgdtw  %cs:0x6178
0x000fcf4f:  mov    %cr0,%ecx
0x000fcf52:  and    $0x1fffffff,%ecx
0x000fcf59:  or     $0x1,%ecx
0x000fcf5d:  mov    %ecx,%cr0

----------------
IN: 
0x000fd07e:  cli    
0x000fd07f:  cld    
0x000fd080:  mov    $0xfd08b,%edx
0x000fd086:  jmp    0xfcf43

----------------
IN: 
0x000fcf43:  lidtw  %cs:0x61b8
0x000fcf49:  lgdtw  %cs:0x6178
0x000fcf4f:  mov    %cr0,%ecx
0x000fcf52:  and    $0x1fffffff,%ecx
0x000fcf59:  or     $0x1,%ecx
0x000fcf5d:  mov    %ecx,%cr0

----------------
IN: 
0x000fcf60:  ljmpl  $0x8,$0xfcf68

----------------
IN: 
0x000fcf60:  ljmpl  $0x8,$0xfcf68

----------------
IN: 
0x000fcf68:  mov    $0x10,%ecx
0x000fcf6d:  mov    %ecx,%ds

----------------
IN: 
0x000fcf6f:  mov    %ecx,%es

----------------
IN: 
0x000fcf71:  mov    %ecx,%ss

----------------
IN: 
0x000fcf60:  ljmpl  $0x8,$0xfcf68

----------------
IN: 
0x000fcf68:  mov    $0x10,%ecx
0x000fcf6d:  mov    %ecx,%ds

----------------
IN: 
0x000fcf73:  mov    %ecx,%fs

----------------
IN: 
0x000fcf73:  mov    %ecx,%fs

----------------
IN: 
0x000fcf73:  mov    %ecx,%fs

----------------
IN: 
0x000fcf75:  mov    %ecx,%gs
0x000fcf77:  jmp    *%edx

----------------
IN: 
0x000fcf75:  mov    %ecx,%gs
0x000fcf77:  jmp    *%edx

----------------
IN: 
0x000fcf75:  mov    %ecx,%gs
0x000fcf77:  jmp    *%edx

----------------
IN: 
0x000fd08b:  lock btsl $0x0,0xf5210
0x000fd094:  jb     0xfd089

----------------
IN: 
0x000fd08b:  lock btsl $0x0,0xf5210
0x000fd094:  jb     0xfd089

----------------
IN: 
0x000fd08b:  lock btsl $0x0,0xf5210
0x000fd094:  jb     0xfd089

----------------
IN: 
0x000ee3b9:  pause  

----------------
IN: 
0x000fd089:  pause  

----------------
IN: 
0x000fd096:  mov    0xf520c,%esp
0x000fd09c:  call   0xf033c

----------------
IN: 
0x000fd089:  pause  

----------------
IN: 
0x000f033c:  call   0xe9a42

----------------
IN: 
0x000f0341:  push   %eax
0x000f0342:  push   $0xf49ee
0x000f0347:  call   0xec4d8

----------------
IN: 
0x000f034c:  call   0xe9a1a

----------------
IN: 
0x000e9a1a:  push   %edi
0x000e9a1b:  push   %esi
0x000e9a1c:  push   %ebx
0x000e9a1d:  mov    $0xf5260,%ebx
0x000e9a22:  mov    0xf5248,%edi
0x000e9a28:  xor    %esi,%esi
0x000e9a2a:  cmp    %edi,%esi
0x000e9a2c:  je     0xe9a3e

----------------
IN: 
0x000e9a3e:  pop    %ebx
0x000e9a3f:  pop    %esi
0x000e9a40:  pop    %edi
0x000e9a41:  ret    

----------------
IN: 
0x000f0351:  incl   0xf5240
0x000f0357:  pop    %eax
0x000f0358:  pop    %edx
0x000f0359:  ret    

----------------
IN: 
0x000fd0a1:  movl   $0x0,0xf5210
0x000fd0ab:  hlt    

----------------
IN: 
0x000ee3c8:  call   0xec186

----------------
IN: 
0x000ec186:  push   %ebx
0x000ec187:  mov    %esp,%eax
0x000ec189:  mov    $0xf6168,%ebx
0x000ec18e:  cmp    $0x100000,%eax
0x000ec193:  jbe    0xec19c

----------------
IN: 
0x000ec19c:  mov    %ebx,%eax
0x000ec19e:  call   0xe97e5

----------------
IN: 
0x000e97e5:  mov    0x4(%eax),%edx
0x000e97e8:  lea    -0x4(%edx),%ecx
0x000e97eb:  cmp    %ecx,%eax
0x000e97ed:  je     0xe9802

----------------
IN: 
0x000e9802:  ret    

----------------
IN: 
0x000ec1a3:  cmp    $0xf6168,%ebx
0x000ec1a9:  jne    0xec1b1

----------------
IN: 
0x000ec1ab:  pop    %ebx
0x000ec1ac:  jmp    0xec16c

----------------
IN: 
0x000ec16c:  cmpb   $0x0,0xf54e1
0x000ec173:  jne    0xec178

----------------
IN: 
0x000ec178:  mov    $0xf88d8,%ecx
0x000ec17d:  xor    %edx,%edx
0x000ec17f:  xor    %eax,%eax
0x000ec181:  jmp    0xec0df

----------------
IN: 
0x000ec0df:  push   %ebp
0x000ec0e0:  push   %edi
0x000ec0e1:  push   %esi
0x000ec0e2:  push   %ebx
0x000ec0e3:  mov    %eax,%esi
0x000ec0e5:  mov    %esp,%eax
0x000ec0e7:  cmp    $0x100000,%eax
0x000ec0ec:  jbe    0xec0f8

----------------
IN: 
0x000ec0f8:  mov    %edx,%ebx
0x000ec0fa:  mov    0xe979c,%al
0x000ec0ff:  lea    -0xf0000(%ecx),%ebp
0x000ec105:  cmp    $0x2,%al
0x000ec107:  movzwl 0xe97a0,%edi
0x000ec10e:  jne    0xec12d

----------------
IN: 
0x000ec12d:  mov    $0xfcf8e,%ecx
0x000ec132:  dec    %al
0x000ec134:  je     0xec149

----------------
IN: 
0x000ec149:  mov    %esi,%eax
0x000ec14b:  mov    $0x61f6,%edx
0x000ec150:  jmp    *%ecx

----------------
IN: 
0x000fcf8e:  mov    $0x30,%ecx
0x000fcf93:  mov    %ecx,%ds

----------------
IN: 
0x000fcf95:  mov    %ecx,%es

----------------
IN: 
0x000fcf97:  mov    %ecx,%ss

----------------
IN: 
0x000fcf99:  mov    %ecx,%fs

----------------
IN: 
0x000fcf9b:  mov    %ecx,%gs
0x000fcf9d:  ljmpw  $0x28,$0xcfa3

----------------
IN: 
0x000fcfa3:  mov    %cr0,%ecx
0x000fcfa6:  and    $0xfffffffe,%ecx
0x000fcfaa:  mov    %ecx,%cr0

----------------
IN: 
0x000fcfad:  ljmp   $0xf000,$0xcfb2

----------------
IN: 
0x000fcfb2:  lidtw  %cs:0x61c0
0x000fcfb8:  xor    %cx,%cx
0x000fcfba:  mov    %cx,%fs
0x000fcfbc:  mov    %cx,%gs
0x000fcfbe:  mov    %cx,%es
0x000fcfc0:  mov    %cx,%ds
0x000fcfc2:  mov    %cx,%ss

----------------
IN: 
0x000fcfc4:  jmpl   *%edx

----------------
IN: 
0x000f61f6:  mov    %edi,%ecx
0x000f61f9:  shl    $0x4,%edi
0x000f61fd:  mov    %cx,%ss

----------------
IN: 
0x000f61ff:  sub    %edi,%esp

----------------
IN: 
0x000f6202:  mov    %cx,%ds
0x000f6204:  mov    %ebx,%edx
0x000f6207:  mov    %ebp,%ecx
0x000f620a:  calll  0xf7c9f

----------------
IN: 
0x000f7c9f:  push   %edi
0x000f7ca1:  push   %esi
0x000f7ca3:  push   %ebx
0x000f7ca5:  push   %ebx
0x000f7ca7:  mov    %eax,%edi
0x000f7caa:  addr32 mov %edx,(%esp)
0x000f7caf:  mov    %ecx,%esi
0x000f7cb2:  calll  0xf7188

----------------
IN: 
0x000f7188:  push   %esi
0x000f718a:  push   %ebx
0x000f718c:  sub    $0x8,%esp
0x000f7190:  mov    $0xd980,%esi
0x000f7196:  mov    %si,%es
0x000f7198:  mov    %es:-0x64,%bl
0x000f719d:  xor    %eax,%eax
0x000f71a0:  mov    %al,%es:0xff9c
0x000f71a4:  xor    %eax,%eax
0x000f71a7:  mov    %ax,%es:0xffa0
0x000f71ab:  cmp    $0x2,%bl
0x000f71ae:  je     0xf720b

----------------
IN: 
0x000f71b0:  mov    %es:0xff9e,%al
0x000f71b4:  test   %al,%al
0x000f71b6:  jne    0xf71c1

----------------
IN: 
0x000f71c1:  mov    %si,%es
0x000f71c3:  mov    %es:0xffac,%ax
0x000f71c7:  addr32 mov %ax,0x2(%esp)
0x000f71cc:  mov    %es:0xffae,%eax
0x000f71d1:  addr32 mov %eax,0x4(%esp)
0x000f71d7:  addr32 lgdtl 0x2(%esp)
0x000f71de:  mov    %si,%es
0x000f71e0:  mov    %es:0xffa2,%ax
0x000f71e4:  mov    %ax,%fs
0x000f71e6:  mov    %es:0xffa4,%ax
0x000f71ea:  mov    %ax,%gs
0x000f71ec:  mov    %es:0xffa8,%eax
0x000f71f1:  and    $0x60000000,%eax
0x000f71f7:  mov    %eax,%edx
0x000f71fa:  je     0xf720b

----------------
IN: 
0x000f720b:  mov    %si,%es
0x000f720d:  mov    %es:0xff9d,%al
0x000f7211:  test   %al,%al
0x000f7213:  js     0xf7219

----------------
IN: 
0x000f7215:  out    %al,$0x70
0x000f7217:  in     $0x71,%al
0x000f7219:  mov    %bl,%al
0x000f721b:  add    $0x8,%esp
0x000f721f:  pop    %ebx
0x000f7221:  pop    %esi
0x000f7223:  retl   

----------------
IN: 
0x000f7cb8:  mov    %al,%bl
0x000f7cba:  addr32 mov (%esp),%edx
0x000f7cbf:  mov    %edi,%eax
0x000f7cc2:  calll  *%esi

----------------
IN: 
0x000f88d8:  calll  0xf6da5

----------------
IN: 
0x000f6da5:  mov    %ss,%ax
0x000f6da7:  movzwl %ax,%edx
0x000f6dab:  xor    %eax,%eax
0x000f6dae:  cmp    $0xd980,%edx
0x000f6db5:  jne    0xf6dc7

----------------
IN: 
0x000f6dc7:  retl   

----------------
IN: 
0x000f88de:  test   %eax,%eax
0x000f88e1:  je     0xf88f2

----------------
IN: 
0x000f88f2:  sti    

----------------
IN: 
0x000f88f3:  nop    

----------------
IN: 
0x000f88f4:  pause  

----------------
IN: 
0x000f88f6:  cli    
0x000f88f7:  cld    
0x000f88f8:  retl   

----------------
IN: 
0x000f7cc5:  mov    %eax,%esi
0x000f7cc8:  movzbl %bl,%eax
0x000f7ccc:  calll  0xf6b68

----------------
IN: 
0x000f6b68:  push   %esi
0x000f6b6a:  push   %ebx
0x000f6b6c:  sub    $0x8,%esp
0x000f6b70:  mov    %eax,%ebx
0x000f6b73:  cmp    $0x2,%al
0x000f6b75:  je     0xf6bca

----------------
IN: 
0x000f6b77:  mov    %cr0,%eax
0x000f6b7a:  test   $0x1,%al
0x000f6b7c:  je     0xf6b84

----------------
IN: 
0x000f6b84:  mov    $0xd980,%esi
0x000f6b8a:  mov    %si,%es
0x000f6b8c:  mov    %eax,%es:0xffa8
0x000f6b91:  mov    %fs,%ax
0x000f6b93:  mov    %ax,%es:0xffa2
0x000f6b97:  mov    %gs,%ax
0x000f6b99:  mov    %ax,%es:0xffa4
0x000f6b9d:  addr32 sgdtl 0x2(%esp)
0x000f6ba4:  addr32 mov 0x2(%esp),%ax
0x000f6ba9:  mov    %ax,%es:0xffac
0x000f6bad:  addr32 mov 0x4(%esp),%eax
0x000f6bb3:  mov    %eax,%es:0xffae
0x000f6bb8:  mov    $0x1,%eax
0x000f6bbe:  calll  0xf6b40

----------------
IN: 
0x000f6b40:  mov    %eax,%ecx
0x000f6b43:  in     $0x92,%al
0x000f6b45:  mov    %al,%dl
0x000f6b47:  shr    %dl
0x000f6b49:  and    $0x1,%edx
0x000f6b4d:  test   %cl,%cl
0x000f6b4f:  setne  %cl
0x000f6b52:  cmp    %cl,%dl
0x000f6b54:  je     0xf6b5c

----------------
IN: 
0x000f6b5c:  mov    %dl,%al
0x000f6b5e:  retl   

----------------
IN: 
0x000f6bc4:  mov    %si,%es
0x000f6bc6:  mov    %al,%es:0xff9e
0x000f6bca:  mov    %ss,%ax
0x000f6bcc:  mov    $0xd980,%ecx
0x000f6bd2:  mov    %cx,%es
0x000f6bd4:  mov    %ax,%es:0xffa0
0x000f6bd8:  in     $0x70,%al
0x000f6bda:  mov    %al,%dl
0x000f6bdc:  test   %al,%al
0x000f6bde:  js     0xf6be8

----------------
IN: 
0x000f6be8:  mov    %cx,%es
0x000f6bea:  mov    %dl,%es:-0x63
0x000f6bef:  mov    %bl,%es:-0x64
0x000f6bf4:  xor    %eax,%eax
0x000f6bf7:  add    $0x8,%esp
0x000f6bfb:  pop    %ebx
0x000f6bfd:  pop    %esi
0x000f6bff:  retl   

----------------
IN: 
0x000f7cd2:  mov    %esi,%eax
0x000f7cd5:  pop    %esi
0x000f7cd7:  pop    %ebx
0x000f7cd9:  pop    %esi
0x000f7cdb:  pop    %edi
0x000f7cdd:  retl   

----------------
IN: 
0x000f6210:  mov    $0xec152,%edx
0x000f6216:  jmp    0xfcf43

----------------
IN: 
0x000fcf68:  mov    $0x10,%ecx
0x000fcf6d:  mov    %ecx,%ds

----------------
IN: 
0x000fcf6f:  mov    %ecx,%es

----------------
IN: 
0x000ec152:  add    %edi,%esp
0x000ec154:  pop    %ebx
0x000ec155:  pop    %esi
0x000ec156:  pop    %edi
0x000ec157:  pop    %ebp
0x000ec158:  ret    

----------------
IN: 
0x000ee3cd:  mov    %esi,0x10000
0x000ee3d3:  mov    %edi,0x10004
0x000ee3d9:  pushl  0xf5244
0x000ee3df:  push   %ebx
0x000ee3e0:  push   $0xf129b
0x000ee3e5:  call   0xec4d8

----------------
IN: 
0x000ee3ea:  add    $0xc,%esp
0x000ee3ed:  add    $0x10,%esp
0x000ee3f0:  pop    %ebx
0x000ee3f1:  pop    %esi
0x000ee3f2:  pop    %edi
0x000ee3f3:  ret    

----------------
IN: 
0x0ffb5c61:  cmpl   $0xff,0xf5244
0x0ffb5c6b:  ja     0xffb6049

----------------
IN: 
0x0ffb5c71:  movl   $0x52495024,0xffbfc00
0x0ffb5c7b:  mov    $0x80,%edx
0x0ffb5c80:  mov    $0xffbfc00,%eax
0x0ffb5c85:  call   0xeaaa5

----------------
IN: 
0x0ffb5c8a:  sub    %al,0xffbfc1f
0x0ffb5c90:  cmpl   $0x0,0xf5d08
0x0ffb5c97:  jne    0xffb5ca3

----------------
IN: 
0x0ffb5c99:  mov    $0xffbfc00,%eax
0x0ffb5c9e:  call   0xffb1655

----------------
IN: 
0x0ffb1655:  push   %edi
0x0ffb1656:  push   %esi
0x0ffb1657:  push   %ebx
0x0ffb1658:  movzwl 0x6(%eax),%ebx
0x0ffb165c:  cmp    $0x1f,%bx
0x0ffb1660:  jbe    0xffb16ab

----------------
IN: 
0x0ffb1662:  mov    %eax,%esi
0x0ffb1664:  mov    %ebx,%edx
0x0ffb1666:  call   0xeaaa5

----------------
IN: 
0x0ffb166b:  test   %al,%al
0x0ffb166d:  jne    0xffb16ab

----------------
IN: 
0x0ffb166f:  mov    %ebx,%eax
0x0ffb1671:  call   0xffae0d4

----------------
IN: 
0x0ffae0d4:  mov    %eax,%edx
0x0ffae0d6:  mov    $0x10,%ecx
0x0ffae0db:  mov    $0xffbfe80,%eax
0x0ffae0e0:  jmp    0xffadfb2

----------------
IN: 
0x0ffb1676:  mov    %eax,%ebx
0x0ffb1678:  test   %eax,%eax
0x0ffb167a:  jne    0xffb168e

----------------
IN: 
0x0ffb168e:  push   %eax
0x0ffb168f:  push   %esi
0x0ffb1690:  push   $0xf100f
0x0ffb1695:  call   0xec4d8

----------------
IN: 
0x0ffb169a:  movzwl 0x6(%esi),%ecx
0x0ffb169e:  mov    %ebx,%edi
0x0ffb16a0:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffb16a0:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffb16a2:  mov    %ebx,0xf5d08
0x0ffb16a8:  add    $0xc,%esp
0x0ffb16ab:  pop    %ebx
0x0ffb16ac:  pop    %esi
0x0ffb16ad:  pop    %edi
0x0ffb16ae:  ret    

----------------
IN: 
0x0ffb5ca3:  mov    $0x8000,%eax
0x0ffb5ca8:  call   0xffae09f

----------------
IN: 
0x0ffb5cad:  mov    %eax,%ebp
0x0ffb5caf:  test   %eax,%eax
0x0ffb5cb1:  jne    0xffb5cc7

----------------
IN: 
0x0ffb5cc7:  mov    $0x2c,%ecx
0x0ffb5ccc:  xor    %edx,%edx
0x0ffb5cce:  call   0xeab7b

----------------
IN: 
0x0ffb5cd3:  movl   $0x504d4350,(%eax)
0x0ffb5cd9:  movb   $0x4,0x6(%eax)
0x0ffb5cdd:  movl   $0x48434f42,0x8(%eax)
0x0ffb5ce4:  movl   $0x55504353,0xc(%eax)
0x0ffb5ceb:  lea    0x10(%eax),%eax
0x0ffb5cee:  mov    $0xf1f78,%esi
0x0ffb5cf3:  mov    $0x3,%ecx
0x0ffb5cf8:  mov    %eax,%edi
0x0ffb5cfa:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffb5cfa:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffb5cfc:  movl   $0xfee00000,0x24(%ebp)
0x0ffb5d03:  lea    0x60(%esp),%eax
0x0ffb5d07:  push   %eax
0x0ffb5d08:  lea    0x5c(%esp),%eax
0x0ffb5d0c:  push   %eax
0x0ffb5d0d:  lea    0x58(%esp),%ecx
0x0ffb5d11:  lea    0x54(%esp),%edx
0x0ffb5d15:  mov    $0x1,%eax
0x0ffb5d1a:  call   0xe99c3

----------------
IN: 
0x0ffb5d1f:  pop    %ebx
0x0ffb5d20:  pop    %esi
0x0ffb5d21:  cmpl   $0x0,0x4c(%esp)
0x0ffb5d26:  jne    0xffb5d3f

----------------
IN: 
0x0ffb5d3f:  mov    $0x1,%edi
0x0ffb5d44:  testb  $0x10,0x63(%esp)
0x0ffb5d49:  je     0xffb5d57

----------------
IN: 
0x0ffb5d4b:  movzbl 0x52(%esp),%ecx
0x0ffb5d50:  dec    %ecx
0x0ffb5d51:  bsr    %ecx,%ecx
0x0ffb5d54:  inc    %ecx
0x0ffb5d55:  shl    %cl,%edi
0x0ffb5d57:  mov    0xfee00030,%eax
0x0ffb5d5c:  mov    %al,(%esp)
0x0ffb5d5f:  lea    0x2c(%ebp),%eax
0x0ffb5d62:  mov    %eax,0x4(%esp)
0x0ffb5d66:  xor    %esi,%esi
0x0ffb5d68:  mov    %eax,%ebx
0x0ffb5d6a:  cmp    %esi,0xf5244
0x0ffb5d70:  jbe    0xffb5dc7

----------------
IN: 
0x0ffb5d72:  mov    $0x14,%ecx
0x0ffb5d77:  xor    %edx,%edx
0x0ffb5d79:  mov    %ebx,%eax
0x0ffb5d7b:  call   0xeab7b

----------------
IN: 
0x0ffb5d80:  movb   $0x0,(%ebx)
0x0ffb5d83:  mov    %esi,%eax
0x0ffb5d85:  mov    %al,0x1(%ebx)
0x0ffb5d88:  mov    (%esp),%al
0x0ffb5d8b:  mov    %al,0x2(%ebx)
0x0ffb5d8e:  mov    %esi,%eax
0x0ffb5d90:  shr    $0x5,%al
0x0ffb5d93:  movzbl %al,%eax
0x0ffb5d96:  mov    0xf5220(,%eax,4),%eax
0x0ffb5d9d:  mov    %esi,%ecx
0x0ffb5d9f:  shr    %cl,%eax
0x0ffb5da1:  and    $0x1,%eax
0x0ffb5da4:  mov    %eax,%edx
0x0ffb5da6:  test   %esi,%esi
0x0ffb5da8:  sete   %al
0x0ffb5dab:  shl    %eax
0x0ffb5dad:  or     %edx,%eax
0x0ffb5daf:  mov    %al,0x3(%ebx)
0x0ffb5db2:  mov    0x4c(%esp),%eax
0x0ffb5db6:  mov    %eax,0x4(%ebx)
0x0ffb5db9:  mov    0x60(%esp),%eax
0x0ffb5dbd:  mov    %eax,0x8(%ebx)
0x0ffb5dc0:  add    $0x14,%ebx
0x0ffb5dc3:  add    %edi,%esi
0x0ffb5dc5:  jmp    0xffb5d6a

----------------
IN: 
0x0ffb5d6a:  cmp    %esi,0xf5244
0x0ffb5d70:  jbe    0xffb5dc7

----------------
IN: 
0x0ffb5dc7:  mov    %ebx,%edi
0x0ffb5dc9:  sub    0x4(%esp),%edi
0x0ffb5dcd:  sar    $0x2,%edi
0x0ffb5dd0:  imul   $0xcccccccd,%edi,%edi
0x0ffb5dd6:  mov    %ebx,%esi
0x0ffb5dd8:  cmpl   $0x0,0xffbfde8
0x0ffb5ddf:  je     0xffb5e05

----------------
IN: 
0x0ffb5de1:  lea    0x8(%ebx),%esi
0x0ffb5de4:  mov    $0x8,%ecx
0x0ffb5de9:  xor    %edx,%edx
0x0ffb5deb:  mov    %ebx,%eax
0x0ffb5ded:  call   0xeab7b

----------------
IN: 
0x0ffb5df2:  movw   $0x1,(%ebx)
0x0ffb5df7:  movl   $0x20494350,0x2(%ebx)
0x0ffb5dfe:  movw   $0x2020,0x6(%ebx)
0x0ffb5e04:  inc    %edi
0x0ffb5e05:  mov    $0x8,%ecx
0x0ffb5e0a:  xor    %edx,%edx
0x0ffb5e0c:  mov    %esi,%eax
0x0ffb5e0e:  call   0xeab7b

----------------
IN: 
0x0ffb5e13:  movb   $0x1,(%esi)
0x0ffb5e16:  sub    %ebx,%eax
0x0ffb5e18:  sar    $0x3,%eax
0x0ffb5e1b:  mov    %eax,0x4(%esp)
0x0ffb5e1f:  mov    0x4(%esp),%al
0x0ffb5e23:  mov    %al,0x1c(%esp)
0x0ffb5e27:  mov    %al,0x1(%esi)
0x0ffb5e2a:  movl   $0x20415349,0x2(%esi)
0x0ffb5e31:  movw   $0x2020,0x6(%esi)
0x0ffb5e37:  lea    0x8(%esi),%eax
0x0ffb5e3a:  mov    $0x8,%ecx
0x0ffb5e3f:  call   0xeab7b

----------------
IN: 
0x0ffb5e44:  movl   $0x1110002,0x8(%esi)
0x0ffb5e4b:  movl   $0xfec00000,0xc(%esi)
0x0ffb5e52:  lea    0x2(%edi),%eax
0x0ffb5e55:  mov    %eax,0x24(%esp)
0x0ffb5e59:  lea    0x10(%esi),%eax
0x0ffb5e5c:  mov    %eax,0x10(%esp)
0x0ffb5e60:  mov    0xffbfde8,%eax
0x0ffb5e65:  lea    -0x4(%eax),%edi
0x0ffb5e68:  mov    0x10(%esp),%ebx
0x0ffb5e6c:  movw   $0x0,0x8(%esp)
0x0ffb5e73:  movl   $0xffffffff,0x18(%esp)
0x0ffb5e7b:  cmp    $0xfffffffc,%edi
0x0ffb5e7e:  je     0xffb5f44

----------------
IN: 
0x0ffb5e84:  movzwl (%edi),%eax
0x0ffb5e87:  mov    %eax,%esi
0x0ffb5e89:  mov    %eax,(%esp)
0x0ffb5e8c:  shr    $0x8,%ax
0x0ffb5e90:  jne    0xffb5f44

----------------
IN: 
0x0ffb5e96:  mov    $0x3d,%edx
0x0ffb5e9b:  movzwl %si,%eax
0x0ffb5e9e:  call   0xea4cf

----------------
IN: 
0x0ffb5ea3:  mov    %al,(%esp)
0x0ffb5ea6:  movzbl %al,%ecx
0x0ffb5ea9:  mov    %ecx,0x30(%esp)
0x0ffb5ead:  mov    $0x3c,%edx
0x0ffb5eb2:  movzwl %si,%eax
0x0ffb5eb5:  call   0xea4cf

----------------
IN: 
0x0ffb5eba:  mov    %al,0x2c(%esp)
0x0ffb5ebe:  mov    0x30(%esp),%ecx
0x0ffb5ec2:  test   %ecx,%ecx
0x0ffb5ec4:  je     0xffb5f39

----------------
IN: 
0x0ffb5f39:  mov    0x4(%edi),%eax
0x0ffb5f3c:  lea    -0x4(%eax),%edi
0x0ffb5f3f:  jmp    0xffb5e7b

----------------
IN: 
0x0ffb5e7b:  cmp    $0xfffffffc,%edi
0x0ffb5e7e:  je     0xffb5f44

----------------
IN: 
0x0ffb5ec6:  mov    %esi,%eax
0x0ffb5ec8:  and    $0xfff8,%eax
0x0ffb5ecd:  cmp    0x18(%esp),%eax
0x0ffb5ed1:  jne    0xffb5ee3

----------------
IN: 
0x0ffb5ee3:  mov    %eax,0x18(%esp)
0x0ffb5ee7:  movw   $0x0,0x8(%esp)
0x0ffb5eee:  mov    $0x1,%eax
0x0ffb5ef3:  mov    (%esp),%cl
0x0ffb5ef6:  shl    %cl,%eax
0x0ffb5ef8:  or     %ax,0x8(%esp)
0x0ffb5efd:  mov    $0x8,%ecx
0x0ffb5f02:  xor    %edx,%edx
0x0ffb5f04:  mov    %ebx,%eax
0x0ffb5f06:  call   0xeab7b

----------------
IN: 
0x0ffb5f0b:  movl   $0x10003,(%ebx)
0x0ffb5f11:  movb   $0x0,0x4(%ebx)
0x0ffb5f15:  shr    $0x3,%si
0x0ffb5f19:  lea    0x0(,%esi,4),%eax
0x0ffb5f20:  mov    (%esp),%esi
0x0ffb5f23:  lea    -0x1(%esi),%edx
0x0ffb5f26:  or     %edx,%eax
0x0ffb5f28:  mov    %al,0x5(%ebx)
0x0ffb5f2b:  movb   $0x0,0x6(%ebx)
0x0ffb5f2f:  mov    0x2c(%esp),%al
0x0ffb5f33:  mov    %al,0x7(%ebx)
0x0ffb5f36:  add    $0x8,%ebx
0x0ffb5f39:  mov    0x4(%edi),%eax
0x0ffb5f3c:  lea    -0x4(%eax),%edi
0x0ffb5f3f:  jmp    0xffb5e7b

----------------
IN: 
0x0ffb5f44:  xor    %edx,%edx
0x0ffb5f46:  xor    %ecx,%ecx
0x0ffb5f48:  mov    $0xf16ab,%eax
0x0ffb5f4d:  call   0xffad81f

----------------
IN: 
0x0ffb5f52:  mov    %eax,%edi
0x0ffb5f54:  xor    %esi,%esi
0x0ffb5f56:  mov    $0x8,%ecx
0x0ffb5f5b:  xor    %edx,%edx
0x0ffb5f5d:  mov    %ebx,%eax
0x0ffb5f5f:  call   0xeab7b

----------------
IN: 
0x0ffb5f64:  mov    $0xe20,%eax
0x0ffb5f69:  mov    %esi,%ecx
0x0ffb5f6b:  sar    %cl,%eax
0x0ffb5f6d:  test   $0x1,%al
0x0ffb5f6f:  jne    0xffb5fa1

----------------
IN: 
0x0ffb5f71:  movl   $0x3,(%ebx)
0x0ffb5f77:  mov    0x1c(%esp),%al
0x0ffb5f7b:  mov    %al,0x4(%ebx)
0x0ffb5f7e:  mov    %cl,0x5(%ebx)
0x0ffb5f81:  movb   $0x0,0x6(%ebx)
0x0ffb5f85:  mov    %cl,0x7(%ebx)
0x0ffb5f88:  test   %edi,%edi
0x0ffb5f8a:  je     0xffb5f9e

----------------
IN: 
0x0ffb5f8c:  test   %esi,%esi
0x0ffb5f8e:  jne    0xffb5f96

----------------
IN: 
0x0ffb5f90:  movb   $0x2,0x7(%ebx)
0x0ffb5f94:  jmp    0xffb5f9e

----------------
IN: 
0x0ffb5f9e:  add    $0x8,%ebx
0x0ffb5fa1:  inc    %esi
0x0ffb5fa2:  cmp    $0x10,%esi
0x0ffb5fa5:  jne    0xffb5f56

----------------
IN: 
0x0ffb5f56:  mov    $0x8,%ecx
0x0ffb5f5b:  xor    %edx,%edx
0x0ffb5f5d:  mov    %ebx,%eax
0x0ffb5f5f:  call   0xeab7b

----------------
IN: 
0x0ffb5f96:  cmp    $0x2,%esi
0x0ffb5f99:  jne    0xffb5f9e

----------------
IN: 
0x0ffb5f9b:  sub    $0x8,%ebx
0x0ffb5f9e:  add    $0x8,%ebx
0x0ffb5fa1:  inc    %esi
0x0ffb5fa2:  cmp    $0x10,%esi
0x0ffb5fa5:  jne    0xffb5f56

----------------
IN: 
0x0ffb5fa1:  inc    %esi
0x0ffb5fa2:  cmp    $0x10,%esi
0x0ffb5fa5:  jne    0xffb5f56

----------------
IN: 
0x0ffb5fa7:  movl   $0x304,(%ebx)
0x0ffb5fad:  mov    0x4(%esp),%al
0x0ffb5fb1:  mov    %al,0x4(%ebx)
0x0ffb5fb4:  movl   $0x4000000,0x5(%ebx)
0x0ffb5fbb:  movw   $0x1,0x9(%ebx)
0x0ffb5fc1:  movb   $0x0,0xb(%ebx)
0x0ffb5fc5:  mov    %al,0xc(%ebx)
0x0ffb5fc8:  movw   $0xff00,0xd(%ebx)
0x0ffb5fce:  movb   $0x1,0xf(%ebx)
0x0ffb5fd2:  add    $0x10,%ebx
0x0ffb5fd5:  mov    %ebx,%edx
0x0ffb5fd7:  sub    %ebp,%edx
0x0ffb5fd9:  sub    0x10(%esp),%ebx
0x0ffb5fdd:  sar    $0x3,%ebx
0x0ffb5fe0:  add    0x24(%esp),%ebx
0x0ffb5fe4:  mov    %bx,0x22(%ebp)
0x0ffb5fe8:  mov    %dx,0x4(%ebp)
0x0ffb5fec:  mov    %ebp,%eax
0x0ffb5fee:  call   0xeaaa5

----------------
IN: 
0x0ffb5ff3:  sub    %al,0x7(%ebp)
0x0ffb5ff6:  mov    $0x10,%ecx
0x0ffb5ffb:  xor    %edx,%edx
0x0ffb5ffd:  lea    0x84(%esp),%eax
0x0ffb6004:  call   0xeab7b

----------------
IN: 
0x0ffb6009:  movl   $0x5f504d5f,0x84(%esp)
0x0ffb6014:  mov    %ebp,0x88(%esp)
0x0ffb601b:  movw   $0x401,0x8c(%esp)
0x0ffb6025:  mov    $0x10,%edx
0x0ffb602a:  call   0xeaaa5

----------------
IN: 
0x0ffb602f:  sub    %al,0x8e(%esp)
0x0ffb6036:  lea    0x84(%esp),%eax
0x0ffb603d:  call   0xffb16af

----------------
IN: 
0x0ffb16af:  push   %ebp
0x0ffb16b0:  push   %edi
0x0ffb16b1:  push   %esi
0x0ffb16b2:  push   %ebx
0x0ffb16b3:  sub    $0x8,%esp
0x0ffb16b6:  mov    0x4(%eax),%ebx
0x0ffb16b9:  test   %ebx,%ebx
0x0ffb16bb:  je     0xffb175c

----------------
IN: 
0x0ffb16c1:  mov    %eax,%ebp
0x0ffb16c3:  mov    $0x10,%edx
0x0ffb16c8:  call   0xeaaa5

----------------
IN: 
0x0ffb16cd:  test   %al,%al
0x0ffb16cf:  jne    0xffb175c

----------------
IN: 
0x0ffb16d5:  movzbl 0x8(%ebp),%eax
0x0ffb16d9:  shl    $0x4,%eax
0x0ffb16dc:  mov    %eax,(%esp)
0x0ffb16df:  movzwl 0x4(%ebx),%eax
0x0ffb16e3:  mov    %eax,0x4(%esp)
0x0ffb16e7:  mov    (%esp),%eax
0x0ffb16ea:  add    0x4(%esp),%eax
0x0ffb16ee:  cmp    $0x258,%eax
0x0ffb16f3:  jbe    0xffb1704

----------------
IN: 
0x0ffb1704:  call   0xffae0d4

----------------
IN: 
0x0ffb1709:  mov    %eax,%ebx
0x0ffb170b:  test   %eax,%eax
0x0ffb170d:  jne    0xffb1725

----------------
IN: 
0x0ffb1725:  push   %eax
0x0ffb1726:  pushl  0x4(%ebp)
0x0ffb1729:  push   %ebp
0x0ffb172a:  push   $0xf105e
0x0ffb172f:  call   0xec4d8

----------------
IN: 
0x0ffb1734:  mov    %ebx,%edi
0x0ffb1736:  mov    %ebp,%esi
0x0ffb1738:  mov    0x10(%esp),%ecx
0x0ffb173c:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffb173c:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffb173e:  mov    %edi,0x4(%ebx)
0x0ffb1741:  mov    $0x10,%edx
0x0ffb1746:  mov    %ebx,%eax
0x0ffb1748:  call   0xeaaa5

----------------
IN: 
0x0ffb174d:  sub    %al,0xa(%ebx)
0x0ffb1750:  mov    0x4(%ebp),%esi
0x0ffb1753:  mov    0x14(%esp),%ecx
0x0ffb1757:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffb1757:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffb1759:  add    $0x10,%esp
0x0ffb175c:  add    $0x8,%esp
0x0ffb175f:  pop    %ebx
0x0ffb1760:  pop    %esi
0x0ffb1761:  pop    %edi
0x0ffb1762:  pop    %ebp
0x0ffb1763:  ret    

----------------
IN: 
0x0ffb6042:  mov    %ebp,%eax
0x0ffb6044:  call   0xffadb56

----------------
IN: 
0x0ffb6049:  call   0xffb1849

----------------
IN: 
0x0ffb1849:  push   %ebp
0x0ffb184a:  push   %edi
0x0ffb184b:  push   %esi
0x0ffb184c:  push   %ebx
0x0ffb184d:  sub    $0x2c,%esp
0x0ffb1850:  mov    $0xf10d1,%eax
0x0ffb1855:  call   0xffad7ee

----------------
IN: 
0x0ffb185a:  mov    %eax,%esi
0x0ffb185c:  mov    $0xf10ea,%eax
0x0ffb1861:  call   0xffad7ee

----------------
IN: 
0x0ffb1866:  test   %esi,%esi
0x0ffb1868:  je     0xffb19af

----------------
IN: 
0x0ffb186e:  mov    %eax,%ebx
0x0ffb1870:  test   %eax,%eax
0x0ffb1872:  je     0xffb19af

----------------
IN: 
0x0ffb1878:  cmpl   $0x1f,0x84(%esi)
0x0ffb187f:  jne    0xffb19af

----------------
IN: 
0x0ffb1885:  mov    $0x1f,%ecx
0x0ffb188a:  lea    0xd(%esp),%edx
0x0ffb188e:  mov    %esi,%eax
0x0ffb1890:  call   *0x88(%esi)

----------------
IN: 
0x0ffb1896:  mov    0x84(%ebx),%eax
0x0ffb189c:  movzwl 0x23(%esp),%edx
0x0ffb18a1:  cmp    %edx,%eax
0x0ffb18a3:  jne    0xffb19af

----------------
IN: 
0x0ffb18a9:  call   0xffae08e

----------------
IN: 
0x0ffb18ae:  mov    %eax,0x4(%esp)
0x0ffb18b2:  test   %eax,%eax
0x0ffb18b4:  jne    0xffb18ca

----------------
IN: 
0x0ffb18ca:  mov    0x84(%ebx),%ecx
0x0ffb18d0:  mov    0x4(%esp),%edx
0x0ffb18d4:  mov    %ebx,%eax
0x0ffb18d6:  call   *0x88(%ebx)

----------------
IN: 
0x0ffb18dc:  mov    0x4(%esp),%eax
0x0ffb18e0:  mov    %eax,0x25(%esp)
0x0ffb18e4:  xor    %edx,%edx
0x0ffb18e6:  lea    0xd(%esp),%eax
0x0ffb18ea:  call   0xffabcb8

----------------
IN: 
0x0ffabcb8:  test   %eax,%eax
0x0ffabcba:  je     0xffabd11

----------------
IN: 
0x0ffabcbc:  push   %ebx
0x0ffabcbd:  mov    0x18(%eax),%ecx
0x0ffabcc0:  movzwl 0x16(%eax),%ebx
0x0ffabcc4:  add    %ecx,%ebx
0x0ffabcc6:  test   %edx,%edx
0x0ffabcc8:  je     0xffabcf0

----------------
IN: 
0x0ffabcf0:  xor    %eax,%eax
0x0ffabcf2:  cmp    %ebx,%ecx
0x0ffabcf4:  jae    0xffabd0f

----------------
IN: 
0x0ffabcf6:  lea    0x4(%ecx),%edx
0x0ffabcf9:  xor    %eax,%eax
0x0ffabcfb:  cmp    %edx,%ebx
0x0ffabcfd:  jbe    0xffabd0f

----------------
IN: 
0x0ffabcff:  movzbl 0x1(%ecx),%edx
0x0ffabd03:  add    %ecx,%edx
0x0ffabd05:  cmp    %edx,%ebx
0x0ffabd07:  jbe    0xffabd0f

----------------
IN: 
0x0ffabd09:  mov    %ecx,%eax
0x0ffabd0b:  jmp    0xffabd0f

----------------
IN: 
0x0ffabd0f:  pop    %ebx
0x0ffabd10:  ret    

----------------
IN: 
0x0ffb18ef:  mov    %eax,%edx
0x0ffb18f1:  test   %eax,%eax
0x0ffb18f3:  je     0xffb18fe

----------------
IN: 
0x0ffb18f5:  cmpb   $0x0,(%edx)
0x0ffb18f8:  jne    0xffb18e6

----------------
IN: 
0x0ffb18e6:  lea    0xd(%esp),%eax
0x0ffb18ea:  call   0xffabcb8

----------------
IN: 
0x0ffabcca:  lea    0x4(%edx),%ecx
0x0ffabccd:  xor    %eax,%eax
0x0ffabccf:  cmp    %ecx,%ebx
0x0ffabcd1:  jb     0xffabd0f

----------------
IN: 
0x0ffabcd3:  movzbl 0x1(%edx),%eax
0x0ffabcd7:  lea    0x2(%edx,%eax,1),%ecx
0x0ffabcdb:  cmp    %ebx,%ecx
0x0ffabcdd:  jae    0xffabd0d

----------------
IN: 
0x0ffabcdf:  cmpb   $0x0,-0x1(%ecx)
0x0ffabce3:  je     0xffabce8

----------------
IN: 
0x0ffabce5:  inc    %ecx
0x0ffabce6:  jmp    0xffabcdb

----------------
IN: 
0x0ffabcdb:  cmp    %ebx,%ecx
0x0ffabcdd:  jae    0xffabd0d

----------------
IN: 
0x0ffabce8:  cmpb   $0x0,-0x2(%ecx)
0x0ffabcec:  jne    0xffabce5

----------------
IN: 
0x0ffabcee:  jmp    0xffabcf6

----------------
IN: 
0x0ffabd0d:  xor    %eax,%eax
0x0ffabd0f:  pop    %ebx
0x0ffabd10:  ret    

----------------
IN: 
0x0ffb18fe:  mov    $0x1,%esi
0x0ffb1903:  mov    0x23(%esp),%ax
0x0ffb1908:  mov    %ax,0xa(%esp)
0x0ffb190d:  test   %si,%si
0x0ffb1910:  je     0xffb197a

----------------
IN: 
0x0ffb1912:  mov    $0xf1103,%eax
0x0ffb1917:  call   0xe9960

----------------
IN: 
0x0ffb191c:  mov    %eax,%ebx
0x0ffb191e:  mov    $0xf51d0,%eax
0x0ffb1923:  call   0xe9960

----------------
IN: 
0x0ffb1928:  add    %eax,%ebx
0x0ffb192a:  mov    $0xf110b,%eax
0x0ffb192f:  call   0xe9960

----------------
IN: 
0x0ffb1934:  lea    0x1c(%ebx,%eax,1),%eax
0x0ffb1938:  movzwl %ax,%ecx
0x0ffb193b:  mov    0xa(%esp),%dx
0x0ffb1940:  not    %edx
0x0ffb1942:  movzwl %dx,%edx
0x0ffb1945:  cmp    %edx,%ecx
0x0ffb1947:  jle    0xffb195c

----------------
IN: 
0x0ffb195c:  mov    0xa(%esp),%di
0x0ffb1961:  lea    (%edi,%eax,1),%edx
0x0ffb1964:  mov    %dx,0x23(%esp)
0x0ffb1969:  cmp    %ax,0x15(%esp)
0x0ffb196e:  jae    0xffb1975

----------------
IN: 
0x0ffb1975:  incw   0x29(%esp)
0x0ffb197a:  movzwl 0x23(%esp),%eax
0x0ffb197f:  cmp    $0x258,%ax
0x0ffb1983:  jbe    0xffb198c

----------------
IN: 
0x0ffb198c:  call   0xffae0d4

----------------
IN: 
0x0ffb1991:  mov    %eax,%ebx
0x0ffb1993:  test   %eax,%eax
0x0ffb1995:  jne    0xffb19b6

----------------
IN: 
0x0ffb19b6:  mov    %eax,0x25(%esp)
0x0ffb19ba:  test   %si,%si
0x0ffb19bd:  je     0xffb1a92

----------------
IN: 
0x0ffb19c3:  lea    0x18(%eax),%eax
0x0ffb19c6:  mov    %eax,(%esp)
0x0ffb19c9:  movl   $0x1800,(%ebx)
0x0ffb19cf:  mov    $0xf1103,%eax
0x0ffb19d4:  call   0xe9960

----------------
IN: 
0x0ffb19d9:  lea    0x1(%eax),%ecx
0x0ffb19dc:  cmp    $0x1,%ecx
0x0ffb19df:  jle    0xffb19f7

----------------
IN: 
0x0ffb19e1:  mov    $0xf1103,%esi
0x0ffb19e6:  mov    (%esp),%edi
0x0ffb19e9:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffb19e9:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffb19eb:  mov    %edi,(%esp)
0x0ffb19ee:  mov    $0x1,%al
0x0ffb19f0:  mov    $0x1,%ebp
0x0ffb19f5:  jmp    0xffb19fb

----------------
IN: 
0x0ffb19fb:  mov    %al,0x4(%ebx)
0x0ffb19fe:  mov    $0xf51d0,%esi
0x0ffb1a03:  xor    %edi,%edi
0x0ffb1a05:  test   %esi,%esi
0x0ffb1a07:  je     0xffb1a23

----------------
IN: 
0x0ffb1a09:  mov    %esi,%eax
0x0ffb1a0b:  call   0xe9960

----------------
IN: 
0x0ffb1a10:  lea    0x1(%eax),%ecx
0x0ffb1a13:  cmp    $0x1,%ecx
0x0ffb1a16:  jle    0xffb1a23

----------------
IN: 
0x0ffb1a18:  mov    (%esp),%edi
0x0ffb1a1b:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffb1a1b:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffb1a1d:  mov    %edi,(%esp)
0x0ffb1a20:  inc    %ebp
0x0ffb1a21:  mov    %ebp,%edi
0x0ffb1a23:  mov    %edi,%eax
0x0ffb1a25:  mov    %al,0x5(%ebx)
0x0ffb1a28:  movw   $0xe800,0x6(%ebx)
0x0ffb1a2e:  mov    $0xf110b,%eax
0x0ffb1a33:  call   0xe9960

----------------
IN: 
0x0ffb1a38:  lea    0x1(%eax),%ecx
0x0ffb1a3b:  xor    %eax,%eax
0x0ffb1a3d:  cmp    $0x1,%ecx
0x0ffb1a40:  jle    0xffb1a52

----------------
IN: 
0x0ffb1a42:  mov    $0xf110b,%esi
0x0ffb1a47:  mov    (%esp),%edi
0x0ffb1a4a:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffb1a4a:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffb1a4c:  mov    %edi,(%esp)
0x0ffb1a4f:  inc    %ebp
0x0ffb1a50:  mov    %ebp,%eax
0x0ffb1a52:  mov    %al,0x8(%ebx)
0x0ffb1a55:  movb   $0x0,0x9(%ebx)
0x0ffb1a59:  lea    0xa(%ebx),%eax
0x0ffb1a5c:  mov    $0x8,%ecx
0x0ffb1a61:  xor    %edx,%edx
0x0ffb1a63:  call   0xeab7b

----------------
IN: 
0x0ffb1a68:  movb   $0x8,0xa(%ebx)
0x0ffb1a6c:  movl   $0x400,0x12(%ebx)
0x0ffb1a73:  movw   $0xffff,0x16(%ebx)
0x0ffb1a79:  mov    (%esp),%eax
0x0ffb1a7c:  movb   $0x0,(%eax)
0x0ffb1a7f:  test   %ebp,%ebp
0x0ffb1a81:  je     0xffb1a88

----------------
IN: 
0x0ffb1a83:  mov    %eax,%ebx
0x0ffb1a85:  inc    %ebx
0x0ffb1a86:  jmp    0xffb1a92

----------------
IN: 
0x0ffb1a92:  movzwl 0xa(%esp),%ecx
0x0ffb1a97:  mov    %ebx,%edi
0x0ffb1a99:  mov    0x4(%esp),%esi
0x0ffb1a9d:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffb1a9d:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffb1a9f:  mov    0x4(%esp),%eax
0x0ffb1aa3:  call   0xffadb56

----------------
IN: 
0x0ffb1aa8:  mov    $0x10,%edx
0x0ffb1aad:  lea    0xd(%esp),%eax
0x0ffb1ab1:  call   0xeaaa5

----------------
IN: 
0x0ffb1ab6:  sub    %al,0x11(%esp)
0x0ffb1aba:  movzbl 0x12(%esp),%edx
0x0ffb1abf:  sub    $0x10,%edx
0x0ffb1ac2:  lea    0x1d(%esp),%eax
0x0ffb1ac6:  call   0xeaaa5

----------------
IN: 
0x0ffb1acb:  sub    %al,0x22(%esp)
0x0ffb1acf:  lea    0xd(%esp),%eax
0x0ffb1ad3:  call   0xffb17b6

----------------
IN: 
0x0ffb17b6:  cmpl   $0x0,0xffbff1c
0x0ffb17bd:  jne    0xffb1848

----------------
IN: 
0x0ffb17c3:  push   %edi
0x0ffb17c4:  push   %esi
0x0ffb17c5:  push   %ebx
0x0ffb17c6:  mov    %eax,%esi
0x0ffb17c8:  cmpl   $0x5f4d535f,(%eax)
0x0ffb17ce:  jne    0xffb1844

----------------
IN: 
0x0ffb17d0:  mov    $0x10,%edx
0x0ffb17d5:  call   0xeaaa5

----------------
IN: 
0x0ffb17da:  test   %al,%al
0x0ffb17dc:  jne    0xffb1844

----------------
IN: 
0x0ffb17de:  lea    0x10(%esi),%edi
0x0ffb17e1:  mov    $0x5,%ecx
0x0ffb17e6:  mov    $0xf10a1,%edx
0x0ffb17eb:  mov    %edi,%eax
0x0ffb17ed:  call   0xffab68e

----------------
IN: 
0x0ffb17f2:  test   %eax,%eax
0x0ffb17f4:  jne    0xffb1844

----------------
IN: 
0x0ffb17f6:  movzbl 0x5(%esi),%ebx
0x0ffb17fa:  lea    -0x10(%ebx),%edx
0x0ffb17fd:  mov    %edi,%eax
0x0ffb17ff:  call   0xeaaa5

----------------
IN: 
0x0ffb1804:  test   %al,%al
0x0ffb1806:  jne    0xffb1844

----------------
IN: 
0x0ffb1808:  mov    %ebx,%eax
0x0ffb180a:  call   0xffae0d4

----------------
IN: 
0x0ffb180f:  mov    %eax,%ebx
0x0ffb1811:  test   %eax,%eax
0x0ffb1813:  jne    0xffb1827

----------------
IN: 
0x0ffb1827:  push   %eax
0x0ffb1828:  push   %esi
0x0ffb1829:  push   $0xf10a7
0x0ffb182e:  call   0xec4d8

----------------
IN: 
0x0ffb1833:  movzbl 0x5(%esi),%ecx
0x0ffb1837:  mov    %ebx,%edi
0x0ffb1839:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffb1839:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffb183b:  mov    %ebx,0xffbff1c
0x0ffb1841:  add    $0xc,%esp
0x0ffb1844:  pop    %ebx
0x0ffb1845:  pop    %esi
0x0ffb1846:  pop    %edi
0x0ffb1847:  ret    

----------------
IN: 
0x0ffb1ad8:  mov    $0x1,%eax
0x0ffb1add:  add    $0x2c,%esp
0x0ffb1ae0:  pop    %ebx
0x0ffb1ae1:  pop    %esi
0x0ffb1ae2:  pop    %edi
0x0ffb1ae3:  pop    %ebp
0x0ffb1ae4:  ret    

----------------
IN: 
0x0ffb604e:  mov    %eax,0x10(%esp)
0x0ffb6052:  test   %eax,%eax
0x0ffb6054:  jne    0xffb6b66

----------------
IN: 
0x0ffb6b66:  lea    0x60(%esp),%edx
0x0ffb6b6a:  mov    $0xf1733,%eax
0x0ffb6b6f:  call   0xffae1dd

----------------
IN: 
0x0ffae236:  mov    %edi,0x0(%ebp)
0x0ffae239:  movb   $0x0,(%ebx,%edi,1)
0x0ffae23d:  jmp    0xffae241

----------------
IN: 
0x0ffb6b74:  mov    %eax,0x4(%esp)
0x0ffb6b78:  test   %eax,%eax
0x0ffb6b7a:  je     0xffb6fb7

----------------
IN: 
0x0ffb6b80:  mov    0x60(%esp),%eax
0x0ffb6b84:  test   $0x7f,%al
0x0ffb6b86:  je     0xffb6b9c

----------------
IN: 
0x0ffb6b9c:  shr    $0x7,%eax
0x0ffb6b9f:  lea    0x4(,%eax,8),%eax
0x0ffb6ba6:  call   0xffae09f

----------------
IN: 
0x0ffb6bab:  mov    %eax,(%esp)
0x0ffb6bae:  test   %eax,%eax
0x0ffb6bb0:  jne    0xffb6bc6

----------------
IN: 
0x0ffb6bc6:  mov    (%esp),%eax
0x0ffb6bc9:  movl   $0x0,(%eax)
0x0ffb6bcf:  mov    0x4(%esp),%eax
0x0ffb6bd3:  lea    0x4(%eax),%ebp
0x0ffb6bd6:  mov    $0xfffffffc,%eax
0x0ffb6bdb:  sub    0x4(%esp),%eax
0x0ffb6bdf:  mov    %eax,0x18(%esp)
0x0ffb6be3:  mov    0x18(%esp),%eax
0x0ffb6be7:  add    %ebp,%eax
0x0ffb6be9:  cmp    %eax,0x60(%esp)
0x0ffb6bed:  jle    0xffb6f9b

----------------
IN: 
0x0ffb6bf3:  mov    -0x4(%ebp),%eax
0x0ffb6bf6:  cmp    $0x3,%eax
0x0ffb6bf9:  je     0xffb6d98

----------------
IN: 
0x0ffb6bff:  ja     0xffb6c14

----------------
IN: 
0x0ffb6c01:  cmp    $0x1,%eax
0x0ffb6c04:  je     0xffb6c22

----------------
IN: 
0x0ffb6c22:  mov    (%esp),%eax
0x0ffb6c25:  mov    (%eax),%ebx
0x0ffb6c27:  mov    0x38(%ebp),%edi
0x0ffb6c2a:  lea    -0x1(%edi),%eax
0x0ffb6c2d:  test   %edi,%eax
0x0ffb6c2f:  jne    0xffb6cd9

----------------
IN: 
0x0ffb6c35:  mov    0x3c(%ebp),%al
0x0ffb6c38:  cmp    $0x1,%al
0x0ffb6c3a:  je     0xffb6c4a

----------------
IN: 
0x0ffb6c3c:  mov    $0xffbfe80,%esi
0x0ffb6c41:  cmp    $0x2,%al
0x0ffb6c43:  je     0xffb6c4f

----------------
IN: 
0x0ffb6c4f:  cmpb   $0x0,0x37(%ebp)
0x0ffb6c53:  jne    0xffb6cd9

----------------
IN: 
0x0ffb6c59:  mov    %ebp,%eax
0x0ffb6c5b:  call   0xffad7ee

----------------
IN: 
0x0ffb6c60:  mov    (%esp),%ecx
0x0ffb6c63:  lea    (%ecx,%ebx,8),%ebx
0x0ffb6c66:  mov    %eax,0x4(%ebx)
0x0ffb6c69:  test   %eax,%eax
0x0ffb6c6b:  je     0xffb6f93

----------------
IN: 
0x0ffb6c71:  mov    0x84(%eax),%edx
0x0ffb6c77:  test   %edx,%edx
0x0ffb6c79:  je     0xffb6f93

----------------
IN: 
0x0ffb6c7f:  mov    %edi,%ecx
0x0ffb6c81:  cmp    $0x10,%edi
0x0ffb6c84:  jae    0xffb6c8b

----------------
IN: 
0x0ffb6c8b:  mov    %esi,%eax
0x0ffb6c8d:  call   0xffadfb2

----------------
IN: 
0x0ffb6c92:  mov    %eax,%esi
0x0ffb6c94:  test   %eax,%eax
0x0ffb6c96:  jne    0xffb6ca7

----------------
IN: 
0x0ffb6ca7:  mov    0x4(%ebx),%eax
0x0ffb6caa:  mov    0x84(%eax),%ecx
0x0ffb6cb0:  mov    %esi,%edx
0x0ffb6cb2:  call   *0x88(%eax)

----------------
IN: 
0x0ffb6cb8:  mov    0x4(%ebx),%edx
0x0ffb6cbb:  cmp    %eax,0x84(%edx)
0x0ffb6cc1:  je     0xffb6ccc

----------------
IN: 
0x0ffb6ccc:  mov    %esi,0x8(%ebx)
0x0ffb6ccf:  mov    (%esp),%eax
0x0ffb6cd2:  incl   (%eax)
0x0ffb6cd4:  jmp    0xffb6f93

----------------
IN: 
0x0ffb6f93:  sub    $0xffffff80,%ebp
0x0ffb6f96:  jmp    0xffb6be3

----------------
IN: 
0x0ffb6be3:  mov    0x18(%esp),%eax
0x0ffb6be7:  add    %ebp,%eax
0x0ffb6be9:  cmp    %eax,0x60(%esp)
0x0ffb6bed:  jle    0xffb6f9b

----------------
IN: 
0x0ffb6c4a:  mov    $0xffbfe84,%esi
0x0ffb6c4f:  cmpb   $0x0,0x37(%ebp)
0x0ffb6c53:  jne    0xffb6cd9

----------------
IN: 
0x0ffb6d98:  mov    0x38(%ebp),%ebx
0x0ffb6d9b:  mov    0x3c(%ebp),%edi
0x0ffb6d9e:  mov    0x40(%ebp),%esi
0x0ffb6da1:  mov    (%esp),%edx
0x0ffb6da4:  mov    %ebp,%eax
0x0ffb6da6:  call   0xffac98d

----------------
IN: 
0x0ffac98d:  cmpb   $0x0,0x37(%eax)
0x0ffac991:  jne    0xffac9c2

----------------
IN: 
0x0ffac993:  push   %ebp
0x0ffac994:  push   %edi
0x0ffac995:  push   %esi
0x0ffac996:  push   %ebx
0x0ffac997:  mov    %eax,%edi
0x0ffac999:  mov    %edx,%esi
0x0ffac99b:  mov    (%edx),%ebp
0x0ffac99d:  xor    %ebx,%ebx
0x0ffac99f:  cmp    %ebp,%ebx
0x0ffac9a1:  jge    0xffac9be

----------------
IN: 
0x0ffac9a3:  mov    0x4(%esi,%ebx,8),%eax
0x0ffac9a7:  add    $0x4,%eax
0x0ffac9aa:  mov    %edi,%edx
0x0ffac9ac:  call   0xe9971

----------------
IN: 
0x000e9988:  inc    %ecx
0x000e9989:  test   %bl,%bl
0x000e998b:  jne    0xe9974

----------------
IN: 
0x000e9974:  mov    (%eax,%ecx,1),%bl
0x000e9977:  cmp    (%edx,%ecx,1),%bl
0x000e997a:  je     0xe9988

----------------
IN: 
0x0ffac9b1:  test   %eax,%eax
0x0ffac9b3:  jne    0xffac9bb

----------------
IN: 
0x0ffac9bb:  inc    %ebx
0x0ffac9bc:  jmp    0xffac99f

----------------
IN: 
0x0ffac99f:  cmp    %ebp,%ebx
0x0ffac9a1:  jge    0xffac9be

----------------
IN: 
0x000e998d:  xor    %eax,%eax
0x000e998f:  pop    %ebx
0x000e9990:  ret    

----------------
IN: 
0x0ffac9b5:  lea    0x4(%esi,%ebx,8),%eax
0x0ffac9b9:  jmp    0xffac9c5

----------------
IN: 
0x0ffac9c5:  pop    %ebx
0x0ffac9c6:  pop    %esi
0x0ffac9c7:  pop    %edi
0x0ffac9c8:  pop    %ebp
0x0ffac9c9:  ret    

----------------
IN: 
0x0ffb6dab:  test   %eax,%eax
0x0ffb6dad:  je     0xffb6dcc

----------------
IN: 
0x0ffb6daf:  mov    0x4(%eax),%edx
0x0ffb6db2:  test   %edx,%edx
0x0ffb6db4:  je     0xffb6dcc

----------------
IN: 
0x0ffb6db6:  mov    (%eax),%eax
0x0ffb6db8:  mov    0x84(%eax),%eax
0x0ffb6dbe:  cmp    %eax,%ebx
0x0ffb6dc0:  jae    0xffb6dcc

----------------
IN: 
0x0ffb6dc2:  mov    %edi,%ecx
0x0ffb6dc4:  add    %esi,%ecx
0x0ffb6dc6:  jb     0xffb6dcc

----------------
IN: 
0x0ffb6dc8:  cmp    %ecx,%eax
0x0ffb6dca:  jae    0xffb6ddb

----------------
IN: 
0x0ffb6ddb:  add    %edx,%ebx
0x0ffb6ddd:  lea    (%edx,%edi,1),%eax
0x0ffb6de0:  mov    %esi,%edx
0x0ffb6de2:  call   0xeaaa5

----------------
IN: 
0x0ffb6de7:  sub    %al,(%ebx)
0x0ffb6de9:  jmp    0xffb6f93

----------------
IN: 
0x0ffb6c06:  cmp    $0x2,%eax
0x0ffb6c09:  je     0xffb6ce8

----------------
IN: 
0x0ffb6ce8:  mov    0x70(%ebp),%edi
0x0ffb6ceb:  movl   $0x0,0x84(%esp)
0x0ffb6cf6:  movl   $0x0,0x88(%esp)
0x0ffb6d01:  mov    (%esp),%edx
0x0ffb6d04:  mov    %ebp,%eax
0x0ffb6d06:  call   0xffac98d

----------------
IN: 
0x0ffb6d0b:  mov    %eax,%esi
0x0ffb6d0d:  lea    0x38(%ebp),%eax
0x0ffb6d10:  mov    (%esp),%edx
0x0ffb6d13:  call   0xffac98d

----------------
IN: 
0x0ffb6d18:  test   %eax,%eax
0x0ffb6d1a:  je     0xffb6d54

----------------
IN: 
0x0ffb6d1c:  test   %esi,%esi
0x0ffb6d1e:  je     0xffb6d54

----------------
IN: 
0x0ffb6d20:  mov    0x4(%esi),%ecx
0x0ffb6d23:  test   %ecx,%ecx
0x0ffb6d25:  je     0xffb6d54

----------------
IN: 
0x0ffb6d27:  mov    0x4(%eax),%ebx
0x0ffb6d2a:  test   %ebx,%ebx
0x0ffb6d2c:  je     0xffb6d54

----------------
IN: 
0x0ffb6d2e:  movzbl 0x74(%ebp),%eax
0x0ffb6d32:  mov    %eax,%edx
0x0ffb6d34:  mov    %eax,0x8(%esp)
0x0ffb6d38:  add    %edi,%eax
0x0ffb6d3a:  jb     0xffb6d54

----------------
IN: 
0x0ffb6d3c:  mov    (%esi),%esi
0x0ffb6d3e:  cmp    0x84(%esi),%eax
0x0ffb6d44:  ja     0xffb6d54

----------------
IN: 
0x0ffb6d46:  lea    -0x1(%edx),%eax
0x0ffb6d49:  cmp    $0x7,%al
0x0ffb6d4b:  ja     0xffb6d54

----------------
IN: 
0x0ffb6d4d:  lea    -0x1(%edx),%eax
0x0ffb6d50:  test   %edx,%eax
0x0ffb6d52:  je     0xffb6d63

----------------
IN: 
0x0ffb6d63:  lea    (%ecx,%edi,1),%eax
0x0ffb6d66:  lea    0x84(%esp),%edx
0x0ffb6d6d:  mov    %edx,%edi
0x0ffb6d6f:  mov    %eax,%esi
0x0ffb6d71:  mov    0x8(%esp),%ecx
0x0ffb6d75:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffb6d75:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffb6d77:  mov    %ebx,%ecx
0x0ffb6d79:  xor    %ebx,%ebx
0x0ffb6d7b:  add    %ecx,0x84(%esp)
0x0ffb6d82:  adc    %ebx,0x88(%esp)
0x0ffb6d89:  mov    %eax,%edi
0x0ffb6d8b:  mov    %edx,%esi
0x0ffb6d8d:  mov    0x8(%esp),%ecx
0x0ffb6d91:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffb6d91:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffb6d93:  jmp    0xffb6f93

----------------
IN: 
0x0ffb6c0f:  jmp    0xffb6f93

----------------
IN: 
0x0ffb6f9b:  mov    (%esp),%eax
0x0ffb6f9e:  call   0xffadb56

----------------
IN: 
0x0ffb6fa3:  mov    0x4(%esp),%eax
0x0ffb6fa7:  call   0xffadb56

----------------
IN: 
0x0ffb6fac:  jmp    0xffb6fbf

----------------
IN: 
0x0ffb6fbf:  mov    $0xf5d00,%edi
0x0ffb6fc4:  mov    $0xf550f,%ebx
0x0ffb6fc9:  and    $0xfffffff0,%ebx
0x0ffb6fcc:  mov    %edi,%esi
0x0ffb6fce:  and    $0xfffffff0,%esi
0x0ffb6fd1:  cmp    %esi,%ebx
0x0ffb6fd3:  ja     0xffb6fed

----------------
IN: 
0x0ffb6fd5:  mov    %ebx,0x8(%esp)
0x0ffb6fd9:  mov    %edi,%edx
0x0ffb6fdb:  sub    %ebx,%edx
0x0ffb6fdd:  mov    %ebx,%eax
0x0ffb6fdf:  call   0xffacf9e

----------------
IN: 
0x0ffacf9e:  push   %edi
0x0ffacf9f:  push   %esi
0x0ffacfa0:  push   %ebx
0x0ffacfa1:  mov    %eax,%ebx
0x0ffacfa3:  mov    %edx,%edi
0x0ffacfa5:  mov    (%eax),%eax
0x0ffacfa7:  xor    $0x20445352,%eax
0x0ffacfac:  mov    0x4(%ebx),%edx
0x0ffacfaf:  xor    $0x20525450,%edx
0x0ffacfb5:  or     %edx,%eax
0x0ffacfb7:  jne    0xffacffd

----------------
IN: 
0x0ffacffd:  or     $0xffffffff,%eax
0x0ffad000:  pop    %ebx
0x0ffad001:  pop    %esi
0x0ffad002:  pop    %edi
0x0ffad003:  ret    

----------------
IN: 
0x0ffb6fe4:  test   %eax,%eax
0x0ffb6fe6:  jns    0xffb6ff5

----------------
IN: 
0x0ffb6fe8:  add    $0x10,%ebx
0x0ffb6feb:  jmp    0xffb6fd1

----------------
IN: 
0x0ffb6fd1:  cmp    %esi,%ebx
0x0ffb6fd3:  ja     0xffb6fed

----------------
IN: 
0x0ffacfb9:  cmp    $0x13,%edi
0x0ffacfbc:  jbe    0xffacffd

----------------
IN: 
0x0ffacfbe:  mov    $0x14,%edx
0x0ffacfc3:  mov    %ebx,%eax
0x0ffacfc5:  call   0xeaaa5

----------------
IN: 
0x0ffacfca:  mov    %al,%dl
0x0ffacfcc:  or     $0xffffffff,%eax
0x0ffacfcf:  test   %dl,%dl
0x0ffacfd1:  jne    0xffad000

----------------
IN: 
0x0ffacfd3:  cmpb   $0x1,0xf(%ebx)
0x0ffacfd7:  jbe    0xffacff4

----------------
IN: 
0x0ffacff4:  mov    $0x14,%esi
0x0ffacff9:  mov    %esi,%eax
0x0ffacffb:  jmp    0xffad000

----------------
IN: 
0x0ffad000:  pop    %ebx
0x0ffad001:  pop    %esi
0x0ffad002:  pop    %edi
0x0ffad003:  ret    

----------------
IN: 
0x0ffb6ff5:  mov    0x8(%esp),%eax
0x0ffb6ff9:  mov    %eax,0xf53f8
0x0ffb6ffe:  test   %eax,%eax
0x0ffb7000:  je     0xffb7155

----------------
IN: 
0x0ffb7006:  call   0xffb2aeb

----------------
IN: 
0x0ffb2aeb:  push   %esi
0x0ffb2aec:  push   %ebx
0x0ffb2aed:  sub    $0x2c,%esp
0x0ffb2af0:  mov    $0x50434146,%eax
0x0ffb2af5:  call   0xedace

----------------
IN: 
0x000edace:  push   %esi
0x000edacf:  push   %ebx
0x000edad0:  mov    0xf53f8,%ebx
0x000edad6:  test   %ebx,%ebx
0x000edad8:  je     0xedb73

----------------
IN: 
0x000edade:  cmpl   $0x20525450,0x4(%ebx)
0x000edae5:  jne    0xedb71

----------------
IN: 
0x000edaeb:  cmpl   $0x20445352,(%ebx)
0x000edaf1:  jne    0xedb71

----------------
IN: 
0x000edaf3:  mov    %eax,%edx
0x000edaf5:  mov    0x10(%ebx),%ecx
0x000edaf8:  mov    0x18(%ebx),%eax
0x000edafb:  cmpl   $0x0,0x1c(%ebx)
0x000edaff:  jne    0xedb37

----------------
IN: 
0x000edb01:  test   %eax,%eax
0x000edb03:  je     0xedb37

----------------
IN: 
0x000edb37:  xor    %ebx,%ebx
0x000edb39:  test   %ecx,%ecx
0x000edb3b:  je     0xedb73

----------------
IN: 
0x000edb3d:  cmpl   $0x54445352,(%ecx)
0x000edb43:  jne    0xedb73

----------------
IN: 
0x000edb45:  mov    0x4(%ecx),%esi
0x000edb48:  add    %ecx,%esi
0x000edb4a:  lea    0x24(%ecx),%eax
0x000edb4d:  jmp    0xedb52

----------------
IN: 
0x000edb52:  cmp    %eax,%esi
0x000edb54:  jbe    0xedb71

----------------
IN: 
0x000edb56:  mov    (%eax),%ebx
0x000edb58:  test   %ebx,%ebx
0x000edb5a:  je     0xedb4f

----------------
IN: 
0x000edb5c:  cmp    %edx,(%ebx)
0x000edb5e:  jne    0xedb4f

----------------
IN: 
0x000edb60:  push   %ebx
0x000edb61:  push   %edx
0x000edb62:  push   $0xf078c
0x000edb67:  call   0xec4d8

----------------
IN: 
0x000edb6c:  add    $0xc,%esp
0x000edb6f:  jmp    0xedb73

----------------
IN: 
0x000edb73:  mov    %ebx,%eax
0x000edb75:  pop    %ebx
0x000edb76:  pop    %esi
0x000edb77:  ret    

----------------
IN: 
0x0ffb2afa:  test   %eax,%eax
0x0ffb2afc:  je     0xffb2b34

----------------
IN: 
0x0ffb2afe:  mov    0x28(%eax),%ebx
0x0ffb2b01:  test   %ebx,%ebx
0x0ffb2b03:  je     0xffb2b34

----------------
IN: 
0x0ffb2b05:  mov    0x4(%ebx),%esi
0x0ffb2b08:  push   %esi
0x0ffb2b09:  push   %ebx
0x0ffb2b0a:  push   $0xf164f
0x0ffb2b0f:  call   0xec4d8

----------------
IN: 
0x0ffb2b14:  mov    $0x2c,%ecx
0x0ffb2b19:  xor    %edx,%edx
0x0ffb2b1b:  lea    0xc(%esp),%eax
0x0ffb2b1f:  call   0xeab7b

----------------
IN: 
0x0ffb2b24:  push   %esi
0x0ffb2b25:  mov    $0x24,%ecx
0x0ffb2b2a:  mov    %ebx,%edx
0x0ffb2b2c:  call   0xffb2a8a

----------------
IN: 
0x0ffb2a8a:  push   %ebp
0x0ffb2a8b:  push   %edi
0x0ffb2a8c:  push   %esi
0x0ffb2a8d:  push   %ebx
0x0ffb2a8e:  mov    %eax,%esi
0x0ffb2a90:  mov    %edx,%ebp
0x0ffb2a92:  mov    %ecx,%ebx
0x0ffb2a94:  mov    0x14(%esp),%edi
0x0ffb2a98:  lea    0x0(%ebp,%ebx,1),%edx
0x0ffb2a9c:  mov    %esi,%eax
0x0ffb2a9e:  call   0xffb27be

----------------
IN: 
0x0ffb27be:  push   %ebp
0x0ffb27bf:  push   %edi
0x0ffb27c0:  push   %esi
0x0ffb27c1:  push   %ebx
0x0ffb27c2:  sub    $0x10,%esp
0x0ffb27c5:  mov    %eax,%edi
0x0ffb27c7:  mov    0x28(%eax),%eax
0x0ffb27ca:  cmp    $0x10,%eax
0x0ffb27cd:  jne    0xffb27f1

----------------
IN: 
0x0ffb27f1:  mov    %edx,%esi
0x0ffb27f3:  inc    %eax
0x0ffb27f4:  mov    %eax,0x28(%edi)
0x0ffb27f7:  movzbl (%edx),%ecx
0x0ffb27fa:  cmp    $0x14,%cl
0x0ffb27fd:  ja     0xffb2806

----------------
IN: 
0x0ffb27ff:  jmp    *0xffbeeb4(,%ecx,4)

----------------
IN: 
0x0ffb287a:  inc    %esi
0x0ffb287b:  lea    0x8(%esp),%edx
0x0ffb287f:  mov    %esi,%eax
0x0ffb2881:  call   0xffac0a4

----------------
IN: 
0x0ffac0a4:  push   %esi
0x0ffac0a5:  push   %ebx
0x0ffac0a6:  mov    %eax,%ecx
0x0ffac0a8:  mov    %edx,%eax
0x0ffac0aa:  movl   $0x0,(%edx)
0x0ffac0b0:  movzbl (%ecx),%edx
0x0ffac0b3:  mov    %dl,%bl
0x0ffac0b5:  shr    $0x6,%bl
0x0ffac0b8:  cmp    $0x2,%bl
0x0ffac0bb:  je     0xffac0e2

----------------
IN: 
0x0ffac0bd:  cmp    $0x3,%bl
0x0ffac0c0:  je     0xffac0d2

----------------
IN: 
0x0ffac0c2:  dec    %bl
0x0ffac0c4:  mov    $0x1,%ebx
0x0ffac0c9:  jne    0xffac103

----------------
IN: 
0x0ffac0cb:  mov    $0x2,%ebx
0x0ffac0d0:  jmp    0xffac0f1

----------------
IN: 
0x0ffac0f1:  movzbl 0x1(%ecx),%esi
0x0ffac0f5:  shl    $0x4,%esi
0x0ffac0f8:  or     (%eax),%esi
0x0ffac0fa:  mov    %esi,(%eax)
0x0ffac0fc:  mov    (%ecx),%dl
0x0ffac0fe:  and    $0xf,%edx
0x0ffac101:  or     %esi,%edx
0x0ffac103:  mov    %edx,(%eax)
0x0ffac105:  mov    %ebx,%eax
0x0ffac107:  pop    %ebx
0x0ffac108:  pop    %esi
0x0ffac109:  ret    

----------------
IN: 
0x0ffb2886:  mov    %eax,%ebx
0x0ffb2888:  lea    (%esi,%eax,1),%edx
0x0ffb288b:  mov    %edi,%eax
0x0ffb288d:  call   0xffacdc0

----------------
IN: 
0x0ffacdc0:  push   %ebp
0x0ffacdc1:  push   %edi
0x0ffacdc2:  push   %esi
0x0ffacdc3:  push   %ebx
0x0ffacdc4:  sub    $0x8,%esp
0x0ffacdc7:  mov    %eax,(%esp)
0x0ffacdca:  mov    %edx,%esi
0x0ffacdcc:  mov    %eax,0x4(%esp)
0x0ffacdd0:  lea    0x1(%eax),%ebp
0x0ffacdd3:  mov    $0x1,%edi
0x0ffacdd8:  xor    %edx,%edx
0x0ffacdda:  lea    -0x1(%ebp),%ecx
0x0ffacddd:  lea    -0x1(%edi),%ebx
0x0ffacde0:  mov    -0x1(%esi,%edi,1),%al
0x0ffacde4:  cmp    $0x5a,%al
0x0ffacde6:  ja     0xfface01

----------------
IN: 
0x0fface01:  cmp    $0x5e,%al
0x0fface03:  je     0xffacea0

----------------
IN: 
0x0fface09:  cmp    $0x5f,%al
0x0fface0b:  je     0xffacea7

----------------
IN: 
0x0fface11:  cmp    $0x5c,%al
0x0fface13:  jne    0xffacebe

----------------
IN: 
0x0fface19:  mov    $0x5c,%al
0x0fface1b:  mov    %al,-0x1(%ebp)
0x0fface1e:  inc    %edi
0x0fface1f:  inc    %ebp
0x0fface20:  mov    $0x1,%dl
0x0fface22:  jmp    0xffacdda

----------------
IN: 
0x0ffacdda:  lea    -0x1(%ebp),%ecx
0x0ffacddd:  lea    -0x1(%edi),%ebx
0x0ffacde0:  mov    -0x1(%esi,%edi,1),%al
0x0ffacde4:  cmp    $0x5a,%al
0x0ffacde6:  ja     0xfface01

----------------
IN: 
0x0ffacde8:  cmp    $0x40,%al
0x0ffacdea:  ja     0xffacea7

----------------
IN: 
0x0ffacdf0:  cmp    $0x2e,%al
0x0ffacdf2:  je     0xfface3a

----------------
IN: 
0x0ffacdf4:  cmp    $0x2f,%al
0x0ffacdf6:  je     0xfface68

----------------
IN: 
0x0ffacdf8:  test   %al,%al
0x0ffacdfa:  je     0xfface24

----------------
IN: 
0x0fface24:  test   %dl,%dl
0x0fface26:  je     0xfface2c

----------------
IN: 
0x0fface28:  mov    %ecx,0x4(%esp)
0x0fface2c:  mov    %edi,%ebx
0x0fface2e:  mov    0x4(%esp),%eax
0x0fface32:  movb   $0x0,(%eax)
0x0fface35:  jmp    0xffacec8

----------------
IN: 
0x0ffacec8:  mov    %ebx,%eax
0x0ffaceca:  add    $0x8,%esp
0x0ffacecd:  pop    %ebx
0x0ffacece:  pop    %esi
0x0ffacecf:  pop    %edi
0x0ffaced0:  pop    %ebp
0x0ffaced1:  ret    

----------------
IN: 
0x0ffb2892:  lea    (%ebx,%eax,1),%ecx
0x0ffb2895:  pushl  0x8(%esp)
0x0ffb2899:  mov    %esi,%edx
0x0ffb289b:  mov    %edi,%eax
0x0ffb289d:  call   0xffb2a8a

----------------
IN: 
0x0ffb2806:  cmp    $0x5b,%cl
0x0ffb2809:  je     0xffb294a

----------------
IN: 
0x0ffb294a:  movzbl 0x1(%edx),%ecx
0x0ffb294e:  cmp    $0x81,%cl
0x0ffb2951:  je     0xffb29ba

----------------
IN: 
0x0ffb2953:  ja     0xffb2996

----------------
IN: 
0x0ffb2955:  cmp    $0x1,%cl
0x0ffb2958:  je     0xffb29a8

----------------
IN: 
0x0ffb295a:  cmp    $0x80,%cl
0x0ffb295d:  jne    0xffb2a63

----------------
IN: 
0x0ffb2963:  lea    0x2(%edx),%edx
0x0ffb2966:  mov    %edi,%eax
0x0ffb2968:  call   0xffacdc0

----------------
IN: 
0x0ffacea7:  test   %dl,%dl
0x0ffacea9:  je     0xffaceaf

----------------
IN: 
0x0ffaceaf:  lea    0x4(%esp),%edx
0x0ffaceb3:  mov    %esi,%eax
0x0ffaceb5:  call   0xffac9ca

----------------
IN: 
0x0ffac9ca:  mov    %eax,%ecx
0x0ffac9cc:  mov    %edx,%eax
0x0ffac9ce:  mov    (%edx),%edx
0x0ffac9d0:  test   %edx,%edx
0x0ffac9d2:  je     0xffaca1f

----------------
IN: 
0x0ffac9d4:  push   %esi
0x0ffac9d5:  push   %ebx
0x0ffac9d6:  mov    (%ecx),%bl
0x0ffac9d8:  lea    0x1(%edx),%esi
0x0ffac9db:  mov    %esi,(%eax)
0x0ffac9dd:  mov    %bl,(%edx)
0x0ffac9df:  mov    0x1(%ecx),%bl
0x0ffac9e2:  cmp    $0x5f,%bl
0x0ffac9e5:  je     0xffac9f0

----------------
IN: 
0x0ffac9e7:  mov    (%eax),%edx
0x0ffac9e9:  lea    0x1(%edx),%esi
0x0ffac9ec:  mov    %esi,(%eax)
0x0ffac9ee:  mov    %bl,(%edx)
0x0ffac9f0:  mov    0x2(%ecx),%bl
0x0ffac9f3:  cmp    $0x5f,%bl
0x0ffac9f6:  je     0xffaca01

----------------
IN: 
0x0ffac9f8:  mov    (%eax),%edx
0x0ffac9fa:  lea    0x1(%edx),%esi
0x0ffac9fd:  mov    %esi,(%eax)
0x0ffac9ff:  mov    %bl,(%edx)
0x0ffaca01:  mov    0x3(%ecx),%cl
0x0ffaca04:  cmp    $0x5f,%cl
0x0ffaca07:  je     0xffaca12

----------------
IN: 
0x0ffaca12:  mov    (%eax),%eax
0x0ffaca14:  movb   $0x0,(%eax)
0x0ffaca17:  mov    $0x4,%eax
0x0ffaca1c:  pop    %ebx
0x0ffaca1d:  pop    %esi
0x0ffaca1e:  ret    

----------------
IN: 
0x0ffaceba:  add    %eax,%ebx
0x0ffacebc:  jmp    0xffacec8

----------------
IN: 
0x0ffb296d:  lea    0x3(%eax),%ebx
0x0ffb2970:  lea    0x24(%edi),%edx
0x0ffb2973:  lea    (%esi,%ebx,1),%eax
0x0ffb2976:  xor    %ecx,%ecx
0x0ffb2978:  mov    %edx,(%esp)
0x0ffb297b:  call   0xffaced2

----------------
IN: 
0x0ffaced2:  push   %ebx
0x0ffaced3:  mov    %ecx,%ebx
0x0ffaced5:  cmpb   $0xc,(%eax)
0x0ffaced8:  ja     0xffacf16

----------------
IN: 
0x0ffaceda:  movzbl (%eax),%ecx
0x0ffacedd:  jmp    *0xffbee6c(,%ecx,4)

----------------
IN: 
0x0ffacefd:  movzwl 0x1(%eax),%eax
0x0ffacf01:  xor    %edx,%edx
0x0ffacf03:  mov    $0x3,%ecx
0x0ffacf08:  jmp    0xffacf29

----------------
IN: 
0x0ffacf29:  test   %ebx,%ebx
0x0ffacf2b:  je     0xffacf32

----------------
IN: 
0x0ffacf32:  mov    %ecx,%eax
0x0ffacf34:  pop    %ebx
0x0ffacf35:  ret    

----------------
IN: 
0x0ffb2980:  add    %eax,%ebx
0x0ffb2982:  lea    (%esi,%ebx,1),%eax
0x0ffb2985:  xor    %ecx,%ecx
0x0ffb2987:  mov    (%esp),%edx
0x0ffb298a:  call   0xffaced2

----------------
IN: 
0x0ffacee4:  mov    $0x1,%ecx
0x0ffacee9:  mov    $0x1,%eax
0x0ffaceee:  jmp    0xffacf27

----------------
IN: 
0x0ffacf27:  xor    %edx,%edx
0x0ffacf29:  test   %ebx,%ebx
0x0ffacf2b:  je     0xffacf32

----------------
IN: 
0x0ffb298f:  add    %eax,%ebx
0x0ffb2991:  jmp    0xffb2a7d

----------------
IN: 
0x0ffb2a7d:  decl   0x28(%edi)
0x0ffb2a80:  mov    %ebx,%eax
0x0ffb2a82:  add    $0x10,%esp
0x0ffb2a85:  pop    %ebx
0x0ffb2a86:  pop    %esi
0x0ffb2a87:  pop    %edi
0x0ffb2a88:  pop    %ebp
0x0ffb2a89:  ret    

----------------
IN: 
0x0ffb2aa3:  add    %eax,%ebx
0x0ffb2aa5:  cmp    %edi,%ebx
0x0ffb2aa7:  je     0xffb2ae6

----------------
IN: 
0x0ffb2aa9:  jle    0xffb2ac5

----------------
IN: 
0x0ffb2ac5:  cmpl   $0x0,0x24(%esi)
0x0ffb2ac9:  je     0xffb2a98

----------------
IN: 
0x0ffb2a98:  lea    0x0(%ebp,%ebx,1),%edx
0x0ffb2a9c:  mov    %esi,%eax
0x0ffb2a9e:  call   0xffb27be

----------------
IN: 
0x0ffb29ba:  or     $0x5b,%ch
0x0ffb29bd:  lea    0x2(%esi),%edx
0x0ffb29c0:  push   $0x1
0x0ffb29c2:  mov    %edi,%eax
0x0ffb29c4:  call   0xffb277b

----------------
IN: 
0x0ffb277b:  push   %esi
0x0ffb277c:  push   %ebx
0x0ffb277d:  sub    $0xc,%esp
0x0ffb2780:  mov    %eax,%esi
0x0ffb2782:  mov    %edx,%ebx
0x0ffb2784:  push   %ecx
0x0ffb2785:  push   $0xf15f0
0x0ffb278a:  push   $0x8
0x0ffb278c:  lea    0x10(%esp),%eax
0x0ffb2790:  push   %eax
0x0ffb2791:  call   0xffb244c

----------------
IN: 
0x0ffb244c:  push   %ebx
0x0ffb244d:  sub    $0xc,%esp
0x0ffb2450:  mov    0x14(%esp),%ebx
0x0ffb2454:  mov    0x18(%esp),%edx
0x0ffb2458:  xor    %eax,%eax
0x0ffb245a:  test   %edx,%edx
0x0ffb245c:  je     0xffb2492

----------------
IN: 
0x0ffb245e:  movl   $0xffab680,(%esp)
0x0ffb2465:  mov    %ebx,0x4(%esp)
0x0ffb2469:  add    %ebx,%edx
0x0ffb246b:  mov    %edx,0x8(%esp)
0x0ffb246f:  lea    0x20(%esp),%ecx
0x0ffb2473:  mov    0x1c(%esp),%edx
0x0ffb2477:  mov    %esp,%eax
0x0ffb2479:  call   0xebd11

----------------
IN: 
0x0ffab680:  mov    0x4(%eax),%ecx
0x0ffab683:  cmp    0x8(%eax),%ecx
0x0ffab686:  jae    0xffab68d

----------------
IN: 
0x0ffab688:  mov    %dl,(%ecx)
0x0ffab68a:  incl   0x4(%eax)
0x0ffab68d:  ret    

----------------
IN: 
0x0ffb247e:  mov    0x4(%esp),%eax
0x0ffb2482:  mov    0x8(%esp),%edx
0x0ffb2486:  cmp    %eax,%edx
0x0ffb2488:  ja     0xffb248d

----------------
IN: 
0x0ffb248d:  movb   $0x0,(%eax)
0x0ffb2490:  sub    %ebx,%eax
0x0ffb2492:  add    $0xc,%esp
0x0ffb2495:  pop    %ebx
0x0ffb2496:  ret    

----------------
IN: 
0x0ffb2796:  lea    0x10(%esp),%edx
0x0ffb279a:  mov    %ebx,%eax
0x0ffb279c:  call   0xffac0a4

----------------
IN: 
0x0ffac103:  mov    %edx,(%eax)
0x0ffac105:  mov    %ebx,%eax
0x0ffac107:  pop    %ebx
0x0ffac108:  pop    %esi
0x0ffac109:  ret    

----------------
IN: 
0x0ffb27a1:  add    $0x10,%esp
0x0ffb27a4:  cmpl   $0x0,0x18(%esp)
0x0ffb27a9:  je     0xffb27b5

----------------
IN: 
0x0ffb27ab:  lea    (%ebx,%eax,1),%edx
0x0ffb27ae:  mov    %esi,%eax
0x0ffb27b0:  call   0xffacdc0

----------------
IN: 
0x0ffb27b5:  mov    (%esp),%eax
0x0ffb27b8:  add    $0xc,%esp
0x0ffb27bb:  pop    %ebx
0x0ffb27bc:  pop    %esi
0x0ffb27bd:  ret    

----------------
IN: 
0x0ffb29c9:  lea    0x2(%eax),%ebx
0x0ffb29cc:  pop    %edx
0x0ffb29cd:  jmp    0xffb2a7d

----------------
IN: 
0x0ffb290e:  lea    0x1(%edx),%edx
0x0ffb2911:  push   $0x1
0x0ffb2913:  mov    $0x14,%ecx
0x0ffb2918:  mov    %edi,%eax
0x0ffb291a:  call   0xffb277b

----------------
IN: 
0x0ffaca09:  mov    (%eax),%edx
0x0ffaca0b:  lea    0x1(%edx),%ebx
0x0ffaca0e:  mov    %ebx,(%eax)
0x0ffaca10:  mov    %cl,(%edx)
0x0ffaca12:  mov    (%eax),%eax
0x0ffaca14:  movb   $0x0,(%eax)
0x0ffaca17:  mov    $0x4,%eax
0x0ffaca1c:  pop    %ebx
0x0ffaca1d:  pop    %esi
0x0ffaca1e:  ret    

----------------
IN: 
0x0ffb291f:  lea    0x1(%eax),%ebx
0x0ffb2922:  mov    0x20(%edi),%ebp
0x0ffb2925:  pop    %ecx
0x0ffb2926:  test   %ebp,%ebp
0x0ffb2928:  je     0xffb2a7d

----------------
IN: 
0x0ffb2ae6:  pop    %ebx
0x0ffb2ae7:  pop    %esi
0x0ffb2ae8:  pop    %edi
0x0ffb2ae9:  pop    %ebp
0x0ffb2aea:  ret    

----------------
IN: 
0x0ffb28a2:  mov    0xc(%esp),%eax
0x0ffb28a6:  jmp    0xffb2906

----------------
IN: 
0x0ffb2906:  lea    0x1(%eax),%ebx
0x0ffb2909:  jmp    0xffb29cc

----------------
IN: 
0x0ffb29cc:  pop    %edx
0x0ffb29cd:  jmp    0xffb2a7d

----------------
IN: 
0x0ffb2996:  cmp    $0x82,%cl
0x0ffb2999:  je     0xffb29d2

----------------
IN: 
0x0ffb29d2:  add    $0x2,%esi
0x0ffb29d5:  lea    0x8(%esp),%edx
0x0ffb29d9:  mov    %esi,%eax
0x0ffb29db:  call   0xffac0a4

----------------
IN: 
0x0ffb29e0:  mov    %eax,%ebx
0x0ffb29e2:  lea    (%esi,%eax,1),%edx
0x0ffb29e5:  mov    %edi,%eax
0x0ffb29e7:  call   0xffacdc0

----------------
IN: 
0x0ffb29ec:  add    %eax,%ebx
0x0ffb29ee:  mov    $0x28,%eax
0x0ffb29f3:  call   0xffae09f

----------------
IN: 
0x0ffb29f8:  mov    %eax,0x20(%edi)
0x0ffb29fb:  test   %eax,%eax
0x0ffb29fd:  jne    0xffb2a1b

----------------
IN: 
0x0ffb2a1b:  mov    $0x28,%ecx
0x0ffb2a20:  xor    %edx,%edx
0x0ffb2a22:  call   0xeab7b

----------------
IN: 
0x0ffb2a27:  mov    0x20(%edi),%eax
0x0ffb2a2a:  mov    $0xffbfbf0,%edx
0x0ffb2a2f:  call   0xffab66f

----------------
IN: 
0x0ffb2a34:  add    $0x8,%eax
0x0ffb2a37:  mov    $0x20,%ecx
0x0ffb2a3c:  mov    %edi,%edx
0x0ffb2a3e:  call   0xffab6af

----------------
IN: 
0x0ffb2a43:  pushl  0x8(%esp)
0x0ffb2a47:  mov    %ebx,%ecx
0x0ffb2a49:  mov    %esi,%edx
0x0ffb2a4b:  mov    %edi,%eax
0x0ffb2a4d:  call   0xffb2a8a

----------------
IN: 
0x0ffb2814:  lea    0x1(%edx),%edx
0x0ffb2817:  mov    %edi,%eax
0x0ffb2819:  call   0xffacdc0

----------------
IN: 
0x0ffb281e:  lea    0x1(%eax),%ebx
0x0ffb2821:  lea    (%esi,%ebx,1),%edx
0x0ffb2824:  mov    %edi,%eax
0x0ffb2826:  call   0xffb27be

----------------
IN: 
0x0ffb285e:  mov    $0x5,%ebx
0x0ffb2863:  jmp    0xffb2a7d

----------------
IN: 
0x0ffb282b:  add    %eax,%ebx
0x0ffb282d:  mov    0x20(%edi),%ebp
0x0ffb2830:  test   %ebp,%ebp
0x0ffb2832:  je     0xffb2a7d

----------------
IN: 
0x0ffb2838:  mov    $0xf160a,%edx
0x0ffb283d:  mov    %edi,%eax
0x0ffb283f:  call   0xe9971

----------------
IN: 
0x0ffb2844:  test   %eax,%eax
0x0ffb2846:  jne    0xffb292e

----------------
IN: 
0x0ffb284c:  mov    %esi,0x18(%ebp)
0x0ffb284f:  jmp    0xffb292e

----------------
IN: 
0x0ffb292e:  mov    $0xf1614,%edx
0x0ffb2933:  mov    %edi,%eax
0x0ffb2935:  call   0xe9971

----------------
IN: 
0x0ffb293a:  test   %eax,%eax
0x0ffb293c:  jne    0xffb2a7d

----------------
IN: 
0x0ffb2a78:  mov    $0x1,%ebx
0x0ffb2a7d:  decl   0x28(%edi)
0x0ffb2a80:  mov    %ebx,%eax
0x0ffb2a82:  add    $0x10,%esp
0x0ffb2a85:  pop    %ebx
0x0ffb2a86:  pop    %esi
0x0ffb2a87:  pop    %edi
0x0ffb2a88:  pop    %ebp
0x0ffb2a89:  ret    

----------------
IN: 
0x0ffb2a52:  movl   $0x0,0x20(%edi)
0x0ffb2a59:  mov    0xc(%esp),%ebx
0x0ffb2a5d:  pop    %eax
0x0ffb2a5e:  add    $0x2,%ebx
0x0ffb2a61:  jmp    0xffb2a7d

----------------
IN: 
0x0ffacf0a:  mov    0x1(%eax),%eax
0x0ffacf0d:  xor    %edx,%edx
0x0ffacf0f:  mov    $0x5,%ecx
0x0ffacf14:  jmp    0xffacf29

----------------
IN: 
0x0ffb2942:  mov    %esi,0x1c(%ebp)
0x0ffb2945:  jmp    0xffb2a7d

----------------
IN: 
0x0ffb28a8:  inc    %esi
0x0ffb28a9:  lea    0x4(%esp),%edx
0x0ffb28ad:  mov    %esi,%eax
0x0ffb28af:  call   0xffac0a4

----------------
IN: 
0x0ffb28b4:  mov    %eax,%ebx
0x0ffb28b6:  lea    0x24(%edi),%edx
0x0ffb28b9:  lea    (%esi,%eax,1),%eax
0x0ffb28bc:  lea    0x8(%esp),%ecx
0x0ffb28c0:  call   0xffaced2

----------------
IN: 
0x0ffacef0:  movzbl 0x1(%eax),%eax
0x0ffacef4:  xor    %edx,%edx
0x0ffacef6:  mov    $0x2,%ecx
0x0ffacefb:  jmp    0xffacf29

----------------
IN: 
0x0ffacf2d:  mov    %eax,(%ebx)
0x0ffacf2f:  mov    %edx,0x4(%ebx)
0x0ffacf32:  mov    %ecx,%eax
0x0ffacf34:  pop    %ebx
0x0ffacf35:  ret    

----------------
IN: 
0x0ffb28c5:  mov    %eax,(%esp)
0x0ffb28c8:  mov    0x20(%edi),%ebp
0x0ffb28cb:  test   %ebp,%ebp
0x0ffb28cd:  je     0xffb28ee

----------------
IN: 
0x0ffb28cf:  mov    $0xf160f,%edx
0x0ffb28d4:  mov    %edi,%eax
0x0ffb28d6:  call   0xe9971

----------------
IN: 
0x0ffb28db:  test   %eax,%eax
0x0ffb28dd:  jne    0xffb28ee

----------------
IN: 
0x0ffb28df:  add    (%esp),%ebx
0x0ffb28e2:  add    %ebx,%esi
0x0ffb28e4:  mov    %esi,0x20(%ebp)
0x0ffb28e7:  mov    0x8(%esp),%eax
0x0ffb28eb:  mov    %eax,0x24(%ebp)
0x0ffb28ee:  mov    0x4(%esp),%eax
0x0ffb28f2:  lea    0x1(%eax),%ebx
0x0ffb28f5:  jmp    0xffb2a7d

----------------
IN: 
0x0fface3a:  test   %dl,%dl
0x0fface3c:  je     0xfface42

----------------
IN: 
0x0fface42:  lea    (%esi,%edi,1),%eax
0x0fface45:  lea    0x4(%esp),%edx
0x0fface49:  call   0xffac9ca

----------------
IN: 
0x0fface4e:  lea    (%edi,%eax,1),%ebx
0x0fface51:  mov    0x4(%esp),%eax
0x0fface55:  lea    0x1(%eax),%edx
0x0fface58:  mov    %edx,0x4(%esp)
0x0fface5c:  movb   $0x2e,(%eax)
0x0fface5f:  lea    (%esi,%ebx,1),%eax
0x0fface62:  lea    0x4(%esp),%edx
0x0fface66:  jmp    0xffaceb5

----------------
IN: 
0x0ffaceb5:  call   0xffac9ca

----------------
IN: 
0x0fface68:  test   %dl,%dl
0x0fface6a:  je     0xfface70

----------------
IN: 
0x0fface70:  movzbl (%esi,%edi,1),%ebp
0x0fface74:  lea    0x1(%edi),%ebx
0x0fface77:  xor    %edi,%edi
0x0fface79:  cmp    %edi,%ebp
0x0fface7b:  jle    0xffacec8

----------------
IN: 
0x0fface7d:  test   %edi,%edi
0x0fface7f:  je     0xfface8f

----------------
IN: 
0x0fface8f:  lea    (%esi,%ebx,1),%eax
0x0fface92:  lea    0x4(%esp),%edx
0x0fface96:  call   0xffac9ca

----------------
IN: 
0x0fface9b:  add    %eax,%ebx
0x0fface9d:  inc    %edi
0x0fface9e:  jmp    0xfface79

----------------
IN: 
0x0fface79:  cmp    %edi,%ebp
0x0fface7b:  jle    0xffacec8

----------------
IN: 
0x0fface81:  mov    0x4(%esp),%eax
0x0fface85:  lea    0x1(%eax),%edx
0x0fface88:  mov    %edx,0x4(%esp)
0x0fface8c:  movb   $0x2e,(%eax)
0x0fface8f:  lea    (%esi,%ebx,1),%eax
0x0fface92:  lea    0x4(%esp),%edx
0x0fface96:  call   0xffac9ca

----------------
IN: 
0x0ffb2a6a:  mov    $0x2,%ebx
0x0ffb2a6f:  jmp    0xffb2a7d

----------------
IN: 
0x0ffb28fa:  lea    0x1(%edx),%edx
0x0ffb28fd:  push   $0x0
0x0ffb28ff:  mov    %edi,%eax
0x0ffb2901:  call   0xffb277b

----------------
IN: 
0x0ffb28ee:  mov    0x4(%esp),%eax
0x0ffb28f2:  lea    0x1(%eax),%ebx
0x0ffb28f5:  jmp    0xffb2a7d

----------------
IN: 
0x0ffb29a8:  lea    0x2(%edx),%edx
0x0ffb29ab:  mov    %edi,%eax
0x0ffb29ad:  call   0xffacdc0

----------------
IN: 
0x0ffb29b2:  lea    0x3(%eax),%ebx
0x0ffb29b5:  jmp    0xffb2a7d

----------------
IN: 
0x0fface6c:  mov    %ecx,0x4(%esp)
0x0fface70:  movzbl (%esi,%edi,1),%ebp
0x0fface74:  lea    0x1(%edi),%ebx
0x0fface77:  xor    %edi,%edi
0x0fface79:  cmp    %edi,%ebp
0x0fface7b:  jle    0xffacec8

----------------
IN: 
0x0ffb2868:  mov    $0x1,%ebx
0x0ffb286d:  mov    (%esi,%ebx,1),%al
0x0ffb2870:  inc    %ebx
0x0ffb2871:  test   %al,%al
0x0ffb2873:  jne    0xffb286d

----------------
IN: 
0x0ffb286d:  mov    (%esi,%ebx,1),%al
0x0ffb2870:  inc    %ebx
0x0ffb2871:  test   %al,%al
0x0ffb2873:  jne    0xffb286d

----------------
IN: 
0x0ffb2875:  jmp    0xffb2a7d

----------------
IN: 
0x0fface3e:  mov    %ecx,0x4(%esp)
0x0fface42:  lea    (%esi,%edi,1),%eax
0x0fface45:  lea    0x4(%esp),%edx
0x0fface49:  call   0xffac9ca

----------------
IN: 
0x0ffb299b:  lea    0x7d(%ecx),%eax
0x0ffb299e:  cmp    $0x2,%al
0x0ffb29a0:  ja     0xffb2a63

----------------
IN: 
0x0ffb29a6:  jmp    0xffb29ba

----------------
IN: 
0x0ffaceab:  mov    %ecx,0x4(%esp)
0x0ffaceaf:  lea    0x4(%esp),%edx
0x0ffaceb3:  mov    %esi,%eax
0x0ffaceb5:  call   0xffac9ca

----------------
IN: 
0x0ffac9f0:  mov    0x2(%ecx),%bl
0x0ffac9f3:  cmp    $0x5f,%bl
0x0ffac9f6:  je     0xffaca01

----------------
IN: 
0x0ffb2b31:  add    $0x10,%esp
0x0ffb2b34:  add    $0x2c,%esp
0x0ffb2b37:  pop    %ebx
0x0ffb2b38:  pop    %esi
0x0ffb2b39:  ret    

----------------
IN: 
0x0ffb700b:  mov    $0xf1f90,%edx
0x0ffb7010:  xor    %eax,%eax
0x0ffb7012:  call   0xffb26a9

----------------
IN: 
0x0ffb26a9:  push   %edi
0x0ffb26aa:  push   %esi
0x0ffb26ab:  push   %ebx
0x0ffb26ac:  sub    $0xc,%esp
0x0ffb26af:  mov    %eax,%ebx
0x0ffb26b1:  push   %edx
0x0ffb26b2:  push   $0xf15e3
0x0ffb26b7:  push   $0xa
0x0ffb26b9:  lea    0xe(%esp),%esi
0x0ffb26bd:  push   %esi
0x0ffb26be:  call   0xffb244c

----------------
IN: 
0x0ffb26c3:  mov    %eax,%edi
0x0ffb26c5:  add    $0x10,%esp
0x0ffb26c8:  test   %ebx,%ebx
0x0ffb26ca:  jne    0xffb26dd

----------------
IN: 
0x0ffb26cc:  mov    0xffbfbf0,%ebx
0x0ffb26d2:  test   %ebx,%ebx
0x0ffb26d4:  je     0xffb26f1

----------------
IN: 
0x0ffb26d6:  mov    0x18(%ebx),%eax
0x0ffb26d9:  test   %eax,%eax
0x0ffb26db:  jne    0xffb26e1

----------------
IN: 
0x0ffb26dd:  mov    (%ebx),%ebx
0x0ffb26df:  jmp    0xffb26d2

----------------
IN: 
0x0ffb26d2:  test   %ebx,%ebx
0x0ffb26d4:  je     0xffb26f1

----------------
IN: 
0x0ffb26e1:  add    $0x5,%eax
0x0ffb26e4:  mov    %edi,%ecx
0x0ffb26e6:  mov    %esi,%edx
0x0ffb26e8:  call   0xffab68e

----------------
IN: 
0x0ffb26ed:  test   %eax,%eax
0x0ffb26ef:  jne    0xffb26dd

----------------
IN: 
0x0ffb26f1:  mov    %ebx,%eax
0x0ffb26f3:  add    $0xc,%esp
0x0ffb26f6:  pop    %ebx
0x0ffb26f7:  pop    %esi
0x0ffb26f8:  pop    %edi
0x0ffb26f9:  ret    

----------------
IN: 
0x0ffb7017:  mov    %eax,%ebx
0x0ffb7019:  test   %eax,%eax
0x0ffb701b:  je     0xffb7cbc

----------------
IN: 
0x0ffb7cbc:  add    $0xd4,%esp
0x0ffb7cc2:  pop    %ebx
0x0ffb7cc3:  pop    %esi
0x0ffb7cc4:  pop    %edi
0x0ffb7cc5:  pop    %ebp
0x0ffb7cc6:  ret    

----------------
IN: 
0x0ffb93b6:  cmpw   $0x40,0xf6038
0x0ffb93be:  je     0xffb940d

----------------
IN: 
0x0ffb93c0:  mov    $0x34,%al
0x0ffb93c2:  out    %al,$0x43
0x0ffb93c4:  xor    %eax,%eax
0x0ffb93c6:  out    %al,$0x40
0x0ffb93c8:  out    %al,$0x40
0x0ffb93ca:  mov    $0x8a,%dl
0x0ffb93cc:  mov    %dl,%al
0x0ffb93ce:  out    %al,$0x70
0x0ffb93d0:  mov    $0x26,%al
0x0ffb93d2:  out    %al,$0x71
0x0ffb93d4:  mov    $0x8b,%al
0x0ffb93d6:  out    %al,$0x70
0x0ffb93d8:  in     $0x71,%al
0x0ffb93da:  and    $0x1,%eax
0x0ffb93dd:  or     $0x2,%eax
0x0ffb93e0:  out    %al,$0x71
0x0ffb93e2:  mov    $0x8c,%al
0x0ffb93e4:  out    %al,$0x70
0x0ffb93e6:  in     $0x71,%al
0x0ffb93e8:  mov    $0x8d,%al
0x0ffb93ea:  out    %al,$0x70
0x0ffb93ec:  in     $0x71,%al
0x0ffb93ee:  mov    %dl,%al
0x0ffb93f0:  out    %al,$0x70
0x0ffb93f2:  in     $0x71,%al
0x0ffb93f4:  test   %al,%al
0x0ffb93f6:  jns    0xffb953b

----------------
IN: 
0x0ffb953b:  mov    $0x80,%al
0x0ffb953d:  out    %al,$0x70
0x0ffb953f:  in     $0x71,%al
0x0ffb9541:  mov    %al,%cl
0x0ffb9543:  mov    $0x82,%al
0x0ffb9545:  out    %al,$0x70
0x0ffb9547:  in     $0x71,%al
0x0ffb9549:  mov    %al,%bl
0x0ffb954b:  mov    $0x84,%al
0x0ffb954d:  out    %al,$0x70
0x0ffb954f:  in     $0x71,%al
0x0ffb9551:  mov    %al,%dl
0x0ffb9553:  shr    $0x4,%dl
0x0ffb9556:  movzbl %dl,%edx
0x0ffb9559:  imul   $0xa,%edx,%edx
0x0ffb955c:  and    $0xf,%eax
0x0ffb955f:  add    %edx,%eax
0x0ffb9561:  imul   $0x3c,%eax,%eax
0x0ffb9564:  mov    %bl,%dl
0x0ffb9566:  shr    $0x4,%dl
0x0ffb9569:  movzbl %dl,%edx
0x0ffb956c:  imul   $0xa,%edx,%edx
0x0ffb956f:  and    $0xf,%ebx
0x0ffb9572:  add    %ebx,%edx
0x0ffb9574:  add    %edx,%eax
0x0ffb9576:  imul   $0x3c,%eax,%eax
0x0ffb9579:  mov    %cl,%dl
0x0ffb957b:  shr    $0x4,%dl
0x0ffb957e:  movzbl %dl,%edx
0x0ffb9581:  imul   $0xa,%edx,%edx
0x0ffb9584:  and    $0xf,%ecx
0x0ffb9587:  add    %ecx,%edx
0x0ffb9589:  add    %edx,%eax
0x0ffb958b:  imul   $0x3e8,%eax,%eax
0x0ffb9591:  mov    $0x369e99,%edx
0x0ffb9596:  mul    %edx
0x0ffb9598:  add    $0xffff,%eax
0x0ffb959d:  adc    $0x0,%edx
0x0ffb95a0:  shrd   $0x10,%edx,%eax
0x0ffb95a4:  shr    $0x10,%edx
0x0ffb95a7:  add    $0xbb7,%eax
0x0ffb95ac:  mov    $0xbb8,%ecx
0x0ffb95b1:  xor    %edx,%edx
0x0ffb95b3:  div    %ecx
0x0ffb95b5:  mov    %eax,0x46c
0x0ffb95ba:  mov    $0xb2,%al
0x0ffb95bc:  out    %al,$0x70
0x0ffb95be:  in     $0x71,%al
0x0ffb95c0:  mov    %al,0xe8f38
0x0ffb95c5:  mov    $0xffea5,%edx
0x0ffb95ca:  movzwl %dx,%edx
0x0ffb95cd:  or     $0xf0000000,%edx
0x0ffb95d3:  xor    %eax,%eax
0x0ffb95d5:  call   0xffad04c

----------------
IN: 
0x0ffad07a:  mov    %ebx,0x0(,%eax,4)
0x0ffad081:  pop    %ebx
0x0ffad082:  pop    %esi
0x0ffad083:  ret    

----------------
IN: 
0x0ffb95da:  mov    $0xfd425,%edx
0x0ffb95df:  movzwl %dx,%edx
0x0ffb95e2:  or     $0xf0000000,%edx
0x0ffb95e8:  mov    $0x8,%eax
0x0ffb95ed:  call   0xffad04c

----------------
IN: 
0x0ffb95f2:  mov    $0x324d5054,%eax
0x0ffb95f7:  call   0xedace

----------------
IN: 
0x000edb4f:  add    $0x4,%eax
0x000edb52:  cmp    %eax,%esi
0x000edb54:  jbe    0xedb71

----------------
IN: 
0x000edb71:  xor    %ebx,%ebx
0x000edb73:  mov    %ebx,%eax
0x000edb75:  pop    %ebx
0x000edb76:  pop    %esi
0x000edb77:  ret    

----------------
IN: 
0x0ffb95fc:  test   %eax,%eax
0x0ffb95fe:  jne    0xffb9613

----------------
IN: 
0x0ffb9600:  mov    $0x41504354,%eax
0x0ffb9605:  call   0xedace

----------------
IN: 
0x0ffb960a:  test   %eax,%eax
0x0ffb960c:  jne    0xffb9634

----------------
IN: 
0x0ffb960e:  jmp    0xffb99d2

----------------
IN: 
0x0ffb99d2:  add    $0xa8,%esp
0x0ffb99d8:  pop    %ebx
0x0ffb99d9:  pop    %esi
0x0ffb99da:  pop    %edi
0x0ffb99db:  pop    %ebp
0x0ffb99dc:  ret    

----------------
IN: 
0x0ffbbac6:  call   0xea062

----------------
IN: 
0x000ea062:  xor    %eax,%eax
0x000ea064:  cmpb   $0x2,0xf54e0
0x000ea06b:  jne    0xea079

----------------
IN: 
0x000ea079:  ret    

----------------
IN: 
0x0ffbbacb:  test   %eax,%eax
0x0ffbbacd:  je     0xffbbad4

----------------
IN: 
0x0ffbbad4:  push   $0xf3ed1
0x0ffbbad9:  call   0xec4d8

----------------
IN: 
0x0ffbbade:  mov    $0x1,%edx
0x0ffbbae3:  xor    %ecx,%ecx
0x0ffbbae5:  mov    $0xf3eea,%eax
0x0ffbbaea:  call   0xffad81f

----------------
IN: 
0x0ffbbaef:  mov    %eax,0xf54d0
0x0ffbbaf4:  mov    $0x1,%edx
0x0ffbbaf9:  xor    %ecx,%ecx
0x0ffbbafb:  mov    $0xf3f02,%eax
0x0ffbbb00:  call   0xffad81f

----------------
IN: 
0x0ffbbb05:  mov    %eax,0xf54cc
0x0ffbbb0a:  mov    $0x2,%edx
0x0ffbbb0f:  xor    %ecx,%ecx
0x0ffbbb11:  mov    $0xf3f19,%eax
0x0ffbbb16:  call   0xffad81f

----------------
IN: 
0x0ffbbb1b:  mov    %eax,0xffbff38
0x0ffbbb20:  mov    $0x1,%edx
0x0ffbbb25:  xor    %ecx,%ecx
0x0ffbbb27:  mov    $0xf3f30,%eax
0x0ffbbb2c:  call   0xffad81f

----------------
IN: 
0x0ffbbb31:  mov    %eax,0xf54c8
0x0ffbbb36:  call   0xe99b2

----------------
IN: 
0x000e99b2:  mov    0xf54d4,%eax
0x000e99b7:  mov    0xc(%eax),%eax
0x000e99ba:  sub    $0x10,%eax
0x000e99bd:  and    $0xfffff800,%eax
0x000e99c2:  ret    

----------------
IN: 
0x0ffbbb3b:  lea    -0xc0000(%eax),%ecx
0x0ffbbb41:  xor    %edx,%edx
0x0ffbbb43:  mov    $0xc0000,%eax
0x0ffbbb48:  call   0xeab7b

----------------
IN: 
0x0ffbbb4d:  mov    0xffbfde8,%eax
0x0ffbbb52:  lea    -0x4(%eax),%ebx
0x0ffbbb55:  pop    %edi
0x0ffbbb56:  cmp    $0xfffffffc,%ebx
0x0ffbbb59:  je     0xffbbd43

----------------
IN: 
0x0ffbbb5f:  mov    %ebx,%eax
0x0ffbbb61:  call   0xffac46f

----------------
IN: 
0x0ffbbb66:  test   %eax,%eax
0x0ffbbb68:  jne    0xffbbb72

----------------
IN: 
0x0ffbbb6a:  mov    0x4(%ebx),%ebx
0x0ffbbb6d:  sub    $0x4,%ebx
0x0ffbbb70:  jmp    0xffbbb56

----------------
IN: 
0x0ffbbb56:  cmp    $0xfffffffc,%ebx
0x0ffbbb59:  je     0xffbbd43

----------------
IN: 
0x0ffbbb72:  mov    $0xf3f45,%edx
0x0ffbbb77:  mov    $0xf12ce,%eax
0x0ffbbb7c:  call   0xe9971

----------------
IN: 
0x0ffbbb81:  test   %eax,%eax
0x0ffbbb83:  jne    0xffbbbae

----------------
IN: 
0x0ffbbbae:  mov    $0xf3f56,%edx
0x0ffbbbb3:  mov    $0xf12ce,%eax
0x0ffbbbb8:  call   0xe9971

----------------
IN: 
0x0ffbbbbd:  test   %eax,%eax
0x0ffbbbbf:  jne    0xffbbbd8

----------------
IN: 
0x0ffbbbd8:  mov    $0xf3f61,%edx
0x0ffbbbdd:  mov    $0xf12ce,%eax
0x0ffbbbe2:  call   0xe9971

----------------
IN: 
0x0ffbbbe7:  test   %eax,%eax
0x0ffbbbe9:  jne    0xffbbc14

----------------
IN: 
0x0ffbbc14:  mov    $0xf3f6e,%edx
0x0ffbbc19:  mov    $0xf12ce,%eax
0x0ffbbc1e:  call   0xe9971

----------------
IN: 
0x0ffbbc23:  test   %eax,%eax
0x0ffbbc25:  jne    0xffbbc50

----------------
IN: 
0x0ffbbc50:  mov    0x10(%ebx),%eax
0x0ffbbc53:  cmp    $0x1106,%ax
0x0ffbbc57:  jne    0xffbbd15

----------------
IN: 
0x0ffbbd15:  cmp    $0x8086,%ax
0x0ffbbd19:  jne    0xffbbd33

----------------
IN: 
0x0ffbbd33:  xor    %ecx,%ecx
0x0ffbbd35:  mov    $0x1,%edx
0x0ffbbd3a:  mov    %ebx,%eax
0x0ffbbd3c:  call   0xffb515d

----------------
IN: 
0x0ffb515d:  push   %ebp
0x0ffb515e:  push   %edi
0x0ffb515f:  push   %esi
0x0ffb5160:  push   %ebx
0x0ffb5161:  sub    $0x28,%esp
0x0ffb5164:  mov    %eax,%ebx
0x0ffb5166:  mov    %edx,(%esp)
0x0ffb5169:  mov    %ecx,%ebp
0x0ffb516b:  movzwl 0x12(%eax),%eax
0x0ffb516f:  push   %eax
0x0ffb5170:  movzwl 0x10(%ebx),%eax
0x0ffb5174:  push   %eax
0x0ffb5175:  push   $0xf1cba
0x0ffb517a:  push   $0x11
0x0ffb517c:  lea    0x27(%esp),%esi
0x0ffb5180:  push   %esi
0x0ffb5181:  call   0xffb244c

----------------
IN: 
0x0ffb5186:  mov    %esi,%eax
0x0ffb5188:  call   0xffad7ee

----------------
IN: 
0x0ffb518d:  mov    %eax,%edi
0x0ffb518f:  add    $0x14,%esp
0x0ffb5192:  test   %eax,%eax
0x0ffb5194:  je     0xffb519d

----------------
IN: 
0x0ffb519d:  cmpl   $0x1,0xffbff38
0x0ffb51a4:  jg     0xffb51b6

----------------
IN: 
0x0ffb51b6:  mov    %ebx,%eax
0x0ffb51b8:  call   0xffaf248

----------------
IN: 
0x0ffaf248:  push   %ebp
0x0ffaf249:  push   %edi
0x0ffaf24a:  push   %esi
0x0ffaf24b:  push   %ebx
0x0ffaf24c:  sub    $0x8,%esp
0x0ffaf24f:  testb  $0x7f,0x18(%eax)
0x0ffaf253:  jne    0xffaf384

----------------
IN: 
0x0ffaf259:  mov    %eax,%ebp
0x0ffaf25b:  movzwl (%eax),%eax
0x0ffaf25e:  mov    %eax,(%esp)
0x0ffaf261:  mov    $0x30,%edx
0x0ffaf266:  call   0xea337

----------------
IN: 
0x0ffaf26b:  mov    %eax,%esi
0x0ffaf26d:  mov    $0xfffffffe,%ecx
0x0ffaf272:  mov    $0x30,%edx
0x0ffaf277:  mov    (%esp),%eax
0x0ffaf27a:  call   0xea07a

----------------
IN: 
0x0ffaf27f:  mov    $0x30,%edx
0x0ffaf284:  mov    (%esp),%eax
0x0ffaf287:  call   0xea337

----------------
IN: 
0x0ffaf28c:  and    $0xfffffffe,%esi
0x0ffaf28f:  lea    -0x1(%eax),%edx
0x0ffaf292:  cmp    $0xfffffffd,%edx
0x0ffaf295:  ja     0xffaf375

----------------
IN: 
0x0ffaf29b:  cmp    %esi,%eax
0x0ffaf29d:  je     0xffaf375

----------------
IN: 
0x0ffaf2a3:  lea    0x400000(%esi),%eax
0x0ffaf2a9:  cmp    $0x13fffff,%eax
0x0ffaf2ae:  jbe    0xffaf375

----------------
IN: 
0x0ffaf2b4:  mov    %esi,%ecx
0x0ffaf2b6:  or     $0x1,%ecx
0x0ffaf2b9:  mov    $0x30,%edx
0x0ffaf2be:  mov    (%esp),%eax
0x0ffaf2c1:  call   0xea07a

----------------
IN: 
0x0ffaf2c6:  mov    %esi,%edi
0x0ffaf2c8:  cmpw   $0xaa55,(%edi)
0x0ffaf2cd:  jne    0xffaf375

----------------
IN: 
0x0ffaf2d3:  movzwl 0x18(%edi),%ebx
0x0ffaf2d7:  mov    %ebx,%eax
0x0ffaf2d9:  add    %edi,%ebx
0x0ffaf2db:  cmpl   $0x52494350,(%ebx)
0x0ffaf2e1:  jne    0xffaf375

----------------
IN: 
0x0ffaf2e7:  test   $0x3,%al
0x0ffaf2e9:  je     0xffaf302

----------------
IN: 
0x0ffaf302:  test   %ebx,%ebx
0x0ffaf304:  je     0xffaf375

----------------
IN: 
0x0ffaf306:  mov    0x10(%ebp),%eax
0x0ffaf309:  cmp    %ax,0x4(%ebx)
0x0ffaf30d:  jne    0xffaf31f

----------------
IN: 
0x0ffaf30f:  mov    0x12(%ebp),%ax
0x0ffaf313:  cmp    %ax,0x6(%ebx)
0x0ffaf317:  jne    0xffaf31f

----------------
IN: 
0x0ffaf319:  cmpb   $0x0,0x14(%ebx)
0x0ffaf31d:  je     0xffaf330

----------------
IN: 
0x0ffaf330:  movzbl 0x2(%edi),%ecx
0x0ffaf334:  shl    $0x9,%ecx
0x0ffaf337:  mov    %ecx,%eax
0x0ffaf339:  mov    %ecx,0x4(%esp)
0x0ffaf33d:  call   0xffab9c9

----------------
IN: 
0x0ffab9c9:  push   %ebx
0x0ffab9ca:  mov    0xffbfe60,%edx
0x0ffab9d0:  lea    0x7ff(%edx,%eax,1),%ecx
0x0ffab9d7:  and    $0xfffff800,%ecx
0x0ffab9dd:  call   0xe99b2

----------------
IN: 
0x0ffab9e2:  cmp    %ecx,%eax
0x0ffab9e4:  jb     0xffaba01

----------------
IN: 
0x0ffab9e6:  mov    0xf54d4,%ebx
0x0ffab9ec:  mov    $0xd9800,%eax
0x0ffab9f1:  cmp    %ecx,%eax
0x0ffab9f3:  jae    0xffab9f7

----------------
IN: 
0x0ffab9f7:  add    $0x10,%eax
0x0ffab9fa:  mov    %eax,0x8(%ebx)
0x0ffab9fd:  mov    %edx,%eax
0x0ffab9ff:  jmp    0xffaba03

----------------
IN: 
0x0ffaba03:  pop    %ebx
0x0ffaba04:  ret    

----------------
IN: 
0x0ffaf342:  mov    %eax,%ebx
0x0ffaf344:  test   %eax,%eax
0x0ffaf346:  mov    0x4(%esp),%ecx
0x0ffaf34a:  jne    0xffaf35d

----------------
IN: 
0x0ffaf35d:  mov    %edi,%edx
0x0ffaf35f:  call   0xffad8e2

----------------
IN: 
0x0ffad8e2:  push   %ebp
0x0ffad8e3:  push   %edi
0x0ffad8e4:  push   %esi
0x0ffad8e5:  push   %ebx
0x0ffad8e6:  mov    %eax,%ebx
0x0ffad8e8:  mov    %edx,%esi
0x0ffad8ea:  mov    %ecx,%ebp
0x0ffad8ec:  call   0xec186

----------------
IN: 
0x000f7219:  mov    %bl,%al
0x000f721b:  add    $0x8,%esp
0x000f721f:  pop    %ebx
0x000f7221:  pop    %esi
0x000f7223:  retl   

Servicing hardware INT=0x08
----------------
IN: 
0x000ffea5:  pushl  $0xf0fc
0x000ffeab:  jmp    0xfd2e4

----------------
IN: 
0x000fd2e4:  cli    
0x000fd2e5:  cld    
0x000fd2e6:  push   %ds
0x000fd2e7:  push   %eax
0x000fd2e9:  mov    $0xd980,%eax
0x000fd2ef:  mov    %ax,%ds
0x000fd2f1:  mov    0xf790,%eax
0x000fd2f5:  sub    $0x28,%eax
0x000fd2f9:  addr32 popl 0x1c(%eax)
0x000fd2fe:  addr32 popw (%eax)
0x000fd301:  addr32 mov %edi,0x4(%eax)
0x000fd306:  addr32 mov %esi,0x8(%eax)
0x000fd30b:  addr32 mov %ebp,0xc(%eax)
0x000fd310:  addr32 mov %ebx,0x10(%eax)
0x000fd315:  addr32 mov %edx,0x14(%eax)
0x000fd31a:  addr32 mov %ecx,0x18(%eax)
0x000fd31f:  addr32 mov %es,0x2(%eax)
0x000fd323:  pop    %ecx
0x000fd325:  addr32 mov %esp,0x20(%eax)
0x000fd32a:  addr32 mov %ss,0x24(%eax)
0x000fd32e:  mov    %ds,%dx
0x000fd330:  mov    %dx,%ss

----------------
IN: 
0x000fd332:  mov    %eax,%esp

----------------
IN: 
0x000fd335:  calll  *%ecx

----------------
IN: 
0x000ff0fc:  push   %ebp
0x000ff0fe:  push   %edi
0x000ff100:  push   %esi
0x000ff102:  push   %ebx
0x000ff104:  sub    $0x38,%esp
0x000ff108:  mov    $0x40,%eax
0x000ff10e:  mov    %ax,%es
0x000ff110:  mov    %es:0x6c,%eax
0x000ff115:  inc    %eax
0x000ff117:  cmp    $0x1800af,%eax
0x000ff11d:  jbe    0xff12c

----------------
IN: 
0x000ff12c:  mov    $0x40,%edx
0x000ff132:  mov    %dx,%es
0x000ff134:  mov    %eax,%es:0x6c
0x000ff139:  mov    %dx,%es
0x000ff13b:  mov    %es:0x40,%al
0x000ff13f:  test   %al,%al
0x000ff141:  je     0xff15c

----------------
IN: 
0x000ff15c:  mov    %cs:0x6030,%eax
0x000ff161:  addr32 mov %eax,(%esp)
0x000ff166:  test   %eax,%eax
0x000ff169:  je     0xff2e6

----------------
IN: 
0x000ff2e6:  mov    %cs:0x602c,%esi
0x000ff2ec:  test   %esi,%esi
0x000ff2ef:  je     0xff35f

----------------
IN: 
0x000ff35f:  mov    $0xd980,%eax
0x000ff365:  mov    %eax,%ebx
0x000ff368:  mov    %ax,%es
0x000ff36a:  mov    %es:-0x8ac,%bp
0x000ff36f:  test   %bp,%bp
0x000ff371:  je     0xff4c7

----------------
IN: 
0x000ff4c7:  mov    $0x26,%ecx
0x000ff4cd:  xor    %edx,%edx
0x000ff4d0:  addr32 lea 0x12(%esp),%eax
0x000ff4d6:  calll  0xf7245

----------------
IN: 
0x000f7245:  test   %ecx,%ecx
0x000f7248:  je     0xf7252

----------------
IN: 
0x000f724a:  dec    %ecx
0x000f724c:  addr32 mov %dl,(%eax,%ecx,1)
0x000f7250:  jmp    0xf7245

----------------
IN: 
0x000f7252:  retl   

----------------
IN: 
0x000ff4dc:  addr32 movw $0x200,0x36(%esp)
0x000ff4e3:  mov    $0xe829,%edx
0x000ff4e9:  movzwl %dx,%edx
0x000ff4ed:  calll  0xf8193

----------------
IN: 
0x000f8193:  addr32 mov %dx,0x20(%eax)
0x000f8197:  mov    %cs,%dx
0x000f8199:  addr32 mov %dx,0x22(%eax)
0x000f819d:  mov    %ss,%dx
0x000f819f:  movzwl %dx,%edx
0x000f81a3:  jmp    0xf8148

----------------
IN: 
0x000f8148:  push   %edi
0x000f814a:  push   %esi
0x000f814c:  push   %ebx
0x000f814e:  push   %esi
0x000f8150:  mov    %eax,%ebx
0x000f8153:  addr32 mov %edx,(%esp)
0x000f8158:  calll  0xf6da5

----------------
IN: 
0x000f6db7:  mov    %esp,%eax
0x000f6dba:  cmp    $0xf798,%eax
0x000f6dc0:  seta   %al
0x000f6dc3:  movzbl %al,%eax
0x000f6dc7:  retl   

----------------
IN: 
0x000f815e:  test   %eax,%eax
0x000f8161:  addr32 mov (%esp),%edx
0x000f8166:  je     0xf8180

----------------
IN: 
0x000f8168:  movzwl %dx,%edx
0x000f816c:  mov    $0x8148,%ecx
0x000f8172:  mov    %ebx,%eax
0x000f8175:  pop    %ebx
0x000f8177:  pop    %ebx
0x000f8179:  pop    %esi
0x000f817b:  pop    %edi
0x000f817d:  jmp    0xf7bd2

----------------
IN: 
0x000f7bd2:  push   %edi
0x000f7bd4:  push   %esi
0x000f7bd6:  push   %ebx
0x000f7bd8:  mov    %ss,%bx
0x000f7bda:  movzwl %bx,%ebx
0x000f7bde:  cmp    $0xd980,%ebx
0x000f7be5:  jne    0xf7c25

----------------
IN: 
0x000f7be7:  mov    %esp,%ebx
0x000f7bea:  cmp    $0xf798,%ebx
0x000f7bf1:  jbe    0xf7c25

----------------
IN: 
0x000f7bf3:  mov    -0x870,%esi
0x000f7bf8:  mov    %ss,%bx
0x000f7bfa:  mov    %esp,-0x870
0x000f7bff:  addr32 mov -0x4(%esi),%edi
0x000f7c04:  mov    %di,%ss

----------------
IN: 
0x000f7c06:  addr32 mov -0x8(%esi),%sp

----------------
IN: 
0x000f7c0a:  mov    %di,%ds
0x000f7c0c:  calll  *%ecx

----------------
IN: 
0x000f8180:  mov    %ebx,%eax
0x000f8183:  calll  0xfcfc7

----------------
IN: 
0x000fcfc7:  push   %ebp
0x000fcfc9:  push   %eax
0x000fcfcb:  push   %edx
0x000fcfcd:  mov    %dx,%ds
0x000fcfcf:  push   %cs
0x000fcfd0:  push   $0xd009
0x000fcfd3:  addr32 pushw 0x24(%eax)
0x000fcfd7:  addr32 pushl 0x20(%eax)
0x000fcfdc:  addr32 mov 0x4(%eax),%edi
0x000fcfe1:  addr32 mov 0x8(%eax),%esi
0x000fcfe6:  addr32 mov 0xc(%eax),%ebp
0x000fcfeb:  addr32 mov 0x10(%eax),%ebx
0x000fcff0:  addr32 mov 0x14(%eax),%edx
0x000fcff5:  addr32 mov 0x18(%eax),%ecx
0x000fcffa:  addr32 mov 0x2(%eax),%es
0x000fcffe:  addr32 pushl 0x1c(%eax)
0x000fd003:  addr32 mov (%eax),%ds
0x000fd006:  pop    %eax
0x000fd008:  iret   

----------------
IN: 
0x000fe829:  int    $0x1c

----------------
IN: 
0x000fff53:  iret   

----------------
IN: 
0x000fe82b:  lret   

----------------
IN: 
0x000fd009:  pushf  
0x000fd00a:  cli    
0x000fd00b:  cld    
0x000fd00c:  push   %ds
0x000fd00d:  push   %eax
0x000fd00f:  addr32 mov 0x8(%esp),%ds
0x000fd014:  addr32 mov 0xc(%esp),%eax
0x000fd01a:  addr32 popl 0x1c(%eax)
0x000fd01f:  addr32 popw (%eax)
0x000fd022:  addr32 mov %edi,0x4(%eax)
0x000fd027:  addr32 mov %esi,0x8(%eax)
0x000fd02c:  addr32 mov %ebp,0xc(%eax)
0x000fd031:  addr32 mov %ebx,0x10(%eax)
0x000fd036:  addr32 mov %edx,0x14(%eax)
0x000fd03b:  addr32 mov %ecx,0x18(%eax)
0x000fd040:  addr32 mov %es,0x2(%eax)
0x000fd044:  addr32 popw 0x24(%eax)
0x000fd048:  mov    %ss,%cx
0x000fd04a:  mov    %cx,%ds
0x000fd04c:  pop    %edx
0x000fd04e:  pop    %eax
0x000fd050:  pop    %ebp
0x000fd052:  retl   

----------------
IN: 
0x000f8189:  pop    %eax
0x000f818b:  pop    %ebx
0x000f818d:  pop    %esi
0x000f818f:  pop    %edi
0x000f8191:  retl   

----------------
IN: 
0x000f7c0f:  mov    %bx,%ds
0x000f7c11:  mov    %bx,%ss

----------------
IN: 
0x000f7c13:  mov    -0x870,%esp

----------------
IN: 
0x000f7c18:  mov    %esi,-0x870
0x000f7c1d:  pop    %ebx
0x000f7c1f:  pop    %esi
0x000f7c21:  pop    %edi
0x000f7c23:  retl   

----------------
IN: 
0x000ff4f3:  mov    $0x20,%al
0x000ff4f5:  out    %al,$0x20
0x000ff4f7:  add    $0x38,%esp
0x000ff4fb:  pop    %ebx
0x000ff4fd:  pop    %esi
0x000ff4ff:  pop    %edi
0x000ff501:  pop    %ebp
0x000ff503:  retl   

----------------
IN: 
0x000fd338:  mov    %esp,%eax
0x000fd33b:  addr32 mov 0x24(%eax),%ss

----------------
IN: 
0x000fd33f:  addr32 mov 0x20(%eax),%esp

----------------
IN: 
0x000fd344:  addr32 mov 0x4(%eax),%edi
0x000fd349:  addr32 mov 0x8(%eax),%esi
0x000fd34e:  addr32 mov 0xc(%eax),%ebp
0x000fd353:  addr32 mov 0x10(%eax),%ebx
0x000fd358:  addr32 mov 0x14(%eax),%edx
0x000fd35d:  addr32 mov 0x18(%eax),%ecx
0x000fd362:  addr32 mov 0x2(%eax),%es
0x000fd366:  addr32 pushl 0x1c(%eax)
0x000fd36b:  addr32 mov (%eax),%ds
0x000fd36e:  pop    %eax
0x000fd370:  iret   

----------------
IN: 
0x0ffad8f1:  cmp    $0x3,%ebp
0x0ffad8f4:  jbe    0xffad917

----------------
IN: 
0x0ffad8f6:  mov    %ebp,%eax
0x0ffad8f8:  cmp    $0x800,%ebp
0x0ffad8fe:  jbe    0xffad905

----------------
IN: 
0x0ffad900:  mov    $0x800,%eax
0x0ffad905:  mov    %eax,%ecx
0x0ffad907:  shr    $0x2,%ecx
0x0ffad90a:  and    $0xfffffffc,%eax
0x0ffad90d:  sub    %eax,%ebp
0x0ffad90f:  mov    %ebx,%edi
0x0ffad911:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffad911:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffad913:  mov    %edi,%ebx
0x0ffad915:  jmp    0xffad8ec

----------------
IN: 
0x0ffad8ec:  call   0xec186

----------------
IN: 
0x0ffad905:  mov    %eax,%ecx
0x0ffad907:  shr    $0x2,%ecx
0x0ffad90a:  and    $0xfffffffc,%eax
0x0ffad90d:  sub    %eax,%ebp
0x0ffad90f:  mov    %ebx,%edi
0x0ffad911:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffad917:  test   %ebp,%ebp
0x0ffad919:  je     0xffad921

----------------
IN: 
0x0ffad921:  pop    %ebx
0x0ffad922:  pop    %esi
0x0ffad923:  pop    %edi
0x0ffad924:  pop    %ebp
0x0ffad925:  ret    

----------------
IN: 
0x0ffaf364:  mov    %esi,%ecx
0x0ffaf366:  mov    $0x30,%edx
0x0ffaf36b:  mov    (%esp),%eax
0x0ffaf36e:  call   0xea07a

----------------
IN: 
0x0ffaf373:  jmp    0xffaf386

----------------
IN: 
0x0ffaf386:  mov    %ebx,%eax
0x0ffaf388:  add    $0x8,%esp
0x0ffaf38b:  pop    %ebx
0x0ffaf38c:  pop    %esi
0x0ffaf38d:  pop    %edi
0x0ffaf38e:  pop    %ebp
0x0ffaf38f:  ret    

----------------
IN: 
0x0ffb51bd:  test   %eax,%eax
0x0ffb51bf:  je     0xffb5284

----------------
IN: 
0x0ffb51c5:  mov    0x64,%ecx
0x0ffb51cb:  mov    %ecx,0x8(%esp)
0x0ffb51cf:  movl   $0xfe6f2,0x4(%esp)
0x0ffb51d7:  movzwl 0x4(%esp),%edx
0x0ffb51dc:  or     $0xf0000000,%edx
0x0ffb51e2:  mov    %edx,0xc(%esp)
0x0ffb51e6:  movzwl 0x1a(%eax),%esi
0x0ffb51ea:  add    %eax,%esi
0x0ffb51ec:  cmpl   $0x506e5024,(%esi)
0x0ffb51f2:  je     0xffb51f6

----------------
IN: 
0x0ffb51f4:  xor    %esi,%esi
0x0ffb51f6:  test   %ebp,%ebp
0x0ffb51f8:  je     0xffb520f

----------------
IN: 
0x0ffb520f:  movzwl (%ebx),%edx
0x0ffb5212:  mov    (%esp),%ecx
0x0ffb5215:  mov    %eax,0x10(%esp)
0x0ffb5219:  call   0xffb5004

----------------
IN: 
0x0ffb5004:  push   %ebp
0x0ffb5005:  push   %edi
0x0ffb5006:  push   %esi
0x0ffb5007:  push   %ebx
0x0ffb5008:  sub    $0x28,%esp
0x0ffb500b:  mov    %eax,%esi
0x0ffb500d:  mov    %edx,(%esp)
0x0ffb5010:  mov    %ecx,%ebp
0x0ffb5012:  call   0xeda0e

----------------
IN: 
0x000eda0e:  cmpw   $0xaa55,(%eax)
0x000eda13:  jne    0xeda5b

----------------
IN: 
0x000eda15:  push   %esi
0x000eda16:  push   %ebx
0x000eda17:  mov    %eax,%esi
0x000eda19:  mov    0x2(%eax),%al
0x000eda1c:  xor    %edx,%edx
0x000eda1e:  test   %al,%al
0x000eda20:  je     0xeda5e

----------------
IN: 
0x000eda22:  movzbl %al,%ebx
0x000eda25:  shl    $0x9,%ebx
0x000eda28:  mov    %ebx,%edx
0x000eda2a:  mov    %esi,%eax
0x000eda2c:  call   0xeaaa5

----------------
IN: 
0x000eda31:  mov    $0x1,%edx
0x000eda36:  test   %al,%al
0x000eda38:  je     0xeda5e

----------------
IN: 
0x000eda5e:  mov    %edx,%eax
0x000eda60:  pop    %ebx
0x000eda61:  pop    %esi
0x000eda62:  ret    

----------------
IN: 
0x0ffb5017:  test   %eax,%eax
0x0ffb5019:  je     0xffb5109

----------------
IN: 
0x0ffb501f:  movzbl 0x2(%esi),%ecx
0x0ffb5023:  shl    $0x9,%ecx
0x0ffb5026:  mov    %ecx,%eax
0x0ffb5028:  mov    %ecx,0x4(%esp)
0x0ffb502c:  call   0xffab9c9

----------------
IN: 
0x0ffb5031:  mov    %eax,%ebx
0x0ffb5033:  test   %eax,%eax
0x0ffb5035:  mov    0x4(%esp),%ecx
0x0ffb5039:  jne    0xffb504a

----------------
IN: 
0x0ffb504a:  cmp    %eax,%esi
0x0ffb504c:  je     0xffb5055

----------------
IN: 
0x0ffb5055:  cmpb   $0x0,0xe8f01
0x0ffb505c:  je     0xffb50aa

----------------
IN: 
0x0ffb50aa:  test   %ebp,%ebp
0x0ffb50ac:  jne    0xffb50bb

----------------
IN: 
0x0ffb50bb:  movzwl (%esp),%ecx
0x0ffb50bf:  mov    $0x3,%edx
0x0ffb50c4:  mov    %ebx,%eax
0x0ffb50c6:  call   0xee4d2

----------------
IN: 
0x000ee4d2:  push   %edi
0x000ee4d3:  push   %esi
0x000ee4d4:  push   %ebx
0x000ee4d5:  sub    $0x28,%esp
0x000ee4d8:  mov    %edx,%esi
0x000ee4da:  mov    %ecx,%edi
0x000ee4dc:  shr    $0x4,%eax
0x000ee4df:  mov    %eax,%ebx
0x000ee4e1:  movzwl %dx,%eax
0x000ee4e4:  push   %eax
0x000ee4e5:  movzwl %bx,%eax
0x000ee4e8:  push   %eax
0x000ee4e9:  push   $0xf1c99
0x000ee4ee:  call   0xec4d8

----------------
IN: 
0x000ee4f3:  mov    $0x26,%ecx
0x000ee4f8:  xor    %edx,%edx
0x000ee4fa:  lea    0xe(%esp),%eax
0x000ee4fe:  call   0xeab7b

----------------
IN: 
0x000ee503:  movw   $0x200,0x32(%esp)
0x000ee50a:  mov    %di,0x2a(%esp)
0x000ee50f:  movw   $0xffff,0x1e(%esp)
0x000ee516:  movw   $0xffff,0x22(%esp)
0x000ee51d:  movw   $0xf000,0x10(%esp)
0x000ee524:  mov    $0xf6060,%eax
0x000ee529:  mov    %ax,0x12(%esp)
0x000ee52e:  mov    %si,0x2e(%esp)
0x000ee533:  mov    %bx,0x30(%esp)
0x000ee538:  call   0xeb1c7

----------------
IN: 
0x000eb1c7:  call   0xea062

----------------
IN: 
0x000eb1cc:  test   %eax,%eax
0x000eb1ce:  je     0xeb201

----------------
IN: 
0x000eb201:  ret    

----------------
IN: 
0x000ee53d:  mov    $0x1,%eax
0x000ee542:  call   0xebf98

----------------
IN: 
0x000ee547:  mov    $0xf8148,%ecx
0x000ee54c:  xor    %edx,%edx
0x000ee54e:  lea    0xe(%esp),%eax
0x000ee552:  call   0xec0df

----------------
IN: 
0x000c0003:  jmp    0xc55f3

----------------
IN: 
0x000c55f3:  cli    
0x000c55f4:  cld    
0x000c55f5:  push   %eax
0x000c55f7:  push   %ecx
0x000c55f9:  push   %edx
0x000c55fb:  push   %ebx
0x000c55fd:  push   %ebp
0x000c55ff:  push   %esi
0x000c5601:  push   %edi
0x000c5603:  push   %es
0x000c5604:  push   %ds
0x000c5605:  mov    %ss,%ax
0x000c5607:  mov    %ax,%ds
0x000c5609:  mov    %esp,%ebx
0x000c560c:  movzwl %sp,%esp
0x000c5610:  mov    %esp,%eax
0x000c5613:  push   %ax
0x000c5614:  call   0xc3633

----------------
IN: 
0x000c3633:  push   %ebp
0x000c3635:  mov    %esp,%ebp
0x000c3638:  push   %edi
0x000c363a:  push   %esi
0x000c363c:  push   %ebx
0x000c363e:  sub    $0x18,%esp
0x000c3642:  mov    %eax,%ebx
0x000c3645:  pushl  $0x98f0
0x000c364b:  pushl  $0x57dc
0x000c3651:  push   %ax
0x000c3652:  call   0xc250d

----------------
IN: 
0x000c250d:  push   %ebp
0x000c250f:  mov    %esp,%ebp
0x000c2512:  push   %edi
0x000c2514:  push   %esi
0x000c2516:  push   %ebx
0x000c2518:  sub    $0x10,%esp
0x000c251c:  mov    %ebp,%ebx
0x000c251f:  pushf  
0x000c2520:  add    $0xc,%ebx
0x000c2524:  popf   

----------------
IN: 
0x000c2525:  addr32 mov 0x8(%ebp),%eax
0x000c252a:  addr32 mov %cs:(%eax),%al
0x000c252e:  test   %al,%al
0x000c2530:  je     0xc2812

----------------
IN: 
0x000c2534:  cmp    $0x25,%al
0x000c2536:  jne    0xc2550

----------------
IN: 
0x000c2550:  movsbl %al,%eax
0x000c2554:  jmp    0xc27f3

----------------
IN: 
0x000c27f3:  push   %ax
0x000c27f4:  call   0xc0022

----------------
IN: 
0x000c0022:  mov    %cs:-0x6706,%dx
0x000c0027:  test   %dx,%dx
0x000c0029:  je     0xc002c

----------------
IN: 
0x000c002b:  out    %al,(%dx)
0x000c002c:  ret    $0x2

----------------
IN: 
0x000c27f7:  addr32 mov 0x8(%ebp),%esi
0x000c27fc:  jmp    0xc2801

----------------
IN: 
0x000c2801:  mov    %esi,%eax
0x000c2804:  pushf  
0x000c2805:  add    $0x1,%eax
0x000c2809:  popf   

----------------
IN: 
0x000c280a:  addr32 mov %eax,0x8(%ebp)
0x000c280f:  jmp    0xc2525

----------------
IN: 
0x000c2538:  addr32 mov 0x8(%ebp),%eax
0x000c253d:  mov    %eax,%esi
0x000c2540:  pushf  
0x000c2541:  add    $0x1,%esi
0x000c2545:  popf   

----------------
IN: 
0x000c2546:  addr32 movb $0x20,-0x18(%ebp)
0x000c254b:  xor    %eax,%eax
0x000c254e:  jmp    0xc2571

----------------
IN: 
0x000c2571:  addr32 mov %cs:(%esi),%cl
0x000c2575:  addr32 mov %cl,-0x10(%ebp)
0x000c2579:  mov    %cl,%dl
0x000c257b:  mov    %ecx,%edi
0x000c257e:  sub    $0x30,%edi
0x000c2582:  mov    %edi,%ecx
0x000c2585:  cmp    $0x9,%cl
0x000c2588:  jbe    0xc2557

----------------
IN: 
0x000c258a:  jmp    0xc259b

----------------
IN: 
0x000c259b:  xor    %edi,%edi
0x000c259e:  cmp    $0x6c,%dl
0x000c25a1:  jne    0xc25c9

----------------
IN: 
0x000c25c9:  cmp    $0x64,%dl
0x000c25cc:  je     0xc2666

----------------
IN: 
0x000c25d0:  jg     0xc2612

----------------
IN: 
0x000c2612:  cmp    $0x73,%dl
0x000c2615:  je     0xc27cc

----------------
IN: 
0x000c27cc:  mov    %ebx,%ecx
0x000c27cf:  pushf  
0x000c27d0:  add    $0x4,%ecx
0x000c27d4:  popf   

----------------
IN: 
0x000c27d5:  addr32 mov (%ebx),%ebx
0x000c27d9:  addr32 mov %cs:(%ebx),%al
0x000c27dd:  test   %al,%al
0x000c27df:  je     0xc27fe

----------------
IN: 
0x000c27e1:  movsbl %al,%eax
0x000c27e5:  push   %ax
0x000c27e6:  call   0xc0022

----------------
IN: 
0x000c27e9:  inc    %ebx
0x000c27eb:  jmp    0xc27d9

----------------
IN: 
0x000c27d9:  addr32 mov %cs:(%ebx),%al
0x000c27dd:  test   %al,%al
0x000c27df:  je     0xc27fe

----------------
IN: 
0x000c27fe:  mov    %ecx,%ebx
0x000c2801:  mov    %esi,%eax
0x000c2804:  pushf  
0x000c2805:  add    $0x1,%eax
0x000c2809:  popf   

----------------
IN: 
0x000c2812:  add    $0x10,%esp
0x000c2816:  pop    %ebx
0x000c2818:  pop    %esi
0x000c281a:  pop    %edi
0x000c281c:  pop    %ebp
0x000c281e:  ret    $0x2

----------------
IN: 
0x000c3655:  pop    %edi
0x000c3657:  pop    %eax
0x000c3659:  pushl  $0x98a0
0x000c365f:  pushl  $0x57fb
0x000c3665:  push   %ax
0x000c3666:  call   0xc250d

----------------
IN: 
0x000c3669:  pop    %eax
0x000c366b:  pop    %edx
0x000c366d:  pushl  $0x5af0
0x000c3673:  pushl  $0x5809
0x000c3679:  push   %ax
0x000c367a:  call   0xc250d

----------------
IN: 
0x000c367d:  pop    %ecx
0x000c367f:  pop    %esi
0x000c3681:  mov    %ebx,%eax
0x000c3684:  push   %ax
0x000c3685:  call   0xc2821

----------------
IN: 
0x000c2821:  push   %ebp
0x000c2823:  mov    %esp,%ebp
0x000c2826:  push   %ebx
0x000c2828:  test   %eax,%eax
0x000c282b:  jne    0xc283b

----------------
IN: 
0x000c283b:  mov    %eax,%ebx
0x000c283e:  mov    %ss,%ax
0x000c2840:  movzwl %ax,%eax
0x000c2844:  push   %eax
0x000c2846:  addr32 movzwl 0x2(%ebx),%eax
0x000c284c:  push   %eax
0x000c284e:  addr32 movzwl (%ebx),%eax
0x000c2853:  push   %eax
0x000c2855:  addr32 pushl 0x14(%ebx)
0x000c285a:  addr32 pushl 0x18(%ebx)
0x000c285f:  addr32 pushl 0x10(%ebx)
0x000c2864:  addr32 pushl 0x1c(%ebx)
0x000c2869:  pushl  $0x571b
0x000c286f:  push   %ax
0x000c2870:  call   0xc250d

----------------
IN: 
0x000c2557:  cmp    $0x30,%dl
0x000c255a:  je     0xc258c

----------------
IN: 
0x000c258c:  test   %eax,%eax
0x000c258f:  jne    0xc255c

----------------
IN: 
0x000c2591:  addr32 movb $0x30,-0x18(%ebp)
0x000c2596:  xor    %eax,%eax
0x000c2599:  jmp    0xc256f

----------------
IN: 
0x000c256f:  inc    %esi
0x000c2571:  addr32 mov %cs:(%esi),%cl
0x000c2575:  addr32 mov %cl,-0x10(%ebp)
0x000c2579:  mov    %cl,%dl
0x000c257b:  mov    %ecx,%edi
0x000c257e:  sub    $0x30,%edi
0x000c2582:  mov    %edi,%ecx
0x000c2585:  cmp    $0x9,%cl
0x000c2588:  jbe    0xc2557

----------------
IN: 
0x000c255c:  imul   $0xa,%eax,%eax
0x000c2560:  addr32 movsbl -0x10(%ebp),%ecx
0x000c2566:  pushf  
0x000c2567:  add    %ecx,%eax
0x000c256a:  add    $0xffffffd0,%eax
0x000c256e:  popf   

----------------
IN: 
0x000c2619:  jg     0xc2659

----------------
IN: 
0x000c2659:  cmp    $0x75,%dl
0x000c265c:  je     0xc2692

----------------
IN: 
0x000c265e:  cmp    $0x78,%dl
0x000c2661:  je     0xc26ae

----------------
IN: 
0x000c26ae:  xor    %ecx,%ecx
0x000c26b1:  cmp    $0x58,%dl
0x000c26b4:  sete   %cl
0x000c26b7:  addr32 mov %ecx,-0x10(%ebp)
0x000c26bc:  addr32 mov (%ebx),%ecx
0x000c26c0:  addr32 mov %ecx,-0x14(%ebp)
0x000c26c5:  addr32 movsbl -0x18(%ebp),%ecx
0x000c26cb:  mov    %edi,%edx
0x000c26ce:  test   %dl,%dl
0x000c26d0:  je     0xc273c

----------------
IN: 
0x000c273c:  mov    %ebx,%edi
0x000c273f:  pushf  
0x000c2740:  add    $0x4,%edi
0x000c2744:  popf   

----------------
IN: 
0x000c2745:  addr32 mov %edi,-0x18(%ebp)
0x000c274a:  addr32 mov -0x14(%ebp),%ebx
0x000c274f:  mov    $0x1,%edx
0x000c2755:  shr    $0x4,%ebx
0x000c2759:  je     0xc275f

----------------
IN: 
0x000c275b:  inc    %edx
0x000c275d:  jmp    0xc2755

----------------
IN: 
0x000c2755:  shr    $0x4,%ebx
0x000c2759:  je     0xc275f

----------------
IN: 
0x000c275f:  sub    %edx,%eax
0x000c2762:  mov    %eax,%ebx
0x000c2765:  test   %ebx,%ebx
0x000c2768:  jle    0xc277f

----------------
IN: 
0x000c276a:  addr32 mov %edx,-0x1c(%ebp)
0x000c276f:  mov    %ecx,%eax
0x000c2772:  push   %ax
0x000c2773:  call   0xc0022

----------------
IN: 
0x000c2776:  dec    %ebx
0x000c2778:  addr32 mov -0x1c(%ebp),%edx
0x000c277d:  jmp    0xc2765

----------------
IN: 
0x000c2765:  test   %ebx,%ebx
0x000c2768:  jle    0xc277f

----------------
IN: 
0x000c277f:  addr32 mov -0x10(%ebp),%ecx
0x000c2784:  addr32 mov -0x14(%ebp),%eax
0x000c2789:  push   %ax
0x000c278a:  call   0xc0fef

----------------
IN: 
0x000c0fef:  push   %ebp
0x000c0ff1:  mov    %esp,%ebp
0x000c0ff4:  push   %esi
0x000c0ff6:  push   %ebx
0x000c0ff8:  mov    %eax,%ebx
0x000c0ffb:  mov    %ecx,%esi
0x000c0ffe:  cmp    $0x4,%edx
0x000c1002:  je     0xc1072

----------------
IN: 
0x000c1004:  jg     0xc101c

----------------
IN: 
0x000c1006:  cmp    $0x2,%edx
0x000c100a:  je     0xc1096

----------------
IN: 
0x000c1096:  mov    %ebx,%eax
0x000c1099:  shr    $0x4,%eax
0x000c109d:  and    $0xf,%eax
0x000c10a1:  mov    %esi,%edx
0x000c10a4:  push   %ax
0x000c10a5:  call   0xc0fc2

----------------
IN: 
0x000c0fc2:  mov    %eax,%ecx
0x000c0fc5:  pushf  
0x000c0fc6:  add    $0x30,%ecx
0x000c0fca:  popf   

----------------
IN: 
0x000c0fcb:  cmp    $0x9,%eax
0x000c0fcf:  jbe    0xc0fe8

----------------
IN: 
0x000c0fe8:  movsbl %cl,%eax
0x000c0fec:  jmp    0xc0022

----------------
IN: 
0x000c10a8:  mov    %ebx,%eax
0x000c10ab:  and    $0xf,%eax
0x000c10af:  mov    %esi,%edx
0x000c10b2:  pop    %ebx
0x000c10b4:  pop    %esi
0x000c10b6:  pop    %ebp
0x000c10b8:  jmp    0xc0fc2

----------------
IN: 
0x000c278d:  addr32 mov -0x18(%ebp),%ebx
0x000c2792:  jmp    0xc2801

----------------
IN: 
0x000c1072:  mov    %ebx,%eax
0x000c1075:  shr    $0xc,%eax
0x000c1079:  and    $0xf,%eax
0x000c107d:  mov    %esi,%edx
0x000c1080:  push   %ax
0x000c1081:  call   0xc0fc2

----------------
IN: 
0x000c0fd1:  mov    %eax,%ecx
0x000c0fd4:  pushf  
0x000c0fd5:  add    $0x57,%ecx
0x000c0fd9:  popf   

----------------
IN: 
0x000c0fda:  test   %edx,%edx
0x000c0fdd:  je     0xc0fe8

----------------
IN: 
0x000c1084:  mov    %ebx,%eax
0x000c1087:  shr    $0x8,%eax
0x000c108b:  and    $0xf,%eax
0x000c108f:  mov    %esi,%edx
0x000c1092:  push   %ax
0x000c1093:  call   0xc0fc2

----------------
IN: 
0x000c100e:  cmp    $0x3,%edx
0x000c1012:  je     0xc1084

----------------
IN: 
0x000c1014:  dec    %edx
0x000c1016:  je     0xc10a8

----------------
IN: 
0x000c2873:  add    $0x20,%esp
0x000c2877:  addr32 movzwl 0x24(%ebx),%eax
0x000c287d:  push   %eax
0x000c287f:  addr32 movzwl 0x20(%ebx),%eax
0x000c2885:  push   %eax
0x000c2887:  addr32 movzwl 0x22(%ebx),%eax
0x000c288d:  push   %eax
0x000c288f:  mov    %ebx,%eax
0x000c2892:  pushf  
0x000c2893:  add    $0x26,%eax
0x000c2897:  popf   

----------------
IN: 
0x000c2898:  push   %eax
0x000c289a:  addr32 pushl 0xc(%ebx)
0x000c289f:  addr32 pushl 0x4(%ebx)
0x000c28a4:  addr32 pushl 0x8(%ebx)
0x000c28a9:  pushl  $0x5756
0x000c28af:  push   %ax
0x000c28b0:  call   0xc250d

----------------
IN: 
0x000c28b3:  add    $0x20,%esp
0x000c28b7:  addr32 mov -0x4(%ebp),%ebx
0x000c28bc:  mov    %ebp,%esp
0x000c28bf:  pop    %ebp
0x000c28c1:  ret    $0x2

----------------
IN: 
0x000c3688:  mov    %cs:0x9870,%eax
0x000c368d:  test   %eax,%eax
0x000c3690:  jne    0xc36e6

----------------
IN: 
0x000c3692:  addr32 movzwl 0x1c(%ebx),%ebx
0x000c3698:  mov    %ebx,%ecx
0x000c369b:  shl    $0x8,%ecx
0x000c369f:  or     $0x80000000,%ecx
0x000c36a6:  mov    $0xcf8,%esi
0x000c36ac:  mov    %ecx,%eax
0x000c36af:  mov    %esi,%edx
0x000c36b2:  out    %eax,(%dx)
0x000c36b4:  mov    $0xcfc,%edx
0x000c36ba:  in     (%dx),%ax
0x000c36bb:  mov    %cs:-0x6780,%dx
0x000c36c0:  cmp    %ax,%dx
0x000c36c2:  jne    0xc36e6

----------------
IN: 
0x000c36c4:  mov    %ecx,%eax
0x000c36c7:  mov    %esi,%edx
0x000c36ca:  out    %eax,(%dx)
0x000c36cc:  mov    $0xcfe,%edx
0x000c36d2:  in     (%dx),%ax
0x000c36d3:  mov    %cs:-0x677e,%dx
0x000c36d8:  cmp    %ax,%dx
0x000c36da:  jne    0xc36e6

----------------
IN: 
0x000c36dc:  mov    %cs,%ax
0x000c36de:  mov    %ax,%es
0x000c36e0:  mov    %ebx,%es:-0x678c
0x000c36e6:  mov    $0xc3,%al
0x000c36e8:  mov    $0x3c2,%edx
0x000c36ee:  out    %al,(%dx)
0x000c36ef:  mov    $0x204,%eax
0x000c36f5:  mov    $0x3c4,%edx
0x000c36fb:  out    %ax,(%dx)
0x000c36fc:  xor    %ebx,%ebx
0x000c36ff:  mov    $0x1ce,%esi
0x000c3705:  mov    %ebx,%eax
0x000c3708:  mov    %esi,%edx
0x000c370b:  out    %ax,(%dx)
0x000c370c:  mov    $0x1cf,%ecx
0x000c3712:  mov    $0xffffb0c0,%eax
0x000c3718:  mov    %ecx,%edx
0x000c371b:  out    %ax,(%dx)
0x000c371c:  mov    %ebx,%eax
0x000c371f:  mov    %esi,%edx
0x000c3722:  out    %ax,(%dx)
0x000c3723:  mov    %ecx,%edx
0x000c3726:  in     (%dx),%ax
0x000c3727:  cmp    $0xb0c0,%ax
0x000c372a:  je     0xc373b

----------------
IN: 
0x000c373b:  mov    %ebx,%eax
0x000c373e:  mov    %esi,%edx
0x000c3741:  out    %ax,(%dx)
0x000c3742:  mov    $0xffffb0c5,%eax
0x000c3748:  mov    %ecx,%edx
0x000c374b:  out    %ax,(%dx)
0x000c374c:  mov    %cs,%ax
0x000c374e:  mov    %ax,%es
0x000c3750:  mov    $0x1,%eax
0x000c3756:  mov    %eax,%es:0x5afc
0x000c375b:  mov    %cs:0x9870,%eax
0x000c3760:  mov    %eax,%edi
0x000c3763:  test   %eax,%eax
0x000c3766:  jne    0xc39ff

----------------
IN: 
0x000c376a:  mov    %cs:-0x678c,%ecx
0x000c3770:  test   %ecx,%ecx
0x000c3773:  js     0xc3839

----------------
IN: 
0x000c3777:  mov    %ecx,%ebx
0x000c377a:  shl    $0x8,%ebx
0x000c377e:  and    $0xffff00,%ebx
0x000c3785:  mov    %ebx,%eax
0x000c3788:  or     $0x80000000,%eax
0x000c378e:  mov    $0xcf8,%edx
0x000c3794:  out    %eax,(%dx)
0x000c3796:  mov    $0xcfc,%esi
0x000c379c:  mov    %esi,%edx
0x000c379f:  in     (%dx),%ax
0x000c37a0:  cmp    $0x1234,%ax
0x000c37a3:  je     0xc37bd

----------------
IN: 
0x000c37bd:  mov    %ebx,%eax
0x000c37c0:  or     $0x80000018,%eax
0x000c37c6:  mov    $0xcf8,%edx
0x000c37cc:  out    %eax,(%dx)
0x000c37ce:  mov    %esi,%edx
0x000c37d1:  in     (%dx),%eax
0x000c37d3:  and    $0xfffffffc,%eax
0x000c37d7:  addr32 mov %eax,-0x10(%ebp)
0x000c37dc:  xor    %esi,%esi
0x000c37df:  mov    %esi,%eax
0x000c37e2:  pushf  
0x000c37e3:  shl    $0x2,%eax
0x000c37e7:  add    $0x10,%eax
0x000c37eb:  popf   

----------------
IN: 
0x000c37ec:  or     %ebx,%eax
0x000c37ef:  or     $0x80000000,%eax
0x000c37f5:  mov    $0xcf8,%edx
0x000c37fb:  out    %eax,(%dx)
0x000c37fd:  mov    $0xcfc,%edx
0x000c3803:  in     (%dx),%eax
0x000c3805:  and    $0xfffffff0,%eax
0x000c3809:  mov    %eax,%ebx
0x000c380c:  push   %esi
0x000c380e:  mov    %ecx,%eax
0x000c3811:  and    $0x7,%eax
0x000c3815:  push   %eax
0x000c3817:  mov    %ecx,%eax
0x000c381a:  shr    $0x3,%ax
0x000c381d:  and    $0x1f,%eax
0x000c3821:  push   %eax
0x000c3823:  movzbl %ch,%ecx
0x000c3827:  push   %ecx
0x000c3829:  pushl  $0x584d
0x000c382f:  push   %ax
0x000c3830:  call   0xc250d

----------------
IN: 
0x000c2666:  addr32 mov (%ebx),%ecx
0x000c266a:  mov    %edi,%eax
0x000c266d:  test   %al,%al
0x000c266f:  jne    0xc2677

----------------
IN: 
0x000c2671:  add    $0x4,%ebx
0x000c2675:  jmp    0xc267b

----------------
IN: 
0x000c267b:  test   %ecx,%ecx
0x000c267e:  jns    0xc268d

----------------
IN: 
0x000c268d:  mov    %ecx,%eax
0x000c2690:  jmp    0xc26a7

----------------
IN: 
0x000c26a7:  push   %ax
0x000c26a8:  call   0xc22e4

----------------
IN: 
0x000c22e4:  push   %ebp
0x000c22e6:  mov    %esp,%ebp
0x000c22e9:  push   %esi
0x000c22eb:  push   %ebx
0x000c22ed:  sub    $0xc,%esp
0x000c22f1:  mov    %eax,%ebx
0x000c22f4:  addr32 movb $0x0,-0x9(%ebp)
0x000c22f9:  mov    %ebp,%ecx
0x000c22fc:  pushf  
0x000c22fd:  add    $0xfffffff6,%ecx
0x000c2301:  popf   

----------------
IN: 
0x000c2302:  mov    $0xa,%esi
0x000c2308:  mov    %ebx,%eax
0x000c230b:  xor    %edx,%edx
0x000c230e:  div    %esi
0x000c2311:  add    $0x30,%edx
0x000c2315:  addr32 mov %dl,(%ecx)
0x000c2318:  cmp    $0x9,%ebx
0x000c231c:  jbe    0xc2325

----------------
IN: 
0x000c2325:  addr32 movsbl (%ecx),%eax
0x000c232a:  test   %al,%al
0x000c232c:  je     0xc2336

----------------
IN: 
0x000c232e:  push   %ax
0x000c232f:  call   0xc0022

----------------
IN: 
0x000c2332:  inc    %ecx
0x000c2334:  jmp    0xc2325

----------------
IN: 
0x000c2336:  add    $0xc,%esp
0x000c233a:  pop    %ebx
0x000c233c:  pop    %esi
0x000c233e:  pop    %ebp
0x000c2340:  ret    $0x2

----------------
IN: 
0x000c26ab:  jmp    0xc2801

----------------
IN: 
0x000c3833:  add    $0x14,%esp
0x000c3837:  jmp    0xc3848

----------------
IN: 
0x000c3848:  mov    %cs,%ax
0x000c384a:  mov    %ax,%es
0x000c384c:  mov    %ebx,%es:0x7244
0x000c3852:  mov    $0x1ce,%esi
0x000c3858:  mov    $0xa,%eax
0x000c385e:  mov    %esi,%edx
0x000c3861:  out    %ax,(%dx)
0x000c3862:  mov    $0x1cf,%edx
0x000c3868:  in     (%dx),%ax
0x000c3869:  shl    $0x10,%eax
0x000c386d:  addr32 mov %eax,-0x14(%ebp)
0x000c3872:  mov    %eax,%es:0x724c
0x000c3877:  mov    $0x40,%eax
0x000c387d:  mov    %ax,%es:0x7240
0x000c3881:  mov    $0x1,%eax
0x000c3887:  mov    %eax,%es:0x7248
0x000c388c:  addr32 mov -0x14(%ebp),%eax
0x000c3891:  shr    $0x14,%eax
0x000c3895:  push   %eax
0x000c3897:  push   %ebx
0x000c3899:  pushl  $0x5872
0x000c389f:  push   %ax
0x000c38a0:  call   0xc250d

----------------
IN: 
0x000c101c:  cmp    $0x6,%edx
0x000c1020:  je     0xc104e

----------------
IN: 
0x000c1022:  cmp    $0x7,%edx
0x000c1026:  je     0xc103c

----------------
IN: 
0x000c1028:  cmp    $0x5,%edx
0x000c102c:  je     0xc1060

----------------
IN: 
0x000c102e:  mov    %ebx,%eax
0x000c1031:  shr    $0x1c,%eax
0x000c1035:  mov    %esi,%edx
0x000c1038:  push   %ax
0x000c1039:  call   0xc0fc2

----------------
IN: 
0x000c103c:  mov    %ebx,%eax
0x000c103f:  shr    $0x18,%eax
0x000c1043:  and    $0xf,%eax
0x000c1047:  mov    %esi,%edx
0x000c104a:  push   %ax
0x000c104b:  call   0xc0fc2

----------------
IN: 
0x000c104e:  mov    %ebx,%eax
0x000c1051:  shr    $0x14,%eax
0x000c1055:  and    $0xf,%eax
0x000c1059:  mov    %esi,%edx
0x000c105c:  push   %ax
0x000c105d:  call   0xc0fc2

----------------
IN: 
0x000c1060:  mov    %ebx,%eax
0x000c1063:  shr    $0x10,%eax
0x000c1067:  and    $0xf,%eax
0x000c106b:  mov    %esi,%edx
0x000c106e:  push   %ax
0x000c106f:  call   0xc0fc2

----------------
IN: 
0x000c231e:  dec    %ecx
0x000c2320:  mov    %eax,%ebx
0x000c2323:  jmp    0xc2308

----------------
IN: 
0x000c2308:  mov    %ebx,%eax
0x000c230b:  xor    %edx,%edx
0x000c230e:  div    %esi
0x000c2311:  add    $0x30,%edx
0x000c2315:  addr32 mov %dl,(%ecx)
0x000c2318:  cmp    $0x9,%ebx
0x000c231c:  jbe    0xc2325

----------------
IN: 
0x000c38a3:  add    $0xc,%esp
0x000c38a7:  mov    $0x4,%ecx
0x000c38ad:  mov    %ecx,%eax
0x000c38b0:  mov    %esi,%edx
0x000c38b3:  out    %ax,(%dx)
0x000c38b4:  mov    $0x1cf,%edx
0x000c38ba:  in     (%dx),%ax
0x000c38bb:  mov    %eax,%ebx
0x000c38be:  mov    %ecx,%eax
0x000c38c1:  mov    %esi,%edx
0x000c38c4:  out    %ax,(%dx)
0x000c38c5:  mov    %ebx,%eax
0x000c38c8:  or     $0x2,%eax
0x000c38cc:  mov    $0x1cf,%edx
0x000c38d2:  out    %ax,(%dx)
0x000c38d3:  mov    $0x1,%eax
0x000c38d9:  mov    %esi,%edx
0x000c38dc:  out    %ax,(%dx)
0x000c38dd:  mov    $0x1cf,%edx
0x000c38e3:  in     (%dx),%ax
0x000c38e4:  addr32 mov %ax,-0x1e(%ebp)
0x000c38e8:  mov    $0x3,%eax
0x000c38ee:  mov    %esi,%edx
0x000c38f1:  out    %ax,(%dx)
0x000c38f2:  mov    $0x1cf,%edx
0x000c38f8:  in     (%dx),%ax
0x000c38f9:  addr32 mov %ax,-0x20(%ebp)
0x000c38fd:  mov    %ecx,%eax
0x000c3900:  mov    %esi,%edx
0x000c3903:  out    %ax,(%dx)
0x000c3904:  mov    %ebx,%eax
0x000c3907:  mov    $0x1cf,%edx
0x000c390d:  out    %ax,(%dx)
0x000c390e:  mov    %cs:0x5b00,%eax
0x000c3913:  imul   $0xe,%eax,%eax
0x000c3917:  add    $0x5b20,%eax
0x000c391d:  addr32 mov %eax,-0x1c(%ebp)
0x000c3922:  mov    $0x5b20,%esi
0x000c3928:  addr32 cmp -0x1c(%ebp),%esi
0x000c392d:  jae    0xc39d5

----------------
IN: 
0x000c3931:  addr32 mov %cs:0x4(%esi),%bx
0x000c3936:  addr32 mov %cs:0x6(%esi),%ax
0x000c393b:  addr32 mov %ax,-0x22(%ebp)
0x000c393f:  addr32 mov %cs:0x8(%esi),%al
0x000c3944:  addr32 mov %al,-0x23(%ebp)
0x000c3948:  mov    %esi,%eax
0x000c394b:  pushf  
0x000c394c:  add    $0x2,%eax
0x000c3950:  popf   

----------------
IN: 
0x000c3951:  push   %ax
0x000c3952:  call   0xc0da7

----------------
IN: 
0x000c0da7:  mov    %eax,%edx
0x000c0daa:  addr32 mov %cs:(%eax),%cl
0x000c0dae:  test   %cl,%cl
0x000c0db0:  je     0xc0dd5

----------------
IN: 
0x000c0db2:  mov    $0x1,%eax
0x000c0db8:  cmp    $0x3,%cl
0x000c0dbb:  je     0xc0ddb

----------------
IN: 
0x000c0dbd:  addr32 mov %cs:0x6(%edx),%al
0x000c0dc2:  cmp    $0x8,%al
0x000c0dc4:  movzbl %al,%eax
0x000c0dc8:  jbe    0xc0ddb

----------------
IN: 
0x000c0ddb:  ret    $0x2

----------------
IN: 
0x000c3955:  addr32 mov %eax,-0x18(%ebp)
0x000c395a:  mov    %esi,%eax
0x000c395d:  pushf  
0x000c395e:  add    $0x2,%eax
0x000c3962:  popf   

----------------
IN: 
0x000c3963:  push   %ax
0x000c3964:  call   0xc08c9

----------------
IN: 
0x000c08c9:  addr32 mov %cs:(%eax),%dl
0x000c08cd:  cmp    $0x1,%dl
0x000c08d0:  je     0xc08e9

----------------
IN: 
0x000c08d2:  mov    $0x4,%eax
0x000c08d8:  cmp    $0x3,%dl
0x000c08db:  je     0xc08fd

----------------
IN: 
0x000c08dd:  neg    %dl
0x000c08df:  sbb    %eax,%eax
0x000c08e2:  add    $0x2,%eax
0x000c08e6:  ret    $0x2

----------------
IN: 
0x000c3967:  mov    %eax,%ecx
0x000c396a:  addr32 cmp %bx,-0x1e(%ebp)
0x000c396e:  jb     0xc39aa

----------------
IN: 
0x000c3970:  movzwl %bx,%eax
0x000c3974:  addr32 imul -0x18(%ebp),%eax
0x000c397a:  add    $0x7,%eax
0x000c397e:  mov    $0x8,%ebx
0x000c3984:  cltd   
0x000c3986:  idiv   %ebx
0x000c3989:  addr32 movzwl -0x22(%ebp),%edx
0x000c398f:  imul   %edx,%eax
0x000c3993:  imul   %ecx,%eax
0x000c3997:  addr32 cmp %eax,-0x14(%ebp)
0x000c399c:  jb     0xc39aa

----------------
IN: 
0x000c399e:  addr32 movzbl -0x23(%ebp),%ebx
0x000c39a4:  addr32 cmp %bx,-0x20(%ebp)
0x000c39a8:  jae    0xc39ce

----------------
IN: 
0x000c39ce:  add    $0xe,%esi
0x000c39d2:  jmp    0xc3928

----------------
IN: 
0x000c3928:  addr32 cmp -0x1c(%ebp),%esi
0x000c392d:  jae    0xc39d5

----------------
IN: 
0x000c08fd:  ret    $0x2

----------------
IN: 
0x000c0dca:  add    $0x7,%eax
0x000c0dce:  and    $0xfffffff8,%eax
0x000c0dd2:  ret    $0x2

----------------
IN: 
0x000c39d5:  addr32 cmpl $0x0,-0x10(%ebp)
0x000c39db:  je     0xc39ff

----------------
IN: 
0x000c39dd:  addr32 mov -0x10(%ebp),%eax
0x000c39e2:  add    %edi,%eax
0x000c39e5:  addr32 mov (%eax),%al
0x000c39e8:  mov    %cs,%dx
0x000c39ea:  mov    %dx,%es
0x000c39ec:  addr32 mov %al,%es:0x7140(%edi)
0x000c39f4:  inc    %edi
0x000c39f6:  cmp    $0x100,%edi
0x000c39fd:  jmp    0xc39db

----------------
IN: 
0x000c39db:  je     0xc39ff

----------------
IN: 
0x000c39ff:  mov    %cs:0x9870,%eax
0x000c3a04:  addr32 mov %eax,-0x10(%ebp)
0x000c3a09:  test   %eax,%eax
0x000c3a0c:  jne    0xc3df0

----------------
IN: 
0x000c3a10:  mov    $0x40,%eax
0x000c3a16:  mov    %ax,%es
0x000c3a18:  mov    %es:0x10,%dx
0x000c3a1d:  and    $0xffffffcf,%edx
0x000c3a21:  or     $0x20,%edx
0x000c3a25:  mov    %dx,%es:0x10
0x000c3a2a:  mov    %ax,%es
0x000c3a2c:  mov    $0x51,%dl
0x000c3a2e:  mov    %dl,%es:0x89
0x000c3a33:  mov    %ax,%es
0x000c3a35:  mov    $0x8,%dl
0x000c3a37:  mov    %dl,%es:0x8a
0x000c3a3c:  mov    %ax,%es
0x000c3a3e:  xor    %edx,%edx
0x000c3a41:  mov    %dl,%es:0x65
0x000c3a46:  mov    %ax,%es
0x000c3a48:  mov    %dl,%es:0x66
0x000c3a4d:  mov    %cs,%cx
0x000c3a4f:  shl    $0x10,%ecx
0x000c3a53:  mov    $0x66c0,%edx
0x000c3a59:  movzwl %dx,%edx
0x000c3a5d:  or     %ecx,%edx
0x000c3a60:  mov    %ax,%es
0x000c3a62:  mov    %edx,%es:0xa8
0x000c3a68:  mov    %cs,%dx
0x000c3a6a:  mov    %edx,%ecx
0x000c3a6d:  shl    $0x10,%ecx
0x000c3a71:  mov    $0x5f80,%eax
0x000c3a77:  movzwl %ax,%eax
0x000c3a7b:  or     %ecx,%eax
0x000c3a7e:  mov    %dx,%es
0x000c3a80:  mov    %eax,%es:0x66c0
0x000c3a85:  addr32 movl $0x5f4c,-0x18(%ebp)
0x000c3a8e:  mov    $0x5f80,%ebx
0x000c3a94:  addr32 mov -0x18(%ebp),%eax
0x000c3a99:  addr32 mov %cs:(%eax),%dl
0x000c3a9d:  movzbl %dl,%edx
0x000c3aa1:  test   %edx,%edx
0x000c3aa4:  je     0xc3c2d

----------------
IN: 
0x000c3c2d:  addr32 incl -0x18(%ebp)
0x000c3c32:  add    $0x40,%ebx
0x000c3c36:  cmp    $0x66c0,%ebx
0x000c3c3d:  jne    0xc3a94

----------------
IN: 
0x000c3a94:  addr32 mov -0x18(%ebp),%eax
0x000c3a99:  addr32 mov %cs:(%eax),%dl
0x000c3a9d:  movzbl %dl,%edx
0x000c3aa1:  test   %edx,%edx
0x000c3aa4:  je     0xc3c2d

----------------
IN: 
0x000c3aa8:  xor    %eax,%eax
0x000c3aab:  addr32 mov %cs:0x66e0(%eax),%cx
0x000c3ab3:  movzwl %cx,%ecx
0x000c3ab7:  cmp    %ecx,%edx
0x000c3aba:  jne    0xc3b20

----------------
IN: 
0x000c3b20:  add    $0x2c,%eax
0x000c3b24:  cmp    $0x2c0,%eax
0x000c3b2a:  jne    0xc3aab

----------------
IN: 
0x000c3aab:  addr32 mov %cs:0x66e0(%eax),%cx
0x000c3ab3:  movzwl %cx,%ecx
0x000c3ab7:  cmp    %ecx,%edx
0x000c3aba:  jne    0xc3b20

----------------
IN: 
0x000c3abc:  mov    %eax,%edi
0x000c3abf:  pushf  
0x000c3ac0:  add    $0x66e2,%edi
0x000c3ac7:  popf   

----------------
IN: 
0x000c3ac8:  addr32 mov %edi,-0x14(%ebp)
0x000c3acd:  addr32 mov %cs:0x66e4(%eax),%di
0x000c3ad5:  movzwl %di,%esi
0x000c3ad9:  addr32 mov %cs:0x66e6(%eax),%cx
0x000c3ae1:  addr32 mov %cx,-0x1c(%ebp)
0x000c3ae5:  movzwl %cx,%ecx
0x000c3ae9:  addr32 mov %cs:0x66e2(%eax),%dl
0x000c3af1:  addr32 mov %dl,-0x1e(%ebp)
0x000c3af5:  addr32 mov %cs:0x66ea(%eax),%dl
0x000c3afd:  addr32 mov %dl,-0x20(%ebp)
0x000c3b01:  addr32 cmpb $0x0,-0x1e(%ebp)
0x000c3b06:  jne    0xc3b31

----------------
IN: 
0x000c3b31:  addr32 mov %cs:0x66e9(%eax),%al
0x000c3b39:  mov    %cs,%dx
0x000c3b3b:  mov    %dx,%es
0x000c3b3d:  movzbl %al,%edi
0x000c3b41:  mov    %esi,%eax
0x000c3b44:  cltd   
0x000c3b46:  idiv   %edi
0x000c3b49:  addr32 mov %al,%es:(%ebx)
0x000c3b4d:  addr32 movzbl -0x20(%ebp),%edi
0x000c3b53:  mov    %ecx,%eax
0x000c3b56:  cltd   
0x000c3b58:  idiv   %edi
0x000c3b5b:  dec    %eax
0x000c3b5d:  addr32 mov %al,%es:0x1(%ebx)
0x000c3b62:  addr32 mov %cs,-0x1c(%ebp)
0x000c3b66:  addr32 mov -0x1c(%ebp),%es
0x000c3b6a:  addr32 mov -0x20(%ebp),%al
0x000c3b6e:  addr32 mov %al,%es:0x2(%ebx)
0x000c3b73:  addr32 movzbl -0x1e(%ebp),%eax
0x000c3b79:  mov    %esi,%edx
0x000c3b7c:  push   %ax
0x000c3b7d:  call   0xc002f

----------------
IN: 
0x000c002f:  test   %al,%al
0x000c0031:  je     0xc0067

----------------
IN: 
0x000c0033:  push   %ebp
0x000c0035:  mov    %esp,%ebp
0x000c0038:  push   %ebx
0x000c003a:  mov    %eax,%ebx
0x000c003d:  mov    $0x4000,%eax
0x000c0043:  dec    %bl
0x000c0045:  je     0xc007e

----------------
IN: 
0x000c007e:  pop    %ebx
0x000c0080:  pop    %ebp
0x000c0082:  ret    $0x2

----------------
IN: 
0x000c3b80:  addr32 mov %ax,%es:0x3(%ebx)
0x000c3b85:  addr32 mov -0x14(%ebp),%eax
0x000c3b8a:  addr32 mov %cs:0x16(%eax),%esi
0x000c3b90:  mov    %ebx,%edi
0x000c3b93:  pushf  
0x000c3b94:  add    $0x5,%edi
0x000c3b98:  popf   

----------------
IN: 
0x000c3b99:  mov    $0x4,%ecx
0x000c3b9f:  addr32 mov -0x1c(%ebp),%edx
0x000c3ba4:  mov    %ds,%ax
0x000c3ba6:  mov    %dx,%ds
0x000c3ba8:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c3ba8:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c3baa:  mov    %ax,%ds
0x000c3bac:  addr32 mov -0x14(%ebp),%eax
0x000c3bb1:  addr32 mov %cs:0x1a(%eax),%al
0x000c3bb6:  mov    %cs,%dx
0x000c3bb8:  mov    %dx,%es
0x000c3bba:  addr32 mov %al,%es:0x9(%ebx)
0x000c3bbf:  addr32 mov -0x14(%ebp),%eax
0x000c3bc4:  addr32 mov %cs:0x1e(%eax),%esi
0x000c3bca:  mov    %ebx,%edi
0x000c3bcd:  pushf  
0x000c3bce:  add    $0xa,%edi
0x000c3bd2:  popf   

----------------
IN: 
0x000c3bd3:  mov    $0x19,%ecx
0x000c3bd9:  mov    %ds,%ax
0x000c3bdb:  mov    %dx,%ds
0x000c3bdd:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c3bdd:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c3bdf:  mov    %ax,%ds
0x000c3be1:  addr32 mov -0x14(%ebp),%eax
0x000c3be6:  addr32 mov %cs:0x22(%eax),%esi
0x000c3bec:  mov    %cs,%dx
0x000c3bee:  mov    %dx,%es
0x000c3bf0:  mov    %ebx,%edi
0x000c3bf3:  pushf  
0x000c3bf4:  add    $0x23,%edi
0x000c3bf8:  popf   

----------------
IN: 
0x000c3bf9:  mov    $0x14,%ecx
0x000c3bff:  mov    %ds,%ax
0x000c3c01:  mov    %dx,%ds
0x000c3c03:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c3c03:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c3c05:  mov    %ax,%ds
0x000c3c07:  addr32 mov -0x14(%ebp),%eax
0x000c3c0c:  addr32 mov %cs:0x26(%eax),%esi
0x000c3c12:  mov    %cs,%dx
0x000c3c14:  mov    %dx,%es
0x000c3c16:  mov    %ebx,%edi
0x000c3c19:  pushf  
0x000c3c1a:  add    $0x37,%edi
0x000c3c1e:  popf   

----------------
IN: 
0x000c3c1f:  mov    $0x9,%ecx
0x000c3c25:  mov    %ds,%ax
0x000c3c27:  mov    %dx,%ds
0x000c3c29:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c3c29:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c3c2b:  mov    %ax,%ds
0x000c3c2d:  addr32 incl -0x18(%ebp)
0x000c3c32:  add    $0x40,%ebx
0x000c3c36:  cmp    $0x66c0,%ebx
0x000c3c3d:  jne    0xc3a94

----------------
IN: 
0x000c3b08:  mov    %cs,%ax
0x000c3b0a:  mov    %ax,%es
0x000c3b0c:  mov    %edi,%eax
0x000c3b0f:  addr32 mov %al,%es:(%ebx)
0x000c3b13:  addr32 mov -0x1c(%ebp),%dl
0x000c3b17:  dec    %edx
0x000c3b19:  addr32 mov %dl,%es:0x1(%ebx)
0x000c3b1e:  jmp    0xc3b62

----------------
IN: 
0x000c3b62:  addr32 mov %cs,-0x1c(%ebp)
0x000c3b66:  addr32 mov -0x1c(%ebp),%es
0x000c3b6a:  addr32 mov -0x20(%ebp),%al
0x000c3b6e:  addr32 mov %al,%es:0x2(%ebx)
0x000c3b73:  addr32 movzbl -0x1e(%ebp),%eax
0x000c3b79:  mov    %esi,%edx
0x000c3b7c:  push   %ax
0x000c3b7d:  call   0xc002f

----------------
IN: 
0x000c0067:  imul   %dx,%cx
0x000c006a:  mov    %ecx,%eax
0x000c006d:  pushf  
0x000c006e:  shl    %eax
0x000c0071:  add    $0x7ff,%eax
0x000c0077:  popf   

----------------
IN: 
0x000c0078:  and    $0xf800,%ax
0x000c007b:  ret    $0x2

----------------
IN: 
0x000c0047:  movzwl %dx,%edx
0x000c004b:  movzwl %cx,%ecx
0x000c004f:  imul   %ecx,%edx
0x000c0053:  sar    $0x3,%edx
0x000c0057:  mov    %edx,%eax
0x000c005a:  pushf  
0x000c005b:  add    $0x1fff,%eax
0x000c0061:  popf   

----------------
IN: 
0x000c0062:  and    $0xe000,%ax
0x000c0065:  jmp    0xc007e

----------------
IN: 
0x000c3c41:  xor    %edx,%edx
0x000c3c44:  mov    $0x1,%eax
0x000c3c4a:  addr32 imul $0x2c,-0x10(%ebp),%ecx
0x000c3c50:  addr32 cmpw $0x13,0x66e0(%ecx)
0x000c3c58:  ja     0xc3c67

----------------
IN: 
0x000c3c5a:  mov    %eax,%edi
0x000c3c5d:  addr32 mov -0x10(%ebp),%cl
0x000c3c61:  shl    %cl,%edi
0x000c3c64:  or     %edi,%edx
0x000c3c67:  addr32 incl -0x10(%ebp)
0x000c3c6c:  addr32 cmpl $0x10,-0x10(%ebp)
0x000c3c72:  jne    0xc3c4a

----------------
IN: 
0x000c3c4a:  addr32 imul $0x2c,-0x10(%ebp),%ecx
0x000c3c50:  addr32 cmpw $0x13,0x66e0(%ecx)
0x000c3c58:  ja     0xc3c67

----------------
IN: 
0x000c3c67:  addr32 incl -0x10(%ebp)
0x000c3c6c:  addr32 cmpl $0x10,-0x10(%ebp)
0x000c3c72:  jne    0xc3c4a

----------------
IN: 
0x000c3c74:  mov    %cs,%ax
0x000c3c76:  mov    %ax,%es
0x000c3c78:  mov    %edx,%es:-0x67a0
0x000c3c7e:  mov    %eax,%edx
0x000c3c81:  shl    $0x10,%edx
0x000c3c85:  mov    $0x562b,%eax
0x000c3c8b:  movzwl %ax,%eax
0x000c3c8f:  or     %edx,%eax
0x000c3c92:  xor    %edx,%edx
0x000c3c95:  mov    %dx,%es
0x000c3c97:  mov    %eax,%es:0x40
0x000c3c9c:  xor    %eax,%eax
0x000c3c9f:  mov    $0xfffff000,%esi
0x000c3ca5:  mov    %si,%es
0x000c3ca7:  addr32 mov %es:(%eax),%edx
0x000c3cac:  cmp    $0x4d4d5024,%edx
0x000c3cb3:  jne    0xc3d9f

----------------
IN: 
0x000c3d9f:  add    $0x10,%eax
0x000c3da3:  cmp    $0x10000,%eax
0x000c3da9:  jne    0xc3ca5

----------------
IN: 
0x000c3ca5:  mov    %si,%es
0x000c3ca7:  addr32 mov %es:(%eax),%edx
0x000c3cac:  cmp    $0x4d4d5024,%edx
0x000c3cb3:  jne    0xc3d9f

----------------
IN: 
0x000c3cb7:  addr32 mov %es:0x5(%eax),%dl
0x000c3cbc:  movzbl %dl,%edi
0x000c3cc0:  addr32 mov %edi,-0x10(%ebp)
0x000c3cc5:  xor    %ecx,%ecx
0x000c3cc8:  xor    %edx,%edx
0x000c3ccb:  addr32 cmp %edx,-0x10(%ebp)
0x000c3cd0:  jbe    0xc3ce1

----------------
IN: 
0x000c3cd2:  addr32 mov %es:(%eax,%edx,1),%bl
0x000c3cd7:  mov    %ebx,%edi
0x000c3cda:  add    %edi,%ecx
0x000c3cdd:  inc    %edx
0x000c3cdf:  jmp    0xc3ccb

----------------
IN: 
0x000c3ccb:  addr32 cmp %edx,-0x10(%ebp)
0x000c3cd0:  jbe    0xc3ce1

----------------
IN: 
0x000c3ce1:  test   %cl,%cl
0x000c3ce3:  jne    0xc3d9f

----------------
IN: 
0x000c3ce7:  mov    $0xfffff000,%edx
0x000c3ced:  mov    %dx,%es
0x000c3cef:  addr32 mov %es:0x7(%eax),%ecx
0x000c3cf5:  mov    %ecx,%eax
0x000c3cf8:  shr    $0x10,%eax
0x000c3cfc:  mov    %ecx,%ebx
0x000c3cff:  movzwl %cx,%edx
0x000c3d03:  push   %edx
0x000c3d05:  push   %eax
0x000c3d07:  pushl  $0x58a8
0x000c3d0d:  pushl  $0x200
0x000c3d13:  pushl  $0x58af
0x000c3d19:  push   %ax
0x000c3d1a:  call   0xc250d

----------------
IN: 
0x000c2692:  addr32 mov (%ebx),%eax
0x000c2696:  mov    %edi,%ecx
0x000c2699:  test   %cl,%cl
0x000c269b:  jne    0xc26a3

----------------
IN: 
0x000c269d:  add    $0x4,%ebx
0x000c26a1:  jmp    0xc26a7

----------------
IN: 
0x000c3d1d:  add    $0x14,%esp
0x000c3d21:  mov    %ebx,%ecx
0x000c3d24:  mov    $0x20,%ebx
0x000c3d2a:  mov    $0x9,%esi
0x000c3d30:  push   %ecx
0x000c3d32:  push   %si
0x000c3d33:  pushl  $0xffffffff
0x000c3d36:  push   %ebx
0x000c3d38:  push   $0x0
0x000c3d3a:  addr32 lcall *0xc(%esp)

----------------
IN: 
0x000fd0c3:  push   %esp
0x000fd0c5:  movzwl %sp,%esp
0x000fd0c9:  pushfl 
0x000fd0cb:  cli    
0x000fd0cc:  cld    
0x000fd0cd:  push   %eax
0x000fd0cf:  push   %ecx
0x000fd0d1:  push   %edx
0x000fd0d3:  push   %ebx
0x000fd0d5:  push   %ebp
0x000fd0d7:  push   %esi
0x000fd0d9:  push   %edi
0x000fd0db:  push   %es
0x000fd0dc:  push   %ds
0x000fd0dd:  mov    %ss,%ecx
0x000fd0e0:  mov    %cx,%ds
0x000fd0e2:  shl    $0x4,%ecx
0x000fd0e6:  mov    $0xffbec71,%eax
0x000fd0ec:  addr32 lea 0x2c(%esp,%ecx,1),%edx
0x000fd0f2:  mov    $0xffffffff,%ecx
0x000fd0f8:  calll  0xf7cdf

----------------
IN: 
0x000f7cdf:  push   %ebp
0x000f7ce1:  push   %edi
0x000f7ce3:  push   %esi
0x000f7ce5:  push   %ebx
0x000f7ce7:  mov    %eax,%edi
0x000f7cea:  mov    %edx,%ebx
0x000f7ced:  mov    %cs:0x6174,%eax
0x000f7cf2:  test   %eax,%eax
0x000f7cf5:  je     0xf7d49

----------------
IN: 
0x000f7cf7:  mov    $0x2,%eax
0x000f7cfd:  calll  0xf6b68

----------------
IN: 
0x000f6bca:  mov    %ss,%ax
0x000f6bcc:  mov    $0xd980,%ecx
0x000f6bd2:  mov    %cx,%es
0x000f6bd4:  mov    %ax,%es:0xffa0
0x000f6bd8:  in     $0x70,%al
0x000f6bda:  mov    %al,%dl
0x000f6bdc:  test   %al,%al
0x000f6bde:  js     0xf6be8

----------------
IN: 
0x000f7d03:  mov    %ebx,%esi
0x000f7d06:  mov    %esp,%ebp
0x000f7d09:  mov    %ss,%eax
0x000f7d0c:  shl    $0x4,%eax
0x000f7d10:  add    %eax,%esp
0x000f7d13:  mov    $0xb5,%eax
0x000f7d19:  mov    $0x1234,%ecx
0x000f7d1f:  mov    $0xf7d2a,%ebx
0x000f7d25:  out    %al,$0xb2
0x000f7d27:  pause  

----------------
IN: 
0x000a8000:  mov    %cs,%ax
0x000a8002:  ljmp   $0xf000,$0xd069

----------------
IN: 
0x000f0167:  cmp    $0xb5,%al
0x000f0169:  jne    0xf0334

----------------
IN: 
0x000f016f:  cmp    $0x20000,%edx
0x000f0175:  jne    0xf0244

----------------
IN: 
0x000f017b:  lea    0x8(%esp),%edi
0x000f017f:  lea    0xffd0(%ebx),%esi
0x000f0185:  mov    $0x8,%ecx
0x000f018a:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f018a:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f018c:  mov    0xffdc(%ebx),%eax
0x000f0192:  mov    %eax,(%esp)
0x000f0195:  mov    0xffd4(%ebx),%eax
0x000f019b:  cmp    $0x1234,%eax
0x000f01a0:  lea    0x8(%esp),%edx
0x000f01a4:  lea    0xffd0(%ebx),%ecx
0x000f01aa:  mov    %ecx,0x4(%esp)
0x000f01ae:  jne    0xf01f7

----------------
IN: 
0x000f01b0:  lea    0xfe00(%ebx),%eax
0x000f01b6:  mov    %eax,0x4(%esp)
0x000f01ba:  lea    0x200(%ebx),%eax
0x000f01c0:  mov    $0x80,%ecx
0x000f01c5:  mov    %eax,%edi
0x000f01c7:  mov    0x4(%esp),%esi
0x000f01cb:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f01cb:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f01cd:  mov    $0x80,%ecx
0x000f01d2:  mov    0x4(%esp),%edi
0x000f01d6:  mov    %ebx,%esi
0x000f01d8:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f01d8:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f01da:  mov    $0x8,%ecx
0x000f01df:  lea    0xffd0(%ebx),%edi
0x000f01e5:  mov    %edx,%esi
0x000f01e7:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f01e7:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f01e9:  mov    (%esp),%eax
0x000f01ec:  mov    %eax,0xfff0(%ebx)
0x000f01f2:  jmp    0xf02d1

----------------
IN: 
0x000f02d1:  mov    $0x1,%eax
0x000f02d6:  call   0xe97c0

----------------
IN: 
0x000e97c0:  mov    %eax,%edx
0x000e97c2:  in     $0x92,%al
0x000e97c4:  mov    %al,%cl
0x000e97c6:  shr    %cl
0x000e97c8:  and    $0x1,%ecx
0x000e97cb:  and    $0x1,%edx
0x000e97ce:  cmp    %dl,%cl
0x000e97d0:  je     0xe97d7

----------------
IN: 
0x000e97d7:  mov    %cl,%al
0x000e97d9:  ret    

----------------
IN: 
0x000f02db:  movzbl %al,%eax
0x000f02de:  mov    %eax,0x400(%ebx)
0x000f02e4:  jmp    0xf0334

----------------
IN: 
0x000f7d2a:  mov    %esi,%eax
0x000f7d2c:  call   *%edi

----------------
IN: 
0x0ffbec71:  push   %ebp
0x0ffbec72:  push   %edi
0x0ffbec73:  push   %esi
0x0ffbec74:  push   %ebx
0x0ffbec75:  sub    $0xc,%esp
0x0ffbec78:  mov    %eax,%esi
0x0ffbec7a:  movzwl (%eax),%eax
0x0ffbec7d:  mov    %eax,%edi
0x0ffbec7f:  push   %eax
0x0ffbec80:  push   $0xf49c9
0x0ffbec85:  call   0xec4d8

----------------
IN: 
0x0ffbec8a:  pop    %eax
0x0ffbec8b:  pop    %edx
0x0ffbec8c:  cmp    $0x1,%di
0x0ffbec90:  je     0xffbee07

----------------
IN: 
0x0ffbec96:  cmp    $0x2,%di
0x0ffbec9a:  je     0xffbee3c

----------------
IN: 
0x0ffbeca0:  or     $0xffffffff,%ebx
0x0ffbeca3:  test   %di,%di
0x0ffbeca6:  jne    0xffbee4b

----------------
IN: 
0x0ffbecac:  mov    0x2(%esi),%ebx
0x0ffbecaf:  mov    0xa(%esi),%di
0x0ffbecb3:  mov    %edi,%eax
0x0ffbecb5:  and    $0x8,%ax
0x0ffbecb9:  mov    %ax,(%esp)
0x0ffbecbd:  je     0xffbeccb

----------------
IN: 
0x0ffbecbf:  mov    $0xffbfe84,%ebp
0x0ffbecc4:  mov    $0xffbfe88,%eax
0x0ffbecc9:  jmp    0xffbecd5

----------------
IN: 
0x0ffbecd5:  test   %ebx,%ebx
0x0ffbecd7:  jne    0xffbed1d

----------------
IN: 
0x0ffbed1d:  mov    0x6(%esi),%esi
0x0ffbed20:  mov    %ebx,%edx
0x0ffbed22:  shl    $0x4,%edx
0x0ffbed25:  test   %edx,%edx
0x0ffbed27:  jg     0xffbed30

----------------
IN: 
0x0ffbed30:  mov    $0x10,%ecx
0x0ffbed35:  test   $0x4,%edi
0x0ffbed3b:  je     0xffbed53

----------------
IN: 
0x0ffbed53:  and    $0x3,%edi
0x0ffbed56:  cmp    $0x2,%di
0x0ffbed5a:  je     0xffbed6e

----------------
IN: 
0x0ffbed5c:  cmp    $0x3,%di
0x0ffbed60:  je     0xffbedbe

----------------
IN: 
0x0ffbed62:  xor    %ebx,%ebx
0x0ffbed64:  dec    %di
0x0ffbed66:  jne    0xffbee4b

----------------
IN: 
0x0ffbed6c:  jmp    0xffbedd9

----------------
IN: 
0x0ffbedd9:  call   0xffadfb2

----------------
IN: 
0x0ffbedde:  mov    %eax,%ebx
0x0ffbede0:  test   %eax,%eax
0x0ffbede2:  je     0xffbed29

----------------
IN: 
0x0ffbede8:  cmp    $0xffffffff,%esi
0x0ffbedeb:  je     0xffbee4b

----------------
IN: 
0x0ffbee4b:  mov    %ebx,%eax
0x0ffbee4d:  add    $0xc,%esp
0x0ffbee50:  pop    %ebx
0x0ffbee51:  pop    %esi
0x0ffbee52:  pop    %edi
0x0ffbee53:  pop    %ebp
0x0ffbee54:  ret    

----------------
IN: 
0x000f7d2e:  mov    %eax,%esi
0x000f7d30:  mov    $0xb5,%eax
0x000f7d35:  mov    $0x5678,%ecx
0x000f7d3a:  mov    $0x7d44,%ebx
0x000f7d3f:  out    %al,$0xb2
0x000f7d41:  pause  

----------------
IN: 
0x000f01f7:  cmp    $0x5678,%eax
0x000f01fc:  jne    0xf0334

----------------
IN: 
0x000f0202:  lea    0xfe00(%ebx),%eax
0x000f0208:  lea    0x200(%ebx),%esi
0x000f020e:  mov    $0x80,%ecx
0x000f0213:  mov    %eax,%edi
0x000f0215:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f0215:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f0217:  mov    $0x8,%ecx
0x000f021c:  lea    0xffd0(%ebx),%edi
0x000f0222:  mov    %edx,%esi
0x000f0224:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f0224:  rep movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000f0226:  cmpl   $0x0,0x400(%ebx)
0x000f022d:  jne    0xf0236

----------------
IN: 
0x000f0236:  mov    (%esp),%eax
0x000f0239:  mov    %eax,0xfff0(%ebx)
0x000f023f:  jmp    0xf0334

----------------
IN: 
0x000f7d44:  mov    %ebp,%esp
0x000f7d47:  jmp    0xf7d90

----------------
IN: 
0x000f7d90:  calll  0xf7188

----------------
IN: 
0x000f7d96:  mov    %esi,%eax
0x000f7d99:  pop    %ebx
0x000f7d9b:  pop    %esi
0x000f7d9d:  pop    %edi
0x000f7d9f:  pop    %ebp
0x000f7da1:  retl   

----------------
IN: 
0x000fd0fe:  addr32 mov %ax,0x1c(%esp)
0x000fd103:  shr    $0x10,%eax
0x000fd107:  addr32 mov %ax,0x14(%esp)
0x000fd10c:  pop    %ds
0x000fd10d:  pop    %es
0x000fd10e:  pop    %edi
0x000fd110:  pop    %esi
0x000fd112:  pop    %ebp
0x000fd114:  pop    %ebx
0x000fd116:  pop    %edx
0x000fd118:  pop    %ecx
0x000fd11a:  pop    %eax
0x000fd11c:  popfl  

----------------
IN: 
0x000fd11e:  pop    %esp
0x000fd120:  lret   

----------------
IN: 
0x000c3d3f:  add    $0x10,%esp
0x000c3d43:  cli    
0x000c3d44:  cld    
0x000c3d45:  shl    $0x10,%edx
0x000c3d49:  movzwl %ax,%eax
0x000c3d4d:  mov    %edx,%ebx
0x000c3d50:  or     %eax,%ebx
0x000c3d53:  mov    %ebx,%eax
0x000c3d56:  pushf  
0x000c3d57:  add    $0xffffffff,%eax
0x000c3d5b:  popf   

----------------
IN: 
0x000c3d5c:  cmp    $0xfffffffd,%eax
0x000c3d60:  ja     0xc3dad

----------------
IN: 
0x000c3d62:  push   %ebx
0x000c3d64:  pushl  $0x58ed
0x000c3d6a:  push   %ax
0x000c3d6b:  call   0xc250d

----------------
IN: 
0x000c3d6e:  pop    %eax
0x000c3d70:  pop    %edx
0x000c3d72:  mov    %cs,%ax
0x000c3d74:  mov    %ax,%es
0x000c3d76:  shr    $0x4,%ebx
0x000c3d7a:  mov    %bx,%es:-0x6788
0x000c3d7f:  mov    %eax,%edx
0x000c3d82:  shl    $0x10,%edx
0x000c3d86:  mov    $0x5663,%eax
0x000c3d8c:  movzwl %ax,%eax
0x000c3d90:  or     %edx,%eax
0x000c3d93:  xor    %edx,%edx
0x000c3d96:  mov    %dx,%es
0x000c3d98:  mov    %eax,%es:0x40
0x000c3d9d:  jmp    0xc3dad

----------------
IN: 
0x000c3dad:  mov    %cs,%ax
0x000c3daf:  mov    %ax,%es
0x000c3db1:  mov    $0x1,%eax
0x000c3db7:  mov    %eax,%es:0x9870
0x000c3dbc:  xor    %eax,%eax
0x000c3dbf:  mov    %al,%es:0x6
0x000c3dc3:  mov    %cs:0x2,%al
0x000c3dc7:  movzbl %al,%edx
0x000c3dcb:  shl    $0x9,%edx
0x000c3dcf:  xor    %eax,%eax
0x000c3dd2:  xor    %ecx,%ecx
0x000c3dd5:  cmp    %ecx,%edx
0x000c3dd8:  je     0xc3de5

----------------
IN: 
0x000c3dda:  addr32 mov %es:(%ecx),%bl
0x000c3dde:  add    %ebx,%eax
0x000c3de1:  inc    %ecx
0x000c3de3:  jmp    0xc3dd5

----------------
IN: 
0x000c3dd5:  cmp    %ecx,%edx
0x000c3dd8:  je     0xc3de5

----------------
IN: 
0x000c3de5:  mov    %cs,%dx
0x000c3de7:  mov    %dx,%es
0x000c3de9:  neg    %eax
0x000c3dec:  mov    %al,%es:0x6
0x000c3df0:  lea    -0xc(%bp),%sp
0x000c3df3:  pop    %ebx
0x000c3df5:  pop    %esi
0x000c3df7:  pop    %edi
0x000c3df9:  pop    %ebp
0x000c3dfb:  ret    $0x2

----------------
IN: 
0x000c5617:  mov    %ebx,%esp
0x000c561a:  pop    %ds
0x000c561b:  pop    %es
0x000c561c:  pop    %edi
0x000c561e:  pop    %esi
0x000c5620:  pop    %ebp
0x000c5622:  pop    %ebx
0x000c5624:  pop    %edx
0x000c5626:  pop    %ecx
0x000c5628:  pop    %eax
0x000c562a:  lret   

----------------
IN: 
0x000ee557:  call   0xec1b3

----------------
IN: 
0x000ec1b3:  call   0xea062

----------------
IN: 
0x000ec1b8:  test   %eax,%eax
0x000ec1ba:  jne    0xec1c1

----------------
IN: 
0x000ec1bc:  jmp    0xec186

----------------
IN: 
0x000ee55c:  add    $0x34,%esp
0x000ee55f:  pop    %ebx
0x000ee560:  pop    %esi
0x000ee561:  pop    %edi
0x000ee562:  ret    

----------------
IN: 
0x0ffb50cb:  movzbl 0x2(%ebx),%ebx
0x0ffb50cf:  shl    $0x9,%ebx
0x0ffb50d2:  mov    %ebx,%eax
0x0ffb50d4:  call   0xffab9c9

----------------
IN: 
0x0ffb50d9:  test   %eax,%eax
0x0ffb50db:  jne    0xffb50f3

----------------
IN: 
0x0ffb50f3:  mov    0xffbfe60,%eax
0x0ffb50f8:  lea    0x7ff(%ebx,%eax,1),%eax
0x0ffb50ff:  and    $0xfffff800,%eax
0x0ffb5104:  mov    %eax,0xffbfe60
0x0ffb5109:  add    $0x28,%esp
0x0ffb510c:  pop    %ebx
0x0ffb510d:  pop    %esi
0x0ffb510e:  pop    %edi
0x0ffb510f:  pop    %ebp
0x0ffb5110:  ret    

----------------
IN: 
0x0ffb521e:  movzwl 0x4(%esp),%edx
0x0ffb5223:  or     $0xf0000000,%edx
0x0ffb5229:  cmp    0x64,%edx
0x0ffb522f:  setne  %dl
0x0ffb5232:  mov    0xc(%esp),%ecx
0x0ffb5236:  cmp    %ecx,0x8(%esp)
0x0ffb523a:  sete   %cl
0x0ffb523d:  and    %ecx,%edx
0x0ffb523f:  or     (%esp),%edi
0x0ffb5242:  sete   %cl
0x0ffb5245:  test   %cl,%dl
0x0ffb5247:  je     0xffb5284

----------------
IN: 
0x0ffb5284:  add    $0x28,%esp
0x0ffb5287:  pop    %ebx
0x0ffb5288:  pop    %esi
0x0ffb5289:  pop    %edi
0x0ffb528a:  pop    %ebp
0x0ffb528b:  ret    

----------------
IN: 
0x0ffbbd41:  jmp    0xffbbda8

----------------
IN: 
0x0ffbbda8:  xor    %ecx,%ecx
0x0ffbbdaa:  mov    $0x1,%edx
0x0ffbbdaf:  mov    $0xf3ff7,%eax
0x0ffbbdb4:  call   0xffb5111

----------------
IN: 
0x0ffb5111:  push   %ebp
0x0ffb5112:  push   %edi
0x0ffb5113:  push   %esi
0x0ffb5114:  push   %ebx
0x0ffb5115:  mov    %eax,%ebp
0x0ffb5117:  mov    %edx,%edi
0x0ffb5119:  mov    %ecx,%esi
0x0ffb511b:  xor    %ebx,%ebx
0x0ffb511d:  mov    %ebx,%edx
0x0ffb511f:  mov    %ebp,%eax
0x0ffb5121:  call   0xffaba53

----------------
IN: 
0x0ffaba53:  push   %edi
0x0ffaba54:  push   %esi
0x0ffaba55:  push   %ebx
0x0ffaba56:  mov    %eax,%esi
0x0ffaba58:  mov    %edx,%ebx
0x0ffaba5a:  call   0xe9960

----------------
IN: 
0x0ffaba5f:  mov    %eax,%edi
0x0ffaba61:  test   %ebx,%ebx
0x0ffaba63:  jne    0xffaba7f

----------------
IN: 
0x0ffaba65:  mov    0xffbfe5c,%ebx
0x0ffaba6b:  test   %ebx,%ebx
0x0ffaba6d:  je     0xffaba83

----------------
IN: 
0x0ffaba6f:  lea    0x4(%ebx),%edx
0x0ffaba72:  mov    %edi,%ecx
0x0ffaba74:  mov    %esi,%eax
0x0ffaba76:  call   0xffab68e

----------------
IN: 
0x0ffaba7b:  test   %eax,%eax
0x0ffaba7d:  je     0xffaba83

----------------
IN: 
0x0ffaba7f:  mov    (%ebx),%ebx
0x0ffaba81:  jmp    0xffaba6b

----------------
IN: 
0x0ffaba6b:  test   %ebx,%ebx
0x0ffaba6d:  je     0xffaba83

----------------
IN: 
0x0ffaba83:  mov    %ebx,%eax
0x0ffaba85:  pop    %ebx
0x0ffaba86:  pop    %esi
0x0ffaba87:  pop    %edi
0x0ffaba88:  ret    

----------------
IN: 
0x0ffb5126:  mov    %eax,%ebx
0x0ffb5128:  test   %eax,%eax
0x0ffb512a:  je     0xffb5158

----------------
IN: 
0x0ffb5158:  pop    %ebx
0x0ffb5159:  pop    %esi
0x0ffb515a:  pop    %edi
0x0ffb515b:  pop    %ebp
0x0ffb515c:  ret    

----------------
IN: 
0x0ffbbdb9:  xor    %eax,%eax
0x0ffbbdbb:  call   0xffab9c9

----------------
IN: 
0x0ffbbdc0:  cmpl   $0xc0000,0xffbfe60
0x0ffbbdca:  je     0xffbbdd6

----------------
IN: 
0x0ffbbdcc:  movl   $0xc0000,0xf54c4
0x0ffbbdd6:  xor    %edx,%edx
0x0ffbbdd8:  xor    %ecx,%ecx
0x0ffbbdda:  mov    $0xf175c,%eax
0x0ffbbddf:  call   0xffad81f

----------------
IN: 
0x0ffbbde4:  mov    %eax,%ebx
0x0ffbbde6:  test   %ax,%ax
0x0ffbbde9:  je     0xffbbe95

----------------
IN: 
0x0ffbbe95:  call   0xffb21bc

----------------
IN: 
0x0ffb21bc:  push   %ebp
0x0ffb21bd:  push   %edi
0x0ffb21be:  push   %esi
0x0ffb21bf:  push   %ebx
0x0ffb21c0:  sub    $0x60,%esp
0x0ffb21c3:  push   $0xf14ab
0x0ffb21c8:  call   0xec4d8

----------------
IN: 
0x0ffb21cd:  mov    $0x26,%ecx
0x0ffb21d2:  xor    %edx,%edx
0x0ffb21d4:  lea    0x3e(%esp),%eax
0x0ffb21d8:  call   0xeab7b

----------------
IN: 
0x0ffb21dd:  movw   $0x3,0x5a(%esp)
0x0ffb21e4:  call   0xffadb31

----------------
IN: 
0x0ffadb31:  push   %edx
0x0ffadb32:  movw   $0x200,0x24(%eax)
0x0ffadb38:  mov    %eax,(%esp)
0x0ffadb3b:  call   0xeb1c7

----------------
IN: 
0x0ffadb40:  mov    $0xfd05a,%edx
0x0ffadb45:  movzwl %dx,%edx
0x0ffadb48:  mov    (%esp),%eax
0x0ffadb4b:  call   0xec42f

----------------
IN: 
0x000ec42f:  mov    %dx,0x20(%eax)
0x000ec433:  movw   $0xf000,0x22(%eax)
0x000ec439:  movzwl 0xe97a0,%edx
0x000ec440:  mov    %edx,%ecx
0x000ec442:  shl    $0x4,%ecx
0x000ec445:  sub    %ecx,%eax
0x000ec447:  mov    $0xf8148,%ecx
0x000ec44c:  jmp    0xec0df

----------------
IN: 
0x000fd05a:  int    $0x10

----------------
IN: 
0x000c5663:  cli    
0x000c5664:  cld    
0x000c5665:  push   %ds
0x000c5666:  push   %eax
0x000c5668:  mov    $0x40,%ax
0x000c566b:  mov    %ax,%ds
0x000c566d:  testb  $0x40,0xb9
0x000c5672:  je     0xc570d

----------------
IN: 
0x000c570d:  pop    %eax
0x000c570f:  pop    %ds
0x000c5710:  jmp    0xc562b

----------------
IN: 
0x000c562b:  cli    
0x000c562c:  cld    
0x000c562d:  push   %eax
0x000c562f:  push   %ecx
0x000c5631:  push   %edx
0x000c5633:  push   %ebx
0x000c5635:  push   %ebp
0x000c5637:  push   %esi
0x000c5639:  push   %edi
0x000c563b:  push   %es
0x000c563c:  push   %ds
0x000c563d:  mov    %ss,%ax
0x000c563f:  mov    %ax,%ds
0x000c5641:  mov    %esp,%ebx
0x000c5644:  movzwl %sp,%esp
0x000c5648:  mov    %esp,%eax
0x000c564b:  push   %ax
0x000c564c:  call   0xc487c

----------------
IN: 
0x000c487c:  push   %ebp
0x000c487e:  mov    %esp,%ebp
0x000c4881:  push   %edi
0x000c4883:  push   %esi
0x000c4885:  push   %ebx
0x000c4887:  sub    $0x8,%esp
0x000c488b:  mov    %eax,%ebx
0x000c488e:  addr32 mov 0x1d(%eax),%al
0x000c4892:  cmp    $0xc,%al
0x000c4894:  je     0xc4bf5

----------------
IN: 
0x000c4898:  ja     0xc48fc

----------------
IN: 
0x000c489a:  cmp    $0x6,%al
0x000c489c:  je     0xc4acc

----------------
IN: 
0x000c48a0:  ja     0xc48ce

----------------
IN: 
0x000c48a2:  cmp    $0x3,%al
0x000c48a4:  je     0xc49f4

----------------
IN: 
0x000c48a8:  ja     0xc48bf

----------------
IN: 
0x000c48aa:  cmp    $0x1,%al
0x000c48ac:  je     0xc49d1

----------------
IN: 
0x000c48b0:  cmp    $0x2,%al
0x000c48b2:  je     0xc49e5

----------------
IN: 
0x000c48b6:  test   %al,%al
0x000c48b8:  je     0xc4971

----------------
IN: 
0x000c4971:  addr32 movzbl 0x1c(%ebx),%esi
0x000c4977:  mov    %esi,%ecx
0x000c497a:  and    $0x7f,%ecx
0x000c497e:  mov    %esi,%edi
0x000c4981:  and    $0x7f,%edi
0x000c4985:  mov    $0x40,%eax
0x000c498b:  mov    %ax,%es
0x000c498d:  mov    %es:0x89,%dl
0x000c4992:  and    $0xa,%edx
0x000c4996:  or     $0x1,%edx
0x000c499a:  addr32 cmpb $0x0,0x1c(%ebx)
0x000c499f:  jns    0xc49a4

----------------
IN: 
0x000c49a4:  mov    $0x20,%al
0x000c49a6:  and    $0x78,%esi
0x000c49aa:  jne    0xc49bc

----------------
IN: 
0x000c49ac:  cmp    $0x6,%cl
0x000c49af:  sete   %al
0x000c49b2:  dec    %eax
0x000c49b4:  and    $0xfffffff1,%eax
0x000c49b8:  add    $0x3f,%eax
0x000c49bc:  addr32 mov %al,0x1c(%ebx)
0x000c49c0:  mov    %edi,%eax
0x000c49c3:  lea    -0xc(%bp),%sp
0x000c49c6:  pop    %ebx
0x000c49c8:  pop    %esi
0x000c49ca:  pop    %edi
0x000c49cc:  pop    %ebp
0x000c49ce:  jmp    0xc3180

----------------
IN: 
0x000c3180:  push   %ebp
0x000c3182:  mov    %esp,%ebp
0x000c3185:  push   %edi
0x000c3187:  push   %esi
0x000c3189:  push   %ebx
0x000c318b:  sub    $0x14,%esp
0x000c318f:  addr32 mov %eax,-0x14(%ebp)
0x000c3194:  addr32 mov %edx,-0x10(%ebp)
0x000c3199:  push   %eax
0x000c319b:  pushl  $0x57cb
0x000c31a1:  push   %ax
0x000c31a2:  call   0xc250d

----------------
IN: 
0x000c31a5:  pop    %edx
0x000c31a7:  pop    %ecx
0x000c31a9:  addr32 mov -0x14(%ebp),%eax
0x000c31ae:  push   %ax
0x000c31af:  call   0xc2b1a

----------------
IN: 
0x000c2b1a:  push   %ebp
0x000c2b1c:  mov    %esp,%ebp
0x000c2b1f:  push   %ebx
0x000c2b21:  mov    %eax,%ecx
0x000c2b24:  mov    %cs:0x5b00,%edx
0x000c2b2a:  mov    %cs:0x5afc,%eax
0x000c2b2f:  test   %eax,%eax
0x000c2b32:  je     0xc2b63

----------------
IN: 
0x000c2b34:  imul   $0xe,%edx,%edx
0x000c2b38:  add    $0x5b20,%edx
0x000c2b3f:  mov    $0x5b20,%eax
0x000c2b45:  cmp    %edx,%eax
0x000c2b48:  jae    0xc2b63

----------------
IN: 
0x000c2b4a:  addr32 mov %cs:(%eax),%bx
0x000c2b4e:  movzwl %bx,%ebx
0x000c2b52:  cmp    %ebx,%ecx
0x000c2b55:  jne    0xc2b5d

----------------
IN: 
0x000c2b5d:  add    $0xe,%eax
0x000c2b61:  jmp    0xc2b45

----------------
IN: 
0x000c2b45:  cmp    %edx,%eax
0x000c2b48:  jae    0xc2b63

----------------
IN: 
0x000c2b63:  xor    %eax,%eax
0x000c2b66:  addr32 mov %cs:0x66e0(%eax),%dx
0x000c2b6e:  movzwl %dx,%edx
0x000c2b72:  cmp    %edx,%ecx
0x000c2b75:  jne    0xc2b7f

----------------
IN: 
0x000c2b7f:  add    $0x2c,%eax
0x000c2b83:  cmp    $0x2c0,%eax
0x000c2b89:  jne    0xc2b66

----------------
IN: 
0x000c2b66:  addr32 mov %cs:0x66e0(%eax),%dx
0x000c2b6e:  movzwl %dx,%edx
0x000c2b72:  cmp    %edx,%ecx
0x000c2b75:  jne    0xc2b7f

----------------
IN: 
0x000c2b77:  add    $0x66e2,%eax
0x000c2b7d:  jmp    0xc2b8e

----------------
IN: 
0x000c2b8e:  pop    %ebx
0x000c2b90:  pop    %ebp
0x000c2b92:  ret    $0x2

----------------
IN: 
0x000c31b2:  test   %eax,%eax
0x000c31b5:  je     0xc361f

----------------
IN: 
0x000c31b9:  mov    %eax,%esi
0x000c31bc:  mov    %cs:0x5afc,%eax
0x000c31c1:  test   %eax,%eax
0x000c31c4:  je     0xc31dd

----------------
IN: 
0x000c31c6:  mov    $0x4,%eax
0x000c31cc:  mov    $0x1ce,%edx
0x000c31d2:  out    %ax,(%dx)
0x000c31d3:  xor    %eax,%eax
0x000c31d6:  mov    $0x1cf,%edx
0x000c31dc:  out    %ax,(%dx)
0x000c31dd:  mov    %cs:0x5b00,%eax
0x000c31e2:  cmp    $0x5b22,%esi
0x000c31e9:  jb     0xc320e

----------------
IN: 
0x000c31eb:  dec    %eax
0x000c31ed:  imul   $0xe,%eax,%eax
0x000c31f1:  add    $0x5b22,%eax
0x000c31f7:  cmp    %eax,%esi
0x000c31fa:  ja     0xc320e

----------------
IN: 
0x000c320e:  addr32 mov -0x10(%ebp),%edx
0x000c3213:  mov    %esi,%eax
0x000c3216:  push   %ax
0x000c3217:  call   0xc28f1

----------------
IN: 
0x000c28f1:  push   %ebp
0x000c28f3:  mov    %esp,%ebp
0x000c28f6:  push   %edi
0x000c28f8:  push   %esi
0x000c28fa:  push   %ebx
0x000c28fc:  push   %ecx
0x000c28fe:  addr32 mov %edx,-0x10(%ebp)
0x000c2903:  cmp    $0x6976,%eax
0x000c2909:  ja     0xc2959

----------------
IN: 
0x000c290b:  mov    %eax,%ebx
0x000c290e:  cmp    $0x66e2,%eax
0x000c2914:  jb     0xc2959

----------------
IN: 
0x000c2916:  and    $0x8,%dl
0x000c2919:  jne    0xc29b3

----------------
IN: 
0x000c291d:  addr32 mov %cs:0xc(%eax),%al
0x000c2922:  mov    $0x3c6,%edx
0x000c2928:  out    %al,(%dx)
0x000c2929:  addr32 mov %cs:0xe(%ebx),%edi
0x000c292f:  addr32 mov %cs:0x12(%ebx),%ax
0x000c2934:  mov    $0x3,%ecx
0x000c293a:  xor    %edx,%edx
0x000c293d:  div    %cx
0x000c293f:  movzwl %ax,%esi
0x000c2943:  mov    %cs,%ax
0x000c2945:  movzwl %ax,%eax
0x000c2949:  push   %esi
0x000c294b:  xor    %ecx,%ecx
0x000c294e:  mov    %edi,%edx
0x000c2951:  push   %ax
0x000c2952:  call   0xc0c44

----------------
IN: 
0x000c0c44:  push   %ebp
0x000c0c46:  mov    %esp,%ebp
0x000c0c49:  push   %edi
0x000c0c4b:  push   %esi
0x000c0c4d:  push   %ebx
0x000c0c4f:  mov    %edx,%ebx
0x000c0c52:  addr32 mov 0x8(%ebp),%esi
0x000c0c57:  mov    %eax,%edi
0x000c0c5a:  mov    $0x3c8,%edx
0x000c0c60:  mov    %cl,%al
0x000c0c62:  out    %al,(%dx)
0x000c0c63:  mov    $0x3c9,%edx
0x000c0c69:  test   %esi,%esi
0x000c0c6c:  je     0xc0c89

----------------
IN: 
0x000c0c6e:  mov    %di,%es
0x000c0c70:  addr32 mov %es:(%ebx),%al
0x000c0c74:  out    %al,(%dx)
0x000c0c75:  addr32 mov %es:0x1(%ebx),%al
0x000c0c7a:  out    %al,(%dx)
0x000c0c7b:  addr32 mov %es:0x2(%ebx),%al
0x000c0c80:  out    %al,(%dx)
0x000c0c81:  add    $0x3,%ebx
0x000c0c85:  dec    %esi
0x000c0c87:  jmp    0xc0c69

----------------
IN: 
0x000c0c69:  test   %esi,%esi
0x000c0c6c:  je     0xc0c89

----------------
IN: 
0x000c0c89:  pop    %ebx
0x000c0c8b:  pop    %esi
0x000c0c8d:  pop    %edi
0x000c0c8f:  pop    %ebp
0x000c0c91:  ret    $0x2

----------------
IN: 
0x000c2955:  pop    %edx
0x000c2957:  jmp    0xc297a

----------------
IN: 
0x000c297a:  cmp    $0xff,%esi
0x000c2981:  jg     0xc299f

----------------
IN: 
0x000c2983:  mov    %cs,%ax
0x000c2985:  movzwl %ax,%eax
0x000c2989:  pushl  $0x1
0x000c298c:  mov    %esi,%ecx
0x000c298f:  mov    $0x5f48,%edx
0x000c2995:  push   %ax
0x000c2996:  call   0xc0c44

----------------
IN: 
0x000c2999:  pop    %eax
0x000c299b:  inc    %esi
0x000c299d:  jmp    0xc297a

----------------
IN: 
0x000c299f:  addr32 testb $0x2,-0x10(%ebp)
0x000c29a4:  je     0xc29b3

----------------
IN: 
0x000c29b3:  addr32 mov %cs:0x22(%ebx),%edi
0x000c29b9:  xor    %esi,%esi
0x000c29bc:  addr32 mov %cs:(%edi,%esi,1),%dl
0x000c29c1:  movzbl %dl,%edx
0x000c29c5:  mov    %esi,%eax
0x000c29c8:  push   %ax
0x000c29c9:  call   0xc0b1e

----------------
IN: 
0x000c0b1e:  push   %ebp
0x000c0b20:  mov    %esp,%ebp
0x000c0b23:  push   %esi
0x000c0b25:  push   %ebx
0x000c0b27:  mov    %al,%bl
0x000c0b29:  mov    %dl,%cl
0x000c0b2b:  mov    $0x3da,%edx
0x000c0b31:  in     (%dx),%al
0x000c0b32:  mov    $0x3c0,%edx
0x000c0b38:  in     (%dx),%al
0x000c0b39:  mov    %eax,%esi
0x000c0b3c:  mov    %bl,%al
0x000c0b3e:  out    %al,(%dx)
0x000c0b3f:  mov    %cl,%al
0x000c0b41:  out    %al,(%dx)
0x000c0b42:  mov    %esi,%eax
0x000c0b45:  out    %al,(%dx)
0x000c0b46:  pop    %ebx
0x000c0b48:  pop    %esi
0x000c0b4a:  pop    %ebp
0x000c0b4c:  ret    $0x2

----------------
IN: 
0x000c29cc:  inc    %esi
0x000c29ce:  cmp    $0x14,%esi
0x000c29d2:  jne    0xc29bc

----------------
IN: 
0x000c29bc:  addr32 mov %cs:(%edi,%esi,1),%dl
0x000c29c1:  movzbl %dl,%edx
0x000c29c5:  mov    %esi,%eax
0x000c29c8:  push   %ax
0x000c29c9:  call   0xc0b1e

----------------
IN: 
0x000c29d4:  xor    %edx,%edx
0x000c29d7:  mov    $0x14,%eax
0x000c29dd:  push   %ax
0x000c29de:  call   0xc0b1e

----------------
IN: 
0x000c29e1:  mov    $0x300,%eax
0x000c29e7:  mov    $0x3c4,%edx
0x000c29ed:  out    %ax,(%dx)
0x000c29ee:  addr32 mov %cs:0x16(%ebx),%esi
0x000c29f4:  mov    $0x1,%ecx
0x000c29fa:  addr32 mov %cs:-0x1(%esi,%ecx,1),%al
0x000c2a00:  shl    $0x8,%eax
0x000c2a04:  or     %ecx,%eax
0x000c2a07:  out    %ax,(%dx)
0x000c2a08:  inc    %ecx
0x000c2a0a:  cmp    $0x5,%ecx
0x000c2a0e:  jne    0xc29fa

----------------
IN: 
0x000c29fa:  addr32 mov %cs:-0x1(%esi,%ecx,1),%al
0x000c2a00:  shl    $0x8,%eax
0x000c2a04:  or     %ecx,%eax
0x000c2a07:  out    %ax,(%dx)
0x000c2a08:  inc    %ecx
0x000c2a0a:  cmp    $0x5,%ecx
0x000c2a0e:  jne    0xc29fa

----------------
IN: 
0x000c2a10:  addr32 mov %cs:0x26(%ebx),%esi
0x000c2a16:  xor    %ecx,%ecx
0x000c2a19:  mov    $0x3ce,%edx
0x000c2a1f:  addr32 mov %cs:(%esi,%ecx,1),%al
0x000c2a24:  shl    $0x8,%eax
0x000c2a28:  or     %ecx,%eax
0x000c2a2b:  out    %ax,(%dx)
0x000c2a2c:  inc    %ecx
0x000c2a2e:  cmp    $0x9,%ecx
0x000c2a32:  jne    0xc2a1f

----------------
IN: 
0x000c2a1f:  addr32 mov %cs:(%esi,%ecx,1),%al
0x000c2a24:  shl    $0x8,%eax
0x000c2a28:  or     %ecx,%eax
0x000c2a2b:  out    %ax,(%dx)
0x000c2a2c:  inc    %ecx
0x000c2a2e:  cmp    $0x9,%ecx
0x000c2a32:  jne    0xc2a1f

----------------
IN: 
0x000c2a34:  addr32 mov %cs:0x1a(%ebx),%al
0x000c2a39:  mov    %eax,%esi
0x000c2a3c:  mov    $0x3d4,%edx
0x000c2a42:  test   $0x1,%al
0x000c2a44:  jne    0xc2a4c

----------------
IN: 
0x000c2a4c:  mov    $0x11,%eax
0x000c2a52:  out    %ax,(%dx)
0x000c2a53:  addr32 mov %cs:0x1e(%ebx),%edi
0x000c2a59:  xor    %ecx,%ecx
0x000c2a5c:  addr32 mov %cs:(%edi,%ecx,1),%al
0x000c2a61:  shl    $0x8,%eax
0x000c2a65:  or     %ecx,%eax
0x000c2a68:  out    %ax,(%dx)
0x000c2a69:  inc    %ecx
0x000c2a6b:  cmp    $0x19,%ecx
0x000c2a6f:  jne    0xc2a5c

----------------
IN: 
0x000c2a5c:  addr32 mov %cs:(%edi,%ecx,1),%al
0x000c2a61:  shl    $0x8,%eax
0x000c2a65:  or     %ecx,%eax
0x000c2a68:  out    %ax,(%dx)
0x000c2a69:  inc    %ecx
0x000c2a6b:  cmp    $0x19,%ecx
0x000c2a6f:  jne    0xc2a5c

----------------
IN: 
0x000c2a71:  mov    $0x3c2,%edx
0x000c2a77:  mov    %esi,%eax
0x000c2a7a:  out    %al,(%dx)
0x000c2a7b:  mov    $0x3da,%edx
0x000c2a81:  in     (%dx),%al
0x000c2a82:  mov    $0x20,%al
0x000c2a84:  mov    $0x3c0,%edx
0x000c2a8a:  out    %al,(%dx)
0x000c2a8b:  addr32 mov -0x10(%ebp),%edi
0x000c2a90:  and    $0x8000,%edi
0x000c2a97:  jne    0xc2adb

----------------
IN: 
0x000c2a99:  addr32 mov %cs:(%ebx),%al
0x000c2a9d:  test   %al,%al
0x000c2a9f:  je     0xc2ab4

----------------
IN: 
0x000c2ab4:  addr32 mov %cs:0xa(%ebx),%ax
0x000c2ab9:  mov    %ax,%es
0x000c2abb:  mov    $0x4000,%ecx
0x000c2ac1:  mov    $0x720,%eax
0x000c2ac7:  jmp    0xc2ad9

----------------
IN: 
0x000c2ad9:  rep stos %ax,%es:(%di)

----------------
IN: 
0x000c2adb:  addr32 mov %cs:(%ebx),%al
0x000c2adf:  xor    %ebx,%ebx
0x000c2ae2:  test   %al,%al
0x000c2ae4:  jne    0xc2b09

----------------
IN: 
0x000c2ae6:  mov    %cs,%ax
0x000c2ae8:  movzwl %ax,%eax
0x000c2aec:  pushl  $0x10
0x000c2aef:  pushl  $0x0
0x000c2af2:  pushl  $0x0
0x000c2af5:  mov    $0x100,%ecx
0x000c2afb:  mov    $0x7260,%edx
0x000c2b01:  push   %ax
0x000c2b02:  call   0xc0772

----------------
IN: 
0x000c0772:  push   %ebp
0x000c0774:  mov    %esp,%ebp
0x000c0777:  push   %edi
0x000c0779:  push   %esi
0x000c077b:  push   %ebx
0x000c077d:  sub    $0x10,%esp
0x000c0781:  mov    %edx,%ebx
0x000c0784:  addr32 mov %ax,-0x10(%ebp)
0x000c0788:  addr32 mov %cx,-0x1a(%ebp)
0x000c078c:  mov    $0x3c4,%edx
0x000c0792:  mov    $0x100,%eax
0x000c0798:  out    %ax,(%dx)
0x000c0799:  mov    $0x402,%eax
0x000c079f:  out    %ax,(%dx)
0x000c07a0:  mov    $0x704,%eax
0x000c07a6:  out    %ax,(%dx)
0x000c07a7:  mov    $0x300,%eax
0x000c07ad:  out    %ax,(%dx)
0x000c07ae:  mov    $0x3ce,%edx
0x000c07b4:  mov    $0x204,%eax
0x000c07ba:  out    %ax,(%dx)
0x000c07bb:  mov    $0x5,%eax
0x000c07c1:  out    %ax,(%dx)
0x000c07c2:  mov    $0x406,%eax
0x000c07c8:  out    %ax,(%dx)
0x000c07c9:  addr32 movzbl 0xc(%ebp),%ecx
0x000c07cf:  addr32 movzbl 0x10(%ebp),%eax
0x000c07d5:  addr32 mov %eax,-0x14(%ebp)
0x000c07da:  mov    %ecx,%eax
0x000c07dd:  shl    $0xb,%eax
0x000c07e1:  and    $0x2000,%ax
0x000c07e4:  shl    $0xe,%ecx
0x000c07e8:  add    %ecx,%eax
0x000c07eb:  movzwl %ax,%eax
0x000c07ef:  addr32 movzwl 0x8(%ebp),%ecx
0x000c07f5:  shl    $0x5,%ecx
0x000c07f9:  add    %ecx,%eax
0x000c07fc:  addr32 mov %eax,-0x18(%ebp)
0x000c0801:  addr32 movw $0x0,-0xe(%ebp)
0x000c0807:  addr32 mov -0x1a(%ebp),%si
0x000c080b:  addr32 cmp %si,-0xe(%ebp)
0x000c080f:  je     0xc0844

----------------
IN: 
0x000c0811:  mov    $0xffffa000,%edi
0x000c0817:  mov    %di,%es
0x000c0819:  addr32 mov -0x14(%ebp),%ecx
0x000c081e:  mov    %ebx,%esi
0x000c0821:  addr32 mov -0x18(%ebp),%edi
0x000c0826:  addr32 mov -0x10(%ebp),%eax
0x000c082b:  mov    %ds,%dx
0x000c082d:  mov    %ax,%ds
0x000c082f:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c082f:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000c0831:  mov    %dx,%ds
0x000c0833:  addr32 incw -0xe(%ebp)
0x000c0837:  addr32 add -0x14(%ebp),%ebx
0x000c083c:  addr32 addl $0x20,-0x18(%ebp)
0x000c0842:  jmp    0xc0807

----------------
IN: 
0x000c0807:  addr32 mov -0x1a(%ebp),%si
0x000c080b:  addr32 cmp %si,-0xe(%ebp)
0x000c080f:  je     0xc0844

----------------
IN: 
0x000c0844:  mov    $0x3c4,%edx
0x000c084a:  mov    $0x100,%eax
0x000c0850:  out    %ax,(%dx)
0x000c0851:  mov    $0x302,%eax
0x000c0857:  out    %ax,(%dx)
0x000c0858:  mov    $0x304,%eax
0x000c085e:  out    %ax,(%dx)
0x000c085f:  mov    $0x300,%eax
0x000c0865:  out    %ax,(%dx)
0x000c0866:  mov    $0x3cc,%edx
0x000c086c:  in     (%dx),%al
0x000c086d:  mov    $0xe,%edx
0x000c0873:  test   $0x1,%al
0x000c0875:  jne    0xc087d

----------------
IN: 
0x000c087d:  mov    %edx,%eax
0x000c0880:  shl    $0x8,%eax
0x000c0884:  or     $0x6,%eax
0x000c0888:  mov    $0x3ce,%edx
0x000c088e:  out    %ax,(%dx)
0x000c088f:  mov    $0x4,%eax
0x000c0895:  out    %ax,(%dx)
0x000c0896:  mov    $0x1005,%eax
0x000c089c:  out    %ax,(%dx)
0x000c089d:  add    $0x10,%esp
0x000c08a1:  pop    %ebx
0x000c08a3:  pop    %esi
0x000c08a5:  pop    %edi
0x000c08a7:  pop    %ebp
0x000c08a9:  ret    $0x2

----------------
IN: 
0x000c2b05:  add    $0xc,%esp
0x000c2b09:  mov    %ebx,%eax
0x000c2b0c:  lea    -0xc(%bp),%sp
0x000c2b0f:  pop    %ebx
0x000c2b11:  pop    %esi
0x000c2b13:  pop    %edi
0x000c2b15:  pop    %ebp
0x000c2b17:  ret    $0x2

----------------
IN: 
0x000c321a:  test   %eax,%eax
0x000c321d:  jne    0xc3625

----------------
IN: 
0x000c3221:  jmp    0xc343e

----------------
IN: 
0x000c343e:  addr32 mov %cs:0x2(%esi),%ax
0x000c3443:  addr32 mov %ax,-0x1a(%ebp)
0x000c3447:  movzwl %ax,%eax
0x000c344b:  addr32 mov %eax,-0x18(%ebp)
0x000c3450:  addr32 mov %cs:0x4(%esi),%ax
0x000c3455:  addr32 mov %ax,-0x1c(%ebp)
0x000c3459:  movzwl %ax,%ecx
0x000c345d:  addr32 mov %cs:(%esi),%al
0x000c3461:  addr32 mov %al,-0x1d(%ebp)
0x000c3465:  addr32 mov %cs:0x8(%esi),%bl
0x000c346a:  mov    $0x40,%eax
0x000c3470:  addr32 cmpl $0xff,-0x14(%ebp)
0x000c3479:  jg     0xc3483

----------------
IN: 
0x000c347b:  mov    %ax,%es
0x000c347d:  addr32 mov -0x14(%ebp),%al
0x000c3481:  jmp    0xc3487

----------------
IN: 
0x000c3487:  mov    %al,%es:0x49
0x000c348b:  mov    $0x40,%edi
0x000c3491:  mov    %di,%es
0x000c3493:  addr32 mov -0x10(%ebp),%eax
0x000c3498:  and    $0xfe00,%ax
0x000c349b:  addr32 or -0x14(%ebp),%eax
0x000c34a0:  mov    %ax,%es:0xba
0x000c34a4:  mov    %di,%es
0x000c34a6:  mov    %si,%es:0xbc
0x000c34ab:  mov    %di,%es
0x000c34ad:  mov    %es:0xb9,%dl
0x000c34b2:  addr32 mov -0x10(%ebp),%eax
0x000c34b7:  shl    $0x6,%eax
0x000c34bb:  and    $0x40,%eax
0x000c34bf:  and    $0xffffffbf,%edx
0x000c34c3:  or     %edx,%eax
0x000c34c6:  mov    %al,%es:0xb9
0x000c34ca:  addr32 cmpb $0x0,-0x1d(%ebp)
0x000c34cf:  jne    0xc34f1

----------------
IN: 
0x000c34d1:  mov    %di,%es
0x000c34d3:  addr32 mov -0x1a(%ebp),%ax
0x000c34d7:  mov    %ax,%es:0x4a
0x000c34db:  mov    %di,%es
0x000c34dd:  addr32 mov -0x1c(%ebp),%al
0x000c34e1:  dec    %eax
0x000c34e3:  mov    %al,%es:0x84
0x000c34e7:  mov    %di,%es
0x000c34e9:  mov    $0x607,%eax
0x000c34ef:  jmp    0xc3523

----------------
IN: 
0x000c3523:  mov    %ax,%es:0x60
0x000c3527:  addr32 movzbl -0x1d(%ebp),%eax
0x000c352d:  addr32 mov -0x18(%ebp),%edx
0x000c3532:  push   %ax
0x000c3533:  call   0xc002f

----------------
IN: 
0x000c3536:  mov    $0x40,%ecx
0x000c353c:  mov    %cx,%es
0x000c353e:  mov    %ax,%es:0x4c
0x000c3542:  push   %ax
0x000c3543:  call   0xc08ac

----------------
IN: 
0x000c08ac:  mov    $0x3cc,%edx
0x000c08b2:  in     (%dx),%al
0x000c08b3:  mov    %al,%dl
0x000c08b5:  mov    $0x3b4,%eax
0x000c08bb:  and    $0x1,%dl
0x000c08be:  je     0xc08c6

----------------
IN: 
0x000c08c0:  mov    $0x3d4,%eax
0x000c08c6:  ret    $0x2

----------------
IN: 
0x000c3546:  mov    %cx,%es
0x000c3548:  mov    %ax,%es:0x63
0x000c354c:  mov    %cx,%es
0x000c354e:  movzbl %bl,%eax
0x000c3552:  mov    %ax,%es:0x85
0x000c3556:  mov    %cx,%es
0x000c3558:  addr32 mov -0x10(%ebp),%eax
0x000c355d:  sar    $0x8,%eax
0x000c3561:  and    $0xffffff80,%eax
0x000c3565:  or     $0x60,%eax
0x000c3569:  mov    %al,%es:0x87
0x000c356d:  mov    %cx,%es
0x000c356f:  mov    $0xf9,%al
0x000c3571:  mov    %al,%es:0x88
0x000c3575:  mov    %cx,%es
0x000c3577:  mov    %es:0x89,%al
0x000c357b:  and    $0x7f,%eax
0x000c357f:  mov    %al,%es:0x89
0x000c3583:  xor    %eax,%eax
0x000c3586:  xor    %edx,%edx
0x000c3589:  mov    %cx,%es
0x000c358b:  addr32 mov %dx,%es:0x50(%eax,%eax,1)
0x000c3591:  inc    %eax
0x000c3593:  cmp    $0x8,%eax
0x000c3597:  jne    0xc3589

----------------
IN: 
0x000c3589:  mov    %cx,%es
0x000c358b:  addr32 mov %dx,%es:0x50(%eax,%eax,1)
0x000c3591:  inc    %eax
0x000c3593:  cmp    $0x8,%eax
0x000c3597:  jne    0xc3589

----------------
IN: 
0x000c3599:  mov    %cx,%es
0x000c359b:  mov    %dx,%es:0x4e
0x000c35a0:  mov    %cx,%es
0x000c35a2:  xor    %eax,%eax
0x000c35a5:  mov    %al,%es:0x62
0x000c35a9:  mov    %cs,%cx
0x000c35ab:  shl    $0x10,%ecx
0x000c35af:  mov    $0x9460,%eax
0x000c35b5:  movzwl %ax,%eax
0x000c35b9:  or     %ecx,%eax
0x000c35bc:  mov    %dx,%es
0x000c35be:  mov    %eax,%es:0x7c
0x000c35c3:  cmp    $0xe,%bl
0x000c35c6:  je     0xc35f2

----------------
IN: 
0x000c35c8:  cmp    $0x10,%bl
0x000c35cb:  je     0xc3600

----------------
IN: 
0x000c3600:  mov    %cs,%cx
0x000c3602:  shl    $0x10,%ecx
0x000c3606:  mov    $0x7260,%eax
0x000c360c:  movzwl %ax,%eax
0x000c3610:  or     %ecx,%eax
0x000c3613:  mov    %dx,%es
0x000c3615:  mov    %eax,%es:0x10c
0x000c361a:  xor    %eax,%eax
0x000c361d:  jmp    0xc3625

----------------
IN: 
0x000c3625:  lea    -0xc(%bp),%sp
0x000c3628:  pop    %ebx
0x000c362a:  pop    %esi
0x000c362c:  pop    %edi
0x000c362e:  pop    %ebp
0x000c3630:  ret    $0x2

----------------
IN: 
0x000c564f:  mov    %ebx,%esp
0x000c5652:  pop    %ds
0x000c5653:  pop    %es
0x000c5654:  pop    %edi
0x000c5656:  pop    %esi
0x000c5658:  pop    %ebp
0x000c565a:  pop    %ebx
0x000c565c:  pop    %edx
0x000c565e:  pop    %ecx
0x000c5660:  pop    %eax
0x000c5662:  iret   

----------------
IN: 
0x000fd05c:  lret   

----------------
IN: 
0x0ffadb50:  pop    %ecx
0x0ffadb51:  jmp    0xec1b3

----------------
IN: 
0x0ffb21e9:  push   $0xf51d0
0x0ffb21ee:  push   $0xf047f
0x0ffb21f3:  call   0xee44a

----------------
IN: 
0x000ee44a:  lea    0x8(%esp),%ecx
0x000ee44e:  mov    0x4(%esp),%edx
0x000ee452:  mov    $0xf5164,%eax
0x000ee457:  call   0xebd11

----------------
IN: 
0x000ec4a5:  push   %ebx
0x000ec4a6:  mov    %edx,%ebx
0x000ec4a8:  cmpl   $0x0,0xf54c8
0x000ec4af:  je     0xec4c0

----------------
IN: 
0x000ec4b1:  mov    %dl,%al
0x000ec4b3:  mov    0xf6034,%dx
0x000ec4ba:  test   %dx,%dx
0x000ec4bd:  je     0xec4c0

----------------
IN: 
0x000ec4c0:  cmp    $0xa,%bl
0x000ec4c3:  jne    0xec4cf

----------------
IN: 
0x000ec4cf:  movsbl %bl,%eax
0x000ec4d2:  pop    %ebx
0x000ec4d3:  jmp    0xec451

----------------
IN: 
0x000ec451:  mov    $0xff065,%edx
0x000ec456:  movzwl %dx,%edx
0x000ec459:  or     $0xf0000000,%edx
0x000ec45f:  cmp    %edx,0x40
0x000ec465:  je     0xec4a4

----------------
IN: 
0x000ec467:  push   %ebx
0x000ec468:  sub    $0x28,%esp
0x000ec46b:  mov    %eax,%ebx
0x000ec46d:  mov    $0x26,%ecx
0x000ec472:  xor    %edx,%edx
0x000ec474:  lea    0x2(%esp),%eax
0x000ec478:  call   0xeab7b

----------------
IN: 
0x000ec47d:  movw   $0x200,0x26(%esp)
0x000ec484:  movb   $0xe,0x1f(%esp)
0x000ec489:  mov    %bl,0x1e(%esp)
0x000ec48d:  movb   $0x7,0x12(%esp)
0x000ec492:  mov    $0xfd05a,%edx
0x000ec497:  movzwl %dx,%edx
0x000ec49a:  call   0xec42f

----------------
IN: 
0x000c5676:  mov    %cs:-0x6788,%ds
0x000c567b:  mov    $0x1d0,%eax
0x000c5681:  addr32 popl 0x1c(%eax)
0x000c5686:  addr32 popw (%eax)
0x000c5689:  addr32 mov %edi,0x4(%eax)
0x000c568e:  addr32 mov %esi,0x8(%eax)
0x000c5693:  addr32 mov %ebp,0xc(%eax)
0x000c5698:  addr32 mov %ebx,0x10(%eax)
0x000c569d:  addr32 mov %edx,0x14(%eax)
0x000c56a2:  addr32 mov %ecx,0x18(%eax)
0x000c56a7:  addr32 mov %es,0x2(%eax)
0x000c56ab:  addr32 mov %esp,0x28(%eax)
0x000c56b0:  addr32 mov %ss,0x2c(%eax)
0x000c56b4:  addr32 popl 0x20(%eax)
0x000c56b9:  addr32 popw 0x24(%eax)
0x000c56bd:  mov    %ds,%dx
0x000c56bf:  mov    %dx,%ss

----------------
IN: 
0x000c56c1:  mov    %eax,%esp

----------------
IN: 
0x000c56c4:  push   %ax
0x000c56c5:  call   0xc487c

----------------
IN: 
0x000c48fc:  cmp    $0x12,%al
0x000c48fe:  je     0xc5243

----------------
IN: 
0x000c4902:  ja     0xc493d

----------------
IN: 
0x000c4904:  cmp    $0xf,%al
0x000c4906:  je     0xc4c2c

----------------
IN: 
0x000c490a:  ja     0xc492e

----------------
IN: 
0x000c490c:  cmp    $0xd,%al
0x000c490e:  je     0xc4c15

----------------
IN: 
0x000c4912:  cmp    $0xe,%al
0x000c4914:  jne    0xc5590

----------------
IN: 
0x000c4918:  addr32 mov 0x1c(%ebx),%dl
0x000c491c:  addr32 mov 0x10(%ebx),%al
0x000c4920:  lea    -0xc(%bp),%sp
0x000c4923:  pop    %ebx
0x000c4925:  pop    %esi
0x000c4927:  pop    %edi
0x000c4929:  pop    %ebp
0x000c492b:  jmp    0xc2402

----------------
IN: 
0x000c2402:  push   %ebp
0x000c2404:  mov    %esp,%ebp
0x000c2407:  sub    $0x8,%esp
0x000c240b:  mov    %al,%cl
0x000c240d:  addr32 mov %dl,-0x5(%ebp)
0x000c2411:  mov    $0x40,%eax
0x000c2417:  mov    %ax,%es
0x000c2419:  mov    %es:0x62,%al
0x000c241d:  movzbl %al,%eax
0x000c2421:  push   %ax
0x000c2422:  call   0xc0dde

----------------
IN: 
0x000c0dde:  cmp    $0x7,%al
0x000c0de0:  jbe    0xc0de8

----------------
IN: 
0x000c0de8:  mov    $0x40,%edx
0x000c0dee:  mov    %dx,%es
0x000c0df0:  movzbl %al,%eax
0x000c0df4:  addr32 mov %es:0x50(%eax,%eax,1),%dx
0x000c0dfa:  shl    $0x10,%eax
0x000c0dfe:  movzwl %dx,%edx
0x000c0e02:  or     %edx,%eax
0x000c0e05:  ret    $0x2

----------------
IN: 
0x000c2425:  addr32 mov %eax,-0x4(%ebp)
0x000c242a:  pushl  $0x0
0x000c242d:  addr32 mov -0x5(%ebp),%dl
0x000c2431:  mov    %ebp,%eax
0x000c2434:  pushf  
0x000c2435:  add    $0xfffffffc,%eax
0x000c2439:  popf   

----------------
IN: 
0x000c243a:  push   %ax
0x000c243b:  call   0xc2343

----------------
IN: 
0x000c2343:  push   %ebp
0x000c2345:  mov    %esp,%ebp
0x000c2348:  push   %esi
0x000c234a:  push   %ebx
0x000c234c:  push   %ebx
0x000c234e:  mov    %eax,%ebx
0x000c2351:  cmp    $0xa,%dl
0x000c2354:  je     0xc237d

----------------
IN: 
0x000c2356:  ja     0xc2364

----------------
IN: 
0x000c2364:  cmp    $0xd,%dl
0x000c2367:  jne    0xc2383

----------------
IN: 
0x000c2383:  addr32 mov 0x8(%ebp),%al
0x000c2387:  push   %eax
0x000c2389:  mov    %ebx,%eax
0x000c238c:  push   %ax
0x000c238d:  call   0xc1d32

----------------
IN: 
0x000c1d32:  push   %ebp
0x000c1d34:  mov    %esp,%ebp
0x000c1d37:  push   %edi
0x000c1d39:  push   %esi
0x000c1d3b:  push   %ebx
0x000c1d3d:  push   %ebx
0x000c1d3f:  mov    %eax,%ebx
0x000c1d42:  addr32 mov %dl,-0xd(%ebp)
0x000c1d46:  mov    %ecx,%esi
0x000c1d49:  addr32 mov (%eax),%al
0x000c1d4c:  addr32 mov %al,-0xe(%ebp)
0x000c1d50:  addr32 mov 0x1(%ebx),%dl
0x000c1d54:  addr32 mov 0x2(%ebx),%cl
0x000c1d58:  mov    $0x40,%eax
0x000c1d5e:  mov    %ax,%es
0x000c1d60:  mov    %es:0xbc,%di
0x000c1d65:  test   %di,%di
0x000c1d67:  je     0xc1dc9

----------------
IN: 
0x000c1d69:  movzwl %di,%edi
0x000c1d6d:  addr32 mov %cs:(%edi),%al
0x000c1d71:  test   %al,%al
0x000c1d73:  je     0xc1d90

----------------
IN: 
0x000c1d90:  addr32 mov -0xe(%ebp),%al
0x000c1d94:  push   %ax
0x000c1d95:  call   0xc183f

----------------
IN: 
0x000c183f:  push   %ebp
0x000c1841:  mov    %esp,%ebp
0x000c1844:  push   %esi
0x000c1846:  push   %ebx
0x000c1848:  movzbl %dl,%ebx
0x000c184c:  mov    $0x40,%edx
0x000c1852:  mov    %dx,%es
0x000c1854:  mov    %es:0x4a,%dx
0x000c1859:  mov    %es:0x4c,%si
0x000c185e:  movzwl %si,%esi
0x000c1862:  movzbl %cl,%ecx
0x000c1866:  imul   %ecx,%esi
0x000c186a:  movzbl %al,%eax
0x000c186e:  add    %eax,%eax
0x000c1871:  add    %eax,%esi
0x000c1874:  movzwl %dx,%edx
0x000c1878:  imul   %ebx,%edx
0x000c187c:  add    %edx,%edx
0x000c187f:  mov    %edx,%eax
0x000c1882:  pushf  
0x000c1883:  add    %esi,%eax
0x000c1886:  popf   

----------------
IN: 
0x000c1887:  pop    %ebx
0x000c1889:  pop    %esi
0x000c188b:  pop    %ebp
0x000c188d:  ret    $0x2

----------------
IN: 
0x000c1d98:  mov    %eax,%edx
0x000c1d9b:  addr32 mov %cs:0xa(%edi),%ax
0x000c1da0:  addr32 cmpb $0x0,0x8(%ebp)
0x000c1da5:  je     0xc1dbf

----------------
IN: 
0x000c1dbf:  mov    %ax,%es
0x000c1dc1:  addr32 mov -0xd(%ebp),%al
0x000c1dc5:  addr32 mov %al,%es:(%edx)
0x000c1dc9:  addr32 mov (%ebx),%al
0x000c1dcc:  inc    %eax
0x000c1dce:  addr32 mov %al,(%ebx)
0x000c1dd1:  mov    $0x40,%edx
0x000c1dd7:  mov    %dx,%es
0x000c1dd9:  mov    %es:0x4a,%dx
0x000c1dde:  movzbl %al,%eax
0x000c1de2:  cmp    %dx,%ax
0x000c1de4:  jne    0xc1dee

----------------
IN: 
0x000c1dee:  lea    -0xc(%bp),%sp
0x000c1df1:  pop    %ebx
0x000c1df3:  pop    %esi
0x000c1df5:  pop    %edi
0x000c1df7:  pop    %ebp
0x000c1df9:  ret    $0x2

----------------
IN: 
0x000c2390:  pop    %eax
0x000c2392:  mov    $0x40,%edx
0x000c2398:  mov    %dx,%es
0x000c239a:  mov    %es:0x84,%al
0x000c239e:  mov    %eax,%esi
0x000c23a1:  addr32 mov 0x1(%ebx),%al
0x000c23a5:  mov    %esi,%ecx
0x000c23a8:  cmp    %al,%cl
0x000c23aa:  jae    0xc23f6

----------------
IN: 
0x000c23f6:  lea    -0x8(%bp),%sp
0x000c23f9:  pop    %ebx
0x000c23fb:  pop    %esi
0x000c23fd:  pop    %ebp
0x000c23ff:  ret    $0x2

----------------
IN: 
0x000c243e:  pop    %eax
0x000c2440:  addr32 mov -0x2(%ebp),%cl
0x000c2444:  addr32 mov -0x3(%ebp),%dl
0x000c2448:  addr32 mov -0x4(%ebp),%al
0x000c244c:  push   %ax
0x000c244d:  call   0xc1890

----------------
IN: 
0x000c1890:  push   %ebp
0x000c1892:  mov    %esp,%ebp
0x000c1895:  push   %edi
0x000c1897:  push   %esi
0x000c1899:  push   %ebx
0x000c189b:  push   %ebx
0x000c189d:  addr32 mov %al,-0xd(%ebp)
0x000c18a1:  movzbl %cl,%ebx
0x000c18a5:  cmp    $0x7,%bl
0x000c18a8:  ja     0xc1917

----------------
IN: 
0x000c18aa:  mov    %edx,%esi
0x000c18ad:  mov    $0x40,%eax
0x000c18b3:  mov    %ax,%es
0x000c18b5:  mov    %es:0x62,%al
0x000c18b9:  cmp    %bl,%al
0x000c18bb:  jne    0xc18fc

----------------
IN: 
0x000c18bd:  mov    %bl,%cl
0x000c18bf:  addr32 mov -0xd(%ebp),%al
0x000c18c3:  push   %ax
0x000c18c4:  call   0xc183f

----------------
IN: 
0x000c18c7:  mov    %eax,%edi
0x000c18ca:  push   %ax
0x000c18cb:  call   0xc08ac

----------------
IN: 
0x000c18ce:  mov    %eax,%ecx
0x000c18d1:  mov    %edi,%eax
0x000c18d4:  mov    $0x2,%edi
0x000c18da:  cltd   
0x000c18dc:  idiv   %edi
0x000c18df:  mov    %eax,%edi
0x000c18e2:  and    $0xff00,%eax
0x000c18e8:  or     $0xe,%eax
0x000c18ec:  mov    %ecx,%edx
0x000c18ef:  out    %ax,(%dx)
0x000c18f0:  mov    %edi,%eax
0x000c18f3:  shl    $0x8,%eax
0x000c18f7:  or     $0xf,%eax
0x000c18fb:  out    %ax,(%dx)
0x000c18fc:  mov    $0x40,%eax
0x000c1902:  mov    %ax,%es
0x000c1904:  shl    $0x8,%esi
0x000c1908:  addr32 movzbl -0xd(%ebp),%edi
0x000c190e:  or     %edi,%esi
0x000c1911:  addr32 mov %si,%es:0x50(%ebx,%ebx,1)
0x000c1917:  pop    %eax
0x000c1919:  pop    %ebx
0x000c191b:  pop    %esi
0x000c191d:  pop    %edi
0x000c191f:  pop    %ebp
0x000c1921:  ret    $0x2

----------------
IN: 
0x000c2450:  mov    %ebp,%esp
0x000c2453:  pop    %ebp
0x000c2455:  ret    $0x2

----------------
IN: 
0x000c56c8:  mov    %esp,%eax
0x000c56cb:  addr32 mov 0x2c(%eax),%ss

----------------
IN: 
0x000c56cf:  addr32 mov 0x28(%eax),%esp

----------------
IN: 
0x000c56d4:  pop    %edx
0x000c56d6:  pop    %dx
0x000c56d7:  addr32 pushw 0x24(%eax)
0x000c56db:  addr32 pushl 0x20(%eax)
0x000c56e0:  addr32 mov 0x4(%eax),%edi
0x000c56e5:  addr32 mov 0x8(%eax),%esi
0x000c56ea:  addr32 mov 0xc(%eax),%ebp
0x000c56ef:  addr32 mov 0x10(%eax),%ebx
0x000c56f4:  addr32 mov 0x14(%eax),%edx
0x000c56f9:  addr32 mov 0x18(%eax),%ecx
0x000c56fe:  addr32 mov 0x2(%eax),%es
0x000c5702:  addr32 pushl 0x1c(%eax)
0x000c5707:  addr32 mov (%eax),%ds
0x000c570a:  pop    %eax
0x000c570c:  iret   

----------------
IN: 
0x000ec49f:  add    $0x28,%esp
0x000ec4a2:  pop    %ebx
0x000ec4a3:  ret    

----------------
IN: 
0x000ec4c5:  mov    $0xd,%eax
0x000ec4ca:  call   0xec451

----------------
IN: 
0x000c2369:  addr32 movb $0x0,(%eax)
0x000c236d:  jmp    0xc2392

----------------
IN: 
0x000c2392:  mov    $0x40,%edx
0x000c2398:  mov    %dx,%es
0x000c239a:  mov    %es:0x84,%al
0x000c239e:  mov    %eax,%esi
0x000c23a1:  addr32 mov 0x1(%ebx),%al
0x000c23a5:  mov    %esi,%ecx
0x000c23a8:  cmp    %al,%cl
0x000c23aa:  jae    0xc23f6

----------------
IN: 
0x000c237d:  addr32 incb 0x1(%eax)
0x000c2381:  jmp    0xc2392

----------------
IN: 
0x000ee45c:  ret    

----------------
IN: 
0x0ffb21f8:  mov    0xffbff1c,%esi
0x0ffb21fe:  xor    %edx,%edx
0x0ffb2200:  mov    %esi,%eax
0x0ffb2202:  call   0xffabcb8

----------------
IN: 
0x0ffb2207:  mov    %eax,%ebx
0x0ffb2209:  add    $0xc,%esp
0x0ffb220c:  test   %ebx,%ebx
0x0ffb220e:  je     0xffb2347

----------------
IN: 
0x0ffb2214:  cmpb   $0x1,(%ebx)
0x0ffb2217:  jne    0xffb2337

----------------
IN: 
0x0ffb2337:  mov    %ebx,%edx
0x0ffb2339:  mov    %esi,%eax
0x0ffb233b:  call   0xffabcb8

----------------
IN: 
0x0ffb2340:  mov    %eax,%ebx
0x0ffb2342:  jmp    0xffb220c

----------------
IN: 
0x0ffb220c:  test   %ebx,%ebx
0x0ffb220e:  je     0xffb2347

----------------
IN: 
0x0ffb221d:  cmpb   $0x17,0x1(%ebx)
0x0ffb2221:  jbe    0xffb2337

----------------
IN: 
0x0ffb2227:  movl   $0x0,0x2a(%esp)
0x0ffb222f:  lea    0x2e(%esp),%edi
0x0ffb2233:  mov    $0x3,%ecx
0x0ffb2238:  xor    %eax,%eax
0x0ffb223a:  rep stos %eax,%es:(%edi)

----------------
IN: 
0x0ffb223a:  rep stos %eax,%es:(%edi)

----------------
IN: 
0x0ffb223c:  lea    0x8(%ebx),%eax
0x0ffb223f:  mov    $0x10,%ecx
0x0ffb2244:  lea    0x2a(%esp),%edx
0x0ffb2248:  call   0xffab68e

----------------
IN: 
0x0ffb224d:  test   %eax,%eax
0x0ffb224f:  je     0xffb2347

----------------
IN: 
0x0ffb2347:  add    $0x60,%esp
0x0ffb234a:  pop    %ebx
0x0ffb234b:  pop    %esi
0x0ffb234c:  pop    %edi
0x0ffb234d:  pop    %ebp
0x0ffb234e:  ret    

----------------
IN: 
0x0ffbbe9a:  call   0xea062

----------------
IN: 
0x0ffbbe9f:  test   %eax,%eax
0x0ffbbea1:  jne    0xffbbead

----------------
IN: 
0x0ffbbea3:  call   0xffb881c

----------------
IN: 
0x0ffb881c:  push   %ebp
0x0ffb881d:  push   %edi
0x0ffb881e:  push   %esi
0x0ffb881f:  push   %ebx
0x0ffb8820:  sub    $0x14,%esp
0x0ffb8823:  mov    $0x64,%edx
0x0ffb8828:  xor    %ecx,%ecx
0x0ffb882a:  mov    $0xf3501,%eax
0x0ffb882f:  call   0xffad81f

----------------
IN: 
0x0ffb8834:  mov    %eax,0xffbff44
0x0ffb8839:  mov    0xffbfde8,%eax
0x0ffb883e:  lea    -0x4(%eax),%ebx
0x0ffb8841:  cmp    $0xfffffffc,%ebx
0x0ffb8844:  je     0xffb88a4

----------------
IN: 
0x0ffb8846:  movzwl 0x14(%ebx),%eax
0x0ffb884a:  shl    $0x8,%eax
0x0ffb884d:  movzbl 0x16(%ebx),%edx
0x0ffb8851:  or     %edx,%eax
0x0ffb8853:  cmp    $0xc0330,%eax
0x0ffb8858:  jne    0xffb889c

----------------
IN: 
0x0ffb889c:  mov    0x4(%ebx),%ebx
0x0ffb889f:  sub    $0x4,%ebx
0x0ffb88a2:  jmp    0xffb8841

----------------
IN: 
0x0ffb8841:  cmp    $0xfffffffc,%ebx
0x0ffb8844:  je     0xffb88a4

----------------
IN: 
0x0ffb88a4:  mov    $0xd10,%edx
0x0ffb88a9:  xor    %eax,%eax
0x0ffb88ab:  call   0xffb26fa

----------------
IN: 
0x0ffb26fa:  push   %ebp
0x0ffb26fb:  push   %edi
0x0ffb26fc:  push   %esi
0x0ffb26fd:  push   %ebx
0x0ffb26fe:  sub    $0x10,%esp
0x0ffb2701:  mov    %eax,%ebx
0x0ffb2703:  movw   $0x410c,0x1(%esp)
0x0ffb270a:  movb   $0xd0,0x3(%esp)
0x0ffb270f:  mov    %edx,%eax
0x0ffb2711:  xchg   %ah,%al
0x0ffb2713:  mov    %ax,0x4(%esp)
0x0ffb2718:  movzwl %dx,%edx
0x0ffb271b:  push   %edx
0x0ffb271c:  push   $0xf15e7
0x0ffb2721:  push   $0xa
0x0ffb2723:  lea    0x12(%esp),%edi
0x0ffb2727:  push   %edi
0x0ffb2728:  call   0xffb244c

----------------
IN: 
0x000ebd7e:  cmp    $0x2e,%al
0x000ebd80:  je     0xebf1e

----------------
IN: 
0x000ebd86:  jg     0xebda1

----------------
IN: 
0x000ebda1:  cmp    $0x58,%al
0x000ebda3:  je     0xebebc

----------------
IN: 
0x000e9866:  lea    0x37(%edx),%ebx
0x000e9869:  movsbl %bl,%edx
0x000e986c:  pop    %ebx
0x000e986d:  jmp    0xe9803

----------------
IN: 
0x0ffb272d:  mov    %eax,%esi
0x0ffb272f:  add    $0x10,%esp
0x0ffb2732:  test   %ebx,%ebx
0x0ffb2734:  jne    0xffb2747

----------------
IN: 
0x0ffb2736:  mov    0xffbfbf0,%ebx
0x0ffb273c:  test   %ebx,%ebx
0x0ffb273e:  je     0xffb2771

----------------
IN: 
0x0ffb2740:  mov    0x18(%ebx),%ebp
0x0ffb2743:  test   %ebp,%ebp
0x0ffb2745:  jne    0xffb274b

----------------
IN: 
0x0ffb2747:  mov    (%ebx),%ebx
0x0ffb2749:  jmp    0xffb273c

----------------
IN: 
0x0ffb273c:  test   %ebx,%ebx
0x0ffb273e:  je     0xffb2771

----------------
IN: 
0x0ffb274b:  add    $0x5,%ebp
0x0ffb274e:  mov    $0x5,%ecx
0x0ffb2753:  lea    0x1(%esp),%edx
0x0ffb2757:  mov    %ebp,%eax
0x0ffb2759:  call   0xffab68e

----------------
IN: 
0x0ffb275e:  test   %eax,%eax
0x0ffb2760:  je     0xffb2771

----------------
IN: 
0x0ffb2762:  mov    %esi,%ecx
0x0ffb2764:  mov    %edi,%edx
0x0ffb2766:  mov    %ebp,%eax
0x0ffb2768:  call   0xffab68e

----------------
IN: 
0x0ffb276d:  test   %eax,%eax
0x0ffb276f:  jne    0xffb2747

----------------
IN: 
0x0ffb2771:  mov    %ebx,%eax
0x0ffb2773:  add    $0x10,%esp
0x0ffb2776:  pop    %ebx
0x0ffb2777:  pop    %esi
0x0ffb2778:  pop    %edi
0x0ffb2779:  pop    %ebp
0x0ffb277a:  ret    

----------------
IN: 
0x0ffb88b0:  mov    %eax,%ebp
0x0ffb88b2:  test   %eax,%eax
0x0ffb88b4:  je     0xffb8912

----------------
IN: 
0x0ffb8912:  mov    0xffbfde8,%eax
0x0ffb8917:  lea    -0x4(%eax),%ebx
0x0ffb891a:  cmp    $0xfffffffc,%ebx
0x0ffb891d:  je     0xffb89df

----------------
IN: 
0x0ffb8923:  movzwl 0x14(%ebx),%eax
0x0ffb8927:  shl    $0x8,%eax
0x0ffb892a:  movzbl 0x16(%ebx),%edx
0x0ffb892e:  or     %edx,%eax
0x0ffb8930:  cmp    $0xc0320,%eax
0x0ffb8935:  jne    0xffb89d4

----------------
IN: 
0x0ffb89d4:  mov    0x4(%ebx),%ebx
0x0ffb89d7:  sub    $0x4,%ebx
0x0ffb89da:  jmp    0xffb891a

----------------
IN: 
0x0ffb891a:  cmp    $0xfffffffc,%ebx
0x0ffb891d:  je     0xffb89df

----------------
IN: 
0x0ffb89df:  mov    0xffbfde8,%eax
0x0ffb89e4:  lea    -0x4(%eax),%ebx
0x0ffb89e7:  cmp    $0xfffffffc,%ebx
0x0ffb89ea:  je     0xffb8ab9

----------------
IN: 
0x0ffb89f0:  movzwl 0x14(%ebx),%eax
0x0ffb89f4:  shl    $0x8,%eax
0x0ffb89f7:  movzbl 0x16(%ebx),%edx
0x0ffb89fb:  or     %edx,%eax
0x0ffb89fd:  cmp    $0xc0300,%eax
0x0ffb8a02:  jne    0xffb8aae

----------------
IN: 
0x0ffb8aae:  mov    0x4(%ebx),%ebx
0x0ffb8ab1:  sub    $0x4,%ebx
0x0ffb8ab4:  jmp    0xffb89e7

----------------
IN: 
0x0ffb89e7:  cmp    $0xfffffffc,%ebx
0x0ffb89ea:  je     0xffb8ab9

----------------
IN: 
0x0ffb8ab9:  mov    0xffbfde8,%eax
0x0ffb8abe:  lea    -0x4(%eax),%ebx
0x0ffb8ac1:  cmp    $0xfffffffc,%ebx
0x0ffb8ac4:  je     0xffb8b68

----------------
IN: 
0x0ffb8aca:  movzwl 0x14(%ebx),%eax
0x0ffb8ace:  shl    $0x8,%eax
0x0ffb8ad1:  movzbl 0x16(%ebx),%edx
0x0ffb8ad5:  or     %edx,%eax
0x0ffb8ad7:  cmp    $0xc0310,%eax
0x0ffb8adc:  jne    0xffb8b5d

----------------
IN: 
0x0ffb8b5d:  mov    0x4(%ebx),%ebx
0x0ffb8b60:  sub    $0x4,%ebx
0x0ffb8b63:  jmp    0xffb8ac1

----------------
IN: 
0x0ffb8ac1:  cmp    $0xfffffffc,%ebx
0x0ffb8ac4:  je     0xffb8b68

----------------
IN: 
0x0ffb8b68:  cmpl   $0x0,0xffbfbf0
0x0ffb8b6f:  je     0xffb8bc2

----------------
IN: 
0x0ffb8b71:  mov    $0x303,%edx
0x0ffb8b76:  xor    %eax,%eax
0x0ffb8b78:  call   0xffb26fa

----------------
IN: 
0x0ffb8b7d:  test   %eax,%eax
0x0ffb8b7f:  je     0xffb8bb5

----------------
IN: 
0x0ffb8b81:  mov    0x1c(%eax),%eax
0x0ffb8b84:  test   %eax,%eax
0x0ffb8b86:  je     0xffb8bc2

----------------
IN: 
0x0ffb8b88:  cmpb   $0x8,(%eax)
0x0ffb8b8b:  jne    0xffb8bc2

----------------
IN: 
0x0ffb8b8d:  movl   $0x0,0xc(%esp)
0x0ffb8b95:  movl   $0x0,0x10(%esp)
0x0ffb8b9d:  add    $0x5,%eax
0x0ffb8ba0:  lea    0xc(%esp),%ecx
0x0ffb8ba4:  xor    %edx,%edx
0x0ffb8ba6:  call   0xffaced2

----------------
IN: 
0x0ffb8bab:  mov    0x10(%esp),%eax
0x0ffb8baf:  or     0xc(%esp),%eax
0x0ffb8bb3:  jne    0xffb8bc2

----------------
IN: 
0x0ffb8bc2:  mov    $0xfe987,%edx
0x0ffb8bc7:  movzwl %dx,%edx
0x0ffb8bca:  or     $0xf0000000,%edx
0x0ffb8bd0:  mov    $0x1,%eax
0x0ffb8bd5:  call   0xffad04c

----------------
IN: 
0x0ffb8bda:  mov    $0xfd42e,%edx
0x0ffb8bdf:  movzwl %dx,%edx
0x0ffb8be2:  or     $0xf0000000,%edx
0x0ffb8be8:  mov    $0xc,%eax
0x0ffb8bed:  call   0xffad04c

----------------
IN: 
0x0ffb8bf2:  xor    %edx,%edx
0x0ffb8bf4:  mov    $0xffb1eae,%eax
0x0ffb8bf9:  call   0xffadff4

----------------
IN: 
0x0ffadff4:  push   %ebp
0x0ffadff5:  push   %edi
0x0ffadff6:  push   %esi
0x0ffadff7:  push   %ebx
0x0ffadff8:  mov    %eax,%esi
0x0ffadffa:  mov    %edx,%edi
0x0ffadffc:  cmpb   $0x0,0xf54e0
0x0ffae003:  je     0xffae07f

----------------
IN: 
0x0ffae005:  mov    $0x1000,%ecx
0x0ffae00a:  mov    $0x1000,%edx
0x0ffae00f:  mov    $0xffbfe78,%eax
0x0ffae014:  call   0xffadfb2

----------------
IN: 
0x0ffae019:  mov    %eax,%ebx
0x0ffae01b:  test   %eax,%eax
0x0ffae01d:  je     0xffae07f

----------------
IN: 
0x0ffae01f:  lea    0x1000(%eax),%eax
0x0ffae025:  mov    %eax,(%ebx)
0x0ffae027:  mov    %esp,%eax
0x0ffae029:  mov    $0xf6168,%ebp
0x0ffae02e:  cmp    $0x100000,%eax
0x0ffae033:  jbe    0xffae03c

----------------
IN: 
0x0ffae03c:  lea    0x4(%ebp),%edx
0x0ffae03f:  lea    0x4(%ebx),%eax
0x0ffae042:  call   0xffab66f

----------------
IN: 
0x0ffae047:  mov    %edi,%eax
0x0ffae049:  mov    %esi,%ecx
0x0ffae04b:  mov    %ebp,%edx
0x0ffae04d:  push   $0xffae06e
0x0ffae052:  push   %ebp
0x0ffae053:  mov    %esp,(%edx)
0x0ffae055:  mov    (%ebx),%esp
0x0ffae057:  call   *%ecx

----------------
IN: 
0x0ffb1eae:  push   %esi
0x0ffb1eaf:  push   %ebx
0x0ffb1eb0:  push   %esi
0x0ffb1eb1:  call   0xffae776

----------------
IN: 
0x0ffae776:  push   %ebx
0x0ffae777:  mov    $0x10,%ebx
0x0ffae77c:  in     $0x64,%al
0x0ffae77e:  test   $0x1,%al
0x0ffae780:  je     0xffae7a5

----------------
IN: 
0x0ffae7a5:  xor    %eax,%eax
0x0ffae7a7:  pop    %ebx
0x0ffae7a8:  ret    

----------------
IN: 
0x0ffb1eb6:  test   %eax,%eax
0x0ffb1eb8:  jne    0xffb1ff5

----------------
IN: 
0x0ffb1ebe:  xor    %edx,%edx
0x0ffb1ec0:  mov    $0xad,%eax
0x0ffb1ec5:  call   0xffae6f8

----------------
IN: 
0x0ffae6f8:  push   %ebp
0x0ffae6f9:  push   %edi
0x0ffae6fa:  push   %esi
0x0ffae6fb:  push   %ebx
0x0ffae6fc:  mov    %eax,%ebx
0x0ffae6fe:  mov    %edx,%esi
0x0ffae700:  call   0xec5aa

----------------
IN: 
0x000ec5aa:  push   %ebx
0x000ec5ab:  mov    $0x2710,%ebx
0x000ec5b0:  in     $0x64,%al
0x000ec5b2:  test   $0x2,%al
0x000ec5b4:  je     0xec5d7

----------------
IN: 
0x000ec5d7:  xor    %eax,%eax
0x000ec5d9:  pop    %ebx
0x000ec5da:  ret    

----------------
IN: 
0x0ffae705:  mov    %eax,%edi
0x0ffae707:  test   %eax,%eax
0x0ffae709:  jne    0xffae76f

----------------
IN: 
0x0ffae70b:  mov    %ebx,%ebp
0x0ffae70d:  sar    $0xc,%ebp
0x0ffae710:  mov    %bl,%al
0x0ffae712:  out    %al,$0x64
0x0ffae714:  xor    %eax,%eax
0x0ffae716:  cmp    %eax,%ebp
0x0ffae718:  jle    0xffae72e

----------------
IN: 
0x0ffae72e:  sar    $0x8,%ebx
0x0ffae731:  and    $0xf,%ebx
0x0ffae734:  add    %esi,%ebx
0x0ffae736:  cmp    %ebx,%esi
0x0ffae738:  je     0xffae76f

----------------
IN: 
0x0ffae76f:  mov    %edi,%eax
0x0ffae771:  pop    %ebx
0x0ffae772:  pop    %esi
0x0ffae773:  pop    %edi
0x0ffae774:  pop    %ebp
0x0ffae775:  ret    

----------------
IN: 
0x0ffb1eca:  test   %eax,%eax
0x0ffb1ecc:  jne    0xffb1ff5

----------------
IN: 
0x0ffb1ed2:  xor    %edx,%edx
0x0ffb1ed4:  mov    $0xa7,%eax
0x0ffb1ed9:  call   0xffae6f8

----------------
IN: 
0x0ffb1ede:  test   %eax,%eax
0x0ffb1ee0:  jne    0xffb1ff5

----------------
IN: 
0x0ffb1ee6:  call   0xffae776

----------------
IN: 
0x0ffb1eeb:  test   %eax,%eax
0x0ffb1eed:  jne    0xffb1ff5

----------------
IN: 
0x0ffb1ef3:  lea    0x2(%esp),%edx
0x0ffb1ef7:  mov    $0x1aa,%eax
0x0ffb1efc:  call   0xffae6f8

----------------
IN: 
0x0ffae73a:  mov    $0x2710,%ebp
0x0ffae73f:  in     $0x64,%al
0x0ffae741:  test   $0x1,%al
0x0ffae743:  jne    0xffae766

----------------
IN: 
0x0ffae766:  in     $0x60,%al
0x0ffae768:  mov    %al,(%esi)
0x0ffae76a:  inc    %esi
0x0ffae76b:  jmp    0xffae736

----------------
IN: 
0x0ffae736:  cmp    %ebx,%esi
0x0ffae738:  je     0xffae76f

----------------
IN: 
0x0ffb1f01:  test   %eax,%eax
0x0ffb1f03:  jne    0xffb1ff5

----------------
IN: 
0x0ffb1f09:  movzbl 0x2(%esp),%eax
0x0ffb1f0e:  cmp    $0x55,%al
0x0ffb1f10:  je     0xffb1f1a

----------------
IN: 
0x0ffb1f1a:  lea    0x2(%esp),%edx
0x0ffb1f1e:  mov    $0x1ab,%eax
0x0ffb1f23:  call   0xffae6f8

----------------
IN: 
0x0ffb1f28:  test   %eax,%eax
0x0ffb1f2a:  jne    0xffb1ff5

----------------
IN: 
0x0ffb1f30:  movzbl 0x2(%esp),%eax
0x0ffb1f35:  test   %al,%al
0x0ffb1f37:  je     0xffb1f4b

----------------
IN: 
0x0ffb1f4b:  xor    %edx,%edx
0x0ffb1f4d:  xor    %ecx,%ecx
0x0ffb1f4f:  mov    $0xf13a7,%eax
0x0ffb1f54:  call   0xffad81f

----------------
IN: 
0x0ffb1f59:  mov    %eax,%ebx
0x0ffb1f5b:  call   0xebc88

----------------
IN: 
0x000ebc88:  push   %ebx
0x000ebc89:  mov    %eax,%ebx
0x000ebc8b:  call   0xebc18

----------------
IN: 
0x000ebc18:  mov    0xf6038,%dx
0x000ebc1f:  test   %dx,%dx
0x000ebc22:  jne    0xebc3c

----------------
IN: 
0x000ebc3c:  mov    0xe8f34,%ecx
0x000ebc42:  cmp    $0x40,%dx
0x000ebc46:  je     0xebc5d

----------------
IN: 
0x000ebc48:  in     (%dx),%eax
0x000ebc49:  xor    %ecx,%eax
0x000ebc4b:  and    $0xffffff,%eax
0x000ebc50:  xor    %ecx,%eax
0x000ebc52:  cmp    %ecx,%eax
0x000ebc54:  jae    0xebc82

----------------
IN: 
0x000ebc82:  mov    %eax,0xe8f34
0x000ebc87:  ret    

----------------
IN: 
0x000ebc90:  imul   0xf603c,%ebx
0x000ebc97:  add    %ebx,%eax
0x000ebc99:  pop    %ebx
0x000ebc9a:  ret    

----------------
IN: 
0x0ffb1f60:  mov    %eax,%esi
0x0ffb1f62:  lea    0x2(%esp),%edx
0x0ffb1f66:  mov    $0x1ff,%eax
0x0ffb1f6b:  call   0xffb1da3

----------------
IN: 
0x0ffb1da3:  push   %ebp
0x0ffb1da4:  push   %edi
0x0ffb1da5:  push   %esi
0x0ffb1da6:  push   %ebx
0x0ffb1da7:  push   %ecx
0x0ffb1da8:  mov    %eax,%esi
0x0ffb1daa:  mov    %edx,%edi
0x0ffb1dac:  mov    0xe8f2c,%al
0x0ffb1db1:  mov    %al,0x2(%esp)
0x0ffb1db5:  and    $0xfffffffc,%eax
0x0ffb1db8:  or     $0x30,%eax
0x0ffb1dbb:  mov    %al,0x3(%esp)
0x0ffb1dbf:  lea    0x3(%esp),%edx
0x0ffb1dc3:  mov    $0x1060,%eax
0x0ffb1dc8:  call   0xffae6f8

----------------
IN: 
0x0ffae71a:  call   0xec5aa

----------------
IN: 
0x0ffae71f:  test   %eax,%eax
0x0ffae721:  jne    0xffae76d

----------------
IN: 
0x0ffae723:  mov    (%esi),%al
0x0ffae725:  out    %al,$0x60
0x0ffae727:  mov    $0x1,%eax
0x0ffae72c:  jmp    0xffae716

----------------
IN: 
0x0ffae716:  cmp    %eax,%ebp
0x0ffae718:  jle    0xffae72e

----------------
IN: 
0x0ffb1dcd:  mov    %eax,%ebx
0x0ffb1dcf:  test   %eax,%eax
0x0ffb1dd1:  jne    0xffb1ea6

----------------
IN: 
0x0ffb1dd7:  call   0xec186

----------------
IN: 
0x000ec195:  and    $0xfffff000,%eax
0x000ec19a:  mov    %eax,%ebx
0x000ec19c:  mov    %ebx,%eax
0x000ec19e:  call   0xe97e5

----------------
IN: 
0x000e97ef:  push   %edi
0x000e97f0:  push   %esi
0x000e97f1:  push   %ebx
0x000e97f2:  push   $0xe97fe
0x000e97f7:  push   %ebp
0x000e97f8:  mov    %esp,(%eax)
0x000e97fa:  mov    (%ecx),%esp
0x000e97fc:  pop    %ebp
0x000e97fd:  ret    

----------------
IN: 
0x0ffae06e:  cmp    $0xf6168,%ebp
0x0ffae074:  jne    0xffae089

----------------
IN: 
0x0ffae076:  pop    %ebx
0x0ffae077:  pop    %esi
0x0ffae078:  pop    %edi
0x0ffae079:  pop    %ebp
0x0ffae07a:  jmp    0xec16c

----------------
IN: 
0x0ffb8bfe:  mov    $0xf601c,%eax
0x0ffb8c03:  mov    $0xfefc7,%edi
0x0ffb8c08:  mov    $0xb,%ecx
0x0ffb8c0d:  mov    %eax,%esi
0x0ffb8c0f:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffb8c0f:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffb8c11:  mov    %ax,0x78
0x0ffb8c17:  movw   $0xf000,0x7a
0x0ffb8c20:  mov    $0x90,%al
0x0ffb8c22:  out    %al,$0x70
0x0ffb8c24:  in     $0x71,%al
0x0ffb8c26:  mov    %al,%bl
0x0ffb8c28:  test   $0xf0,%al
0x0ffb8c2a:  je     0xffb8c3b

----------------
IN: 
0x0ffb8c2c:  mov    %al,%dl
0x0ffb8c2e:  shr    $0x4,%dl
0x0ffb8c31:  movzbl %dl,%edx
0x0ffb8c34:  xor    %eax,%eax
0x0ffb8c36:  call   0xffb4184

----------------
IN: 
0x0ffb4184:  push   %edi
0x0ffb4185:  push   %esi
0x0ffb4186:  push   %ebx
0x0ffb4187:  sub    $0x100,%esp
0x0ffb418d:  mov    %eax,%ebx
0x0ffb418f:  call   0xffb0afc

----------------
IN: 
0x0ffb0afc:  push   %edi
0x0ffb0afd:  push   %esi
0x0ffb0afe:  push   %ebx
0x0ffb0aff:  mov    %eax,%edi
0x0ffb0b01:  mov    %edx,%esi
0x0ffb0b03:  lea    -0x1(%edx),%eax
0x0ffb0b06:  cmp    $0x7,%eax
0x0ffb0b09:  jbe    0xffb0b1c

----------------
IN: 
0x0ffb0b1c:  mov    $0x24,%eax
0x0ffb0b21:  call   0xffae0d4

----------------
IN: 
0x0ffb0b26:  mov    %eax,%ebx
0x0ffb0b28:  test   %eax,%eax
0x0ffb0b2a:  jne    0xffb0b3d

----------------
IN: 
0x0ffb0b3d:  mov    $0x24,%ecx
0x0ffb0b42:  xor    %edx,%edx
0x0ffb0b44:  call   0xeab7b

----------------
IN: 
0x0ffb0b49:  mov    %edi,0x14(%eax)
0x0ffb0b4c:  movb   $0x10,(%eax)
0x0ffb0b4f:  movw   $0x200,0x1a(%eax)
0x0ffb0b55:  mov    %esi,%eax
0x0ffb0b57:  mov    %al,0x1(%ebx)
0x0ffb0b5a:  movl   $0xffffffff,0xc(%ebx)
0x0ffb0b61:  movl   $0xffffffff,0x10(%ebx)
0x0ffb0b68:  imul   $0xa,%esi,%esi
0x0ffb0b6b:  mov    0xf5fc0(%esi),%eax
0x0ffb0b71:  mov    0xf5fc4(%esi),%edx
0x0ffb0b77:  mov    %eax,0x2(%ebx)
0x0ffb0b7a:  mov    %edx,0x6(%ebx)
0x0ffb0b7d:  mov    %ebx,%eax
0x0ffb0b7f:  pop    %ebx
0x0ffb0b80:  pop    %esi
0x0ffb0b81:  pop    %edi
0x0ffb0b82:  ret    

----------------
IN: 
0x0ffb4194:  test   %eax,%eax
0x0ffb4196:  je     0xffb4221

----------------
IN: 
0x0ffb419c:  mov    %eax,%esi
0x0ffb419e:  lea    0x41(%ebx),%eax
0x0ffb41a1:  push   %eax
0x0ffb41a2:  push   $0xf19b7
0x0ffb41a7:  push   $0x50
0x0ffb41a9:  call   0xffb3cc8

----------------
IN: 
0x0ffb3cc8:  push   %ebx
0x0ffb3cc9:  sub    $0xc,%esp
0x0ffb3ccc:  mov    0x14(%esp),%eax
0x0ffb3cd0:  call   0xffae09f

----------------
IN: 
0x0ffb3cd5:  mov    %eax,%ebx
0x0ffb3cd7:  test   %eax,%eax
0x0ffb3cd9:  jne    0xffb3cec

----------------
IN: 
0x0ffb3cec:  movl   $0xffab680,(%esp)
0x0ffb3cf3:  mov    %eax,0x4(%esp)
0x0ffb3cf7:  mov    0x14(%esp),%eax
0x0ffb3cfb:  add    %ebx,%eax
0x0ffb3cfd:  mov    %eax,0x8(%esp)
0x0ffb3d01:  lea    0x1c(%esp),%ecx
0x0ffb3d05:  mov    0x18(%esp),%edx
0x0ffb3d09:  mov    %esp,%eax
0x0ffb3d0b:  call   0xebd11

----------------
IN: 
0x000ebda9:  cmp    $0x63,%al
0x000ebdab:  jne    0xebf60

----------------
IN: 
0x000ebdb1:  lea    0x4(%ebp),%edi
0x000ebdb4:  movsbl 0x0(%ebp),%edx
0x000ebdb8:  mov    %ebx,%eax
0x000ebdba:  call   0xe9803

----------------
IN: 
0x000ebdbf:  jmp    0xebf70

----------------
IN: 
0x0ffb3d10:  mov    0x4(%esp),%eax
0x0ffb3d14:  mov    0x8(%esp),%edx
0x0ffb3d18:  cmp    %eax,%edx
0x0ffb3d1a:  ja     0xffb3d1f

----------------
IN: 
0x0ffb3d1f:  movb   $0x0,(%eax)
0x0ffb3d22:  mov    %ebx,%eax
0x0ffb3d24:  add    $0xc,%esp
0x0ffb3d27:  pop    %ebx
0x0ffb3d28:  ret    

----------------
IN: 
0x0ffb41ae:  mov    %eax,%edi
0x0ffb41b0:  mov    0xffbfde8,%eax
0x0ffb41b5:  lea    -0x4(%eax),%ecx
0x0ffb41b8:  add    $0xc,%esp
0x0ffb41bb:  cmp    $0xfffffffc,%ecx
0x0ffb41be:  je     0xffb420d

----------------
IN: 
0x0ffb41c0:  cmpw   $0x601,0x14(%ecx)
0x0ffb41c6:  je     0xffb41d0

----------------
IN: 
0x0ffb41c8:  mov    0x4(%ecx),%ecx
0x0ffb41cb:  sub    $0x4,%ecx
0x0ffb41ce:  jmp    0xffb41bb

----------------
IN: 
0x0ffb41bb:  cmp    $0xfffffffc,%ecx
0x0ffb41be:  je     0xffb420d

----------------
IN: 
0x0ffb41d0:  test   %ecx,%ecx
0x0ffb41d2:  je     0xffb420d

----------------
IN: 
0x0ffb41d4:  mov    $0xf19c9,%edx
0x0ffb41d9:  mov    %esp,%eax
0x0ffb41db:  call   0xffb3960

----------------
IN: 
0x0ffb3960:  push   %ebp
0x0ffb3961:  push   %edi
0x0ffb3962:  push   %esi
0x0ffb3963:  push   %ebx
0x0ffb3964:  push   %ebx
0x0ffb3965:  mov    %eax,%esi
0x0ffb3967:  mov    %edx,%edi
0x0ffb3969:  mov    %ecx,%ebp
0x0ffb396b:  mov    0xc(%ecx),%ecx
0x0ffb396e:  test   %ecx,%ecx
0x0ffb3970:  je     0xffb3980

----------------
IN: 
0x0ffb3980:  push   $0xf17ed
0x0ffb3985:  push   $0xf17f8
0x0ffb398a:  push   $0x100
0x0ffb398f:  push   %eax
0x0ffb3990:  call   0xffb244c

----------------
IN: 
0x0ffb3995:  lea    (%esi,%eax,1),%ebx
0x0ffb3998:  movzbl 0x2(%ebp),%edx
0x0ffb399c:  add    $0x10,%esp
0x0ffb399f:  test   %dl,%dl
0x0ffb39a1:  je     0xffb39bc

----------------
IN: 
0x0ffb39bc:  mov    0x0(%ebp),%eax
0x0ffb39bf:  mov    %al,%dl
0x0ffb39c1:  and    $0x7,%edx
0x0ffb39c4:  mov    %dl,0x3(%esp)
0x0ffb39c8:  add    $0x100,%esi
0x0ffb39ce:  shr    $0x3,%al
0x0ffb39d1:  movzbl %al,%eax
0x0ffb39d4:  push   %eax
0x0ffb39d5:  push   %edi
0x0ffb39d6:  push   $0xf17ff
0x0ffb39db:  mov    %esi,%eax
0x0ffb39dd:  sub    %ebx,%eax
0x0ffb39df:  push   %eax
0x0ffb39e0:  push   %ebx
0x0ffb39e1:  call   0xffb244c

----------------
IN: 
0x0ffb39e6:  add    %eax,%ebx
0x0ffb39e8:  add    $0x14,%esp
0x0ffb39eb:  movzbl 0x3(%esp),%edx
0x0ffb39f0:  test   %dl,%dl
0x0ffb39f2:  je     0xffb3a08

----------------
IN: 
0x0ffb3a08:  mov    %ebx,%eax
0x0ffb3a0a:  pop    %edx
0x0ffb3a0b:  pop    %ebx
0x0ffb3a0c:  pop    %esi
0x0ffb3a0d:  pop    %edi
0x0ffb3a0e:  pop    %ebp
0x0ffb3a0f:  ret    

----------------
IN: 
0x0ffb41e0:  push   %ebx
0x0ffb41e1:  push   $0x3f0
0x0ffb41e6:  push   $0xf19cd
0x0ffb41eb:  lea    0x10c(%esp),%edx
0x0ffb41f2:  sub    %eax,%edx
0x0ffb41f4:  push   %edx
0x0ffb41f5:  push   %eax
0x0ffb41f6:  call   0xffb244c

----------------
IN: 
0x0ffb41fb:  lea    0x14(%esp),%eax
0x0ffb41ff:  call   0xffaf3d9

----------------
IN: 
0x0ffaf3d9:  push   %ebp
0x0ffaf3da:  push   %edi
0x0ffaf3db:  push   %esi
0x0ffaf3dc:  push   %ebx
0x0ffaf3dd:  mov    %eax,%esi
0x0ffaf3df:  push   %eax
0x0ffaf3e0:  push   $0xf06ee
0x0ffaf3e5:  call   0xec4d8

----------------
IN: 
0x0ffaf3ea:  mov    0xffbff30,%edi
0x0ffaf3f0:  mov    0xffbfe54,%ebp
0x0ffaf3f6:  pop    %eax
0x0ffaf3f7:  pop    %edx
0x0ffaf3f8:  xor    %ebx,%ebx
0x0ffaf3fa:  cmp    %ebx,%edi
0x0ffaf3fc:  jle    0xffaf410

----------------
IN: 
0x0ffaf3fe:  mov    0x0(%ebp,%ebx,4),%edx
0x0ffaf402:  mov    %esi,%eax
0x0ffaf404:  call   0xffaba89

----------------
IN: 
0x0ffaba89:  push   %ebx
0x0ffaba8a:  mov    %eax,%ecx
0x0ffaba8c:  mov    %edx,%eax
0x0ffaba8e:  mov    (%ecx),%bl
0x0ffaba90:  mov    (%eax),%dl
0x0ffaba92:  test   %bl,%bl
0x0ffaba94:  jne    0xffabaa1

----------------
IN: 
0x0ffabaa1:  cmp    $0x2a,%bl
0x0ffabaa4:  jne    0xffabab7

----------------
IN: 
0x0ffabab7:  cmp    %dl,%bl
0x0ffabab9:  jne    0xffababf

----------------
IN: 
0x0ffababb:  inc    %ecx
0x0ffababc:  inc    %eax
0x0ffababd:  jmp    0xffaba8e

----------------
IN: 
0x0ffaba8e:  mov    (%ecx),%bl
0x0ffaba90:  mov    (%eax),%dl
0x0ffaba92:  test   %bl,%bl
0x0ffaba94:  jne    0xffabaa1

----------------
IN: 
0x0ffababf:  xor    %eax,%eax
0x0ffabac1:  pop    %ebx
0x0ffabac2:  ret    

----------------
IN: 
0x0ffaf409:  inc    %ebx
0x0ffaf40a:  test   %eax,%eax
0x0ffaf40c:  je     0xffaf3fa

----------------
IN: 
0x0ffaf3fa:  cmp    %ebx,%edi
0x0ffaf3fc:  jle    0xffaf410

----------------
IN: 
0x0ffaf410:  or     $0xffffffff,%ebx
0x0ffaf413:  mov    %ebx,%eax
0x0ffaf415:  pop    %ebx
0x0ffaf416:  pop    %esi
0x0ffaf417:  pop    %edi
0x0ffaf418:  pop    %ebp
0x0ffaf419:  ret    

----------------
IN: 
0x0ffb4204:  mov    %eax,%edx
0x0ffb4206:  add    $0x14,%esp
0x0ffb4209:  test   %eax,%eax
0x0ffb420b:  jns    0xffb4213

----------------
IN: 
0x0ffb420d:  mov    0xffbfe50,%edx
0x0ffb4213:  push   %edi
0x0ffb4214:  mov    %esi,%ecx
0x0ffb4216:  mov    $0x1,%eax
0x0ffb421b:  call   0xffae248

----------------
IN: 
0x0ffae248:  push   %ebp
0x0ffae249:  push   %edi
0x0ffae24a:  push   %esi
0x0ffae24b:  push   %ebx
0x0ffae24c:  push   %esi
0x0ffae24d:  mov    %eax,%ebx
0x0ffae24f:  mov    %edx,%edi
0x0ffae251:  mov    %ecx,%esi
0x0ffae253:  mov    0x18(%esp),%ebp
0x0ffae257:  mov    $0x18,%eax
0x0ffae25c:  call   0xffae09f

----------------
IN: 
0x0ffae261:  test   %eax,%eax
0x0ffae263:  jne    0xffae279

----------------
IN: 
0x0ffae279:  mov    %ebx,(%eax)
0x0ffae27b:  mov    %edi,0x8(%eax)
0x0ffae27e:  mov    %esi,0x4(%eax)
0x0ffae281:  test   %ebp,%ebp
0x0ffae283:  jne    0xffae28a

----------------
IN: 
0x0ffae28a:  mov    %ebp,0xc(%eax)
0x0ffae28d:  mov    0xffbfe40,%edx
0x0ffae293:  movl   $0xffbfe40,(%esp)
0x0ffae29a:  test   %edx,%edx
0x0ffae29c:  jne    0xffae2ae

----------------
IN: 
0x0ffae29e:  add    $0x10,%eax
0x0ffae2a1:  mov    (%esp),%edx
0x0ffae2a4:  pop    %ecx
0x0ffae2a5:  pop    %ebx
0x0ffae2a6:  pop    %esi
0x0ffae2a7:  pop    %edi
0x0ffae2a8:  pop    %ebp
0x0ffae2a9:  jmp    0xffab66f

----------------
IN: 
0x0ffb4220:  pop    %eax
0x0ffb4221:  add    $0x100,%esp
0x0ffb4227:  pop    %ebx
0x0ffb4228:  pop    %esi
0x0ffb4229:  pop    %edi
0x0ffb422a:  ret    

----------------
IN: 
0x0ffb8c3b:  and    $0xf,%bl
0x0ffb8c3e:  je     0xffb8c4d

----------------
IN: 
0x0ffb8c4d:  mov    $0xfef57,%edx
0x0ffb8c52:  movzwl %dx,%edx
0x0ffb8c55:  or     $0xf0000000,%edx
0x0ffb8c5b:  mov    $0x6,%eax
0x0ffb8c60:  call   0xffad04c

----------------
IN: 
0x0ffb8c65:  mov    $0x7d00,%eax
0x0ffb8c6a:  call   0xebc88

----------------
IN: 
0x0ffb8c6f:  mov    %eax,0xffbff3c
0x0ffb8c74:  mov    0xffbfde8,%eax
0x0ffb8c79:  lea    -0x4(%eax),%ebx
0x0ffb8c7c:  test   %eax,%eax
0x0ffb8c7e:  jne    0xffb8cb6

----------------
IN: 
0x0ffb8cb6:  cmp    $0xfffffffc,%ebx
0x0ffb8cb9:  je     0xffb8cd1

----------------
IN: 
0x0ffb8cbb:  xor    %ecx,%ecx
0x0ffb8cbd:  mov    %ebx,%edx
0x0ffb8cbf:  mov    $0xffbfba0,%eax
0x0ffb8cc4:  call   0xffabc0c

----------------
IN: 
0x0ffb8cc9:  mov    0x4(%ebx),%ebx
0x0ffb8ccc:  sub    $0x4,%ebx
0x0ffb8ccf:  jmp    0xffb8cb6

----------------
IN: 
0x0ffb20fc:  push   %ebp
0x0ffb20fd:  push   %edi
0x0ffb20fe:  push   %esi
0x0ffb20ff:  push   %ebx
0x0ffb2100:  mov    %eax,%ebx
0x0ffb2102:  movzbl 0x16(%eax),%edi
0x0ffb2106:  movzwl (%eax),%eax
0x0ffb2109:  mov    $0x3c,%edx
0x0ffb210e:  call   0xea4cf

----------------
IN: 
0x0ffb2113:  mov    %eax,%ebp
0x0ffb2115:  test   $0x1,%edi
0x0ffb211b:  je     0xffb214a

----------------
IN: 
0x0ffb214a:  mov    $0xe,%ecx
0x0ffb214f:  mov    $0x3f4,%eax
0x0ffb2154:  mov    $0x1f0,%esi
0x0ffb2159:  push   %eax
0x0ffb215a:  push   %esi
0x0ffb215b:  xor    %edx,%edx
0x0ffb215d:  mov    %ebx,%eax
0x0ffb215f:  call   0xffb2062

----------------
IN: 
0x0ffb2062:  push   %ebp
0x0ffb2063:  push   %edi
0x0ffb2064:  push   %esi
0x0ffb2065:  push   %ebx
0x0ffb2066:  push   %ebx
0x0ffb2067:  mov    %eax,%ebx
0x0ffb2069:  mov    %edx,(%esp)
0x0ffb206c:  mov    %ecx,%esi
0x0ffb206e:  mov    0x18(%esp),%edi
0x0ffb2072:  mov    0x1c(%esp),%ebp
0x0ffb2076:  mov    $0x14,%eax
0x0ffb207b:  call   0xffae0d4

----------------
IN: 
0x0ffb2080:  test   %eax,%eax
0x0ffb2082:  jne    0xffb2098

----------------
IN: 
0x0ffb2098:  mov    %eax,%edx
0x0ffb209a:  mov    0xffbff00,%ecx
0x0ffb20a0:  lea    0x1(%ecx),%eax
0x0ffb20a3:  mov    %eax,0xffbff00
0x0ffb20a8:  mov    %cl,0x8(%edx)
0x0ffb20ab:  mov    (%esp),%cl
0x0ffb20ae:  mov    %cl,0x7(%edx)
0x0ffb20b1:  mov    %esi,%ecx
0x0ffb20b3:  mov    %cl,0x6(%edx)
0x0ffb20b6:  or     $0xffffffff,%ecx
0x0ffb20b9:  test   %ebx,%ebx
0x0ffb20bb:  je     0xffb20c0

----------------
IN: 
0x0ffb20bd:  movzwl (%ebx),%ecx
0x0ffb20c0:  mov    %ecx,0xc(%edx)
0x0ffb20c3:  mov    %ebx,0x10(%edx)
0x0ffb20c6:  mov    %di,(%edx)
0x0ffb20c9:  mov    %bp,0x2(%edx)
0x0ffb20cd:  movw   $0x0,0x4(%edx)
0x0ffb20d3:  mov    %edx,(%esp)
0x0ffb20d6:  push   %ecx
0x0ffb20d7:  push   %esi
0x0ffb20d8:  push   $0x0
0x0ffb20da:  push   %ebp
0x0ffb20db:  push   %edi
0x0ffb20dc:  push   %eax
0x0ffb20dd:  push   $0xf142d
0x0ffb20e2:  call   0xec4d8

----------------
IN: 
0x0ffb20e7:  mov    0x1c(%esp),%edx
0x0ffb20eb:  mov    $0xffb9b05,%eax
0x0ffb20f0:  add    $0x20,%esp
0x0ffb20f3:  pop    %ebx
0x0ffb20f4:  pop    %esi
0x0ffb20f5:  pop    %edi
0x0ffb20f6:  pop    %ebp
0x0ffb20f7:  jmp    0xffadff4

----------------
IN: 
0x0ffb9b05:  push   %ebp
0x0ffb9b06:  push   %edi
0x0ffb9b07:  push   %esi
0x0ffb9b08:  push   %ebx
0x0ffb9b09:  sub    $0x26c,%esp
0x0ffb9b0f:  mov    %eax,0xc(%esp)
0x0ffb9b13:  mov    $0x2c,%ecx
0x0ffb9b18:  xor    %edx,%edx
0x0ffb9b1a:  lea    0x40(%esp),%eax
0x0ffb9b1e:  call   0xeab7b

----------------
IN: 
0x0ffb9b23:  mov    0xc(%esp),%eax
0x0ffb9b27:  mov    %eax,0x64(%esp)
0x0ffb9b2b:  movb   $0x0,0x3(%esp)
0x0ffb9b30:  xor    %esi,%esi
0x0ffb9b32:  mov    0xc(%esp),%eax
0x0ffb9b36:  movzwl (%eax),%eax
0x0ffb9b39:  mov    %eax,%ebp
0x0ffb9b3b:  mov    %eax,0x10(%esp)
0x0ffb9b3f:  call   0xffaecf2

----------------
IN: 
0x0ffaecf2:  push   %esi
0x0ffaecf3:  push   %ebx
0x0ffaecf4:  mov    %eax,%esi
0x0ffaecf6:  xor    %ebx,%ebx
0x0ffaecf8:  lea    0x7(%esi),%edx
0x0ffaecfb:  in     (%dx),%al
0x0ffaecfc:  test   %al,%al
0x0ffaecfe:  jns    0xffaed30

----------------
IN: 
0x0ffaed30:  movzbl %al,%eax
0x0ffaed33:  jmp    0xffaed3a

----------------
IN: 
0x0ffaed3a:  pop    %ebx
0x0ffaed3b:  pop    %esi
0x0ffaed3c:  ret    

----------------
IN: 
0x0ffb9b44:  test   %eax,%eax
0x0ffb9b46:  js     0xffb9f0d

----------------
IN: 
0x0ffb9b4c:  cmpb   $0x1,0x3(%esp)
0x0ffb9b51:  sbb    %ebx,%ebx
0x0ffb9b53:  and    $0xfffffff0,%ebx
0x0ffb9b56:  sub    $0x50,%ebx
0x0ffb9b59:  lea    0x6(%ebp),%eax
0x0ffb9b5c:  mov    %ax,0x4(%esp)
0x0ffb9b61:  mov    %bl,%al
0x0ffb9b63:  mov    0x4(%esp),%edx
0x0ffb9b67:  out    %al,(%dx)
0x0ffb9b68:  call   0xebc18

----------------
IN: 
0x0ffb9b6d:  mov    %eax,%ecx
0x0ffb9b6f:  imul   $0x190,0xf603c,%eax
0x0ffb9b79:  add    $0xf423f,%eax
0x0ffb9b7e:  mov    $0xf4240,%edi
0x0ffb9b83:  xor    %edx,%edx
0x0ffb9b85:  div    %edi
0x0ffb9b87:  add    %ecx,%eax
0x0ffb9b89:  call   0xebcf3

----------------
IN: 
0x000ebcf3:  push   %ebx
0x000ebcf4:  mov    %eax,%ebx
0x000ebcf6:  mov    %ebx,%eax
0x000ebcf8:  call   0xebcdf

----------------
IN: 
0x000ebcdf:  push   %ebx
0x000ebce0:  mov    %eax,%ebx
0x000ebce2:  call   0xebc18

----------------
IN: 
0x000ebce7:  sub    %ebx,%eax
0x000ebce9:  test   %eax,%eax
0x000ebceb:  setg   %al
0x000ebcee:  movzbl %al,%eax
0x000ebcf1:  pop    %ebx
0x000ebcf2:  ret    

----------------
IN: 
0x000ebcfd:  test   %eax,%eax
0x000ebcff:  jne    0xebd05

----------------
IN: 
0x000ebd05:  pop    %ebx
0x000ebd06:  ret    

----------------
IN: 
0x0ffb9b8e:  movzwl %bp,%eax
0x0ffb9b91:  call   0xffaecf2

----------------
IN: 
0x0ffb9b96:  test   %eax,%eax
0x0ffb9b98:  js     0xffb9f0d

----------------
IN: 
0x0ffb9b9e:  mov    %bl,%al
0x0ffb9ba0:  mov    0x4(%esp),%edx
0x0ffb9ba4:  out    %al,(%dx)
0x0ffb9ba5:  in     (%dx),%al
0x0ffb9ba6:  mov    %al,0x4(%esp)
0x0ffb9baa:  lea    0x2(%ebp),%ecx
0x0ffb9bad:  mov    $0x55,%al
0x0ffb9baf:  mov    %ecx,%edx
0x0ffb9bb1:  out    %al,(%dx)
0x0ffb9bb2:  lea    0x3(%ebp),%edi
0x0ffb9bb5:  mov    $0xaa,%al
0x0ffb9bb7:  mov    %edi,%edx
0x0ffb9bb9:  out    %al,(%dx)
0x0ffb9bba:  mov    %ecx,%edx
0x0ffb9bbc:  in     (%dx),%al
0x0ffb9bbd:  mov    %al,%cl
0x0ffb9bbf:  mov    %edi,%edx
0x0ffb9bc1:  in     (%dx),%al
0x0ffb9bc2:  cmp    $0x55,%cl
0x0ffb9bc5:  setne  %dl
0x0ffb9bc8:  cmp    $0xaa,%al
0x0ffb9bca:  setne  %al
0x0ffb9bcd:  or     %dl,%al
0x0ffb9bcf:  jne    0xffb9f0d

----------------
IN: 
0x0ffb9f0d:  cmpb   $0x1,0x3(%esp)
0x0ffb9f12:  je     0xffb9f1e

----------------
IN: 
0x0ffb9f14:  movb   $0x1,0x3(%esp)
0x0ffb9f19:  jmp    0xffb9b32

----------------
IN: 
0x0ffb9b32:  mov    0xc(%esp),%eax
0x0ffb9b36:  movzwl (%eax),%eax
0x0ffb9b39:  mov    %eax,%ebp
0x0ffb9b3b:  mov    %eax,0x10(%esp)
0x0ffb9b3f:  call   0xffaecf2

----------------
IN: 
0x000ebd01:  pause  

----------------
IN: 
0x000ebd03:  jmp    0xebcf6

----------------
IN: 
0x000ebcf6:  mov    %ebx,%eax
0x000ebcf8:  call   0xebcdf

----------------
IN: 
0x0ffb9f1e:  add    $0x26c,%esp
0x0ffb9f24:  pop    %ebx
0x0ffb9f25:  pop    %esi
0x0ffb9f26:  pop    %edi
0x0ffb9f27:  pop    %ebp
0x0ffb9f28:  ret    

----------------
IN: 
0x0ffae059:  mov    %ebx,%eax
0x0ffae05b:  mov    0x4(%ebx),%ebx
0x0ffae05e:  mov    0xf6168,%esp
0x0ffae064:  call   0xffadbdc

----------------
IN: 
0x0ffadbdc:  mov    %eax,%ecx
0x0ffadbde:  lea    0x4(%eax),%eax
0x0ffadbe1:  call   0xffab660

----------------
IN: 
0x0ffadbe6:  mov    %ecx,%eax
0x0ffadbe8:  call   0xffadb56

----------------
IN: 
0x0ffadbed:  cmpl   $0xf616c,0xf616c
0x0ffadbf7:  jne    0xffadc04

----------------
IN: 
0x0ffadc04:  ret    

----------------
IN: 
0x0ffae069:  mov    -0x4(%ebx),%esp
0x0ffae06c:  pop    %ebp
0x0ffae06d:  ret    

----------------
IN: 
0x000e97fe:  pop    %ebx
0x000e97ff:  pop    %esi
0x000e9800:  pop    %edi
0x000e9801:  ret    

----------------
IN: 
0x000ec1b1:  pop    %ebx
0x000ec1b2:  ret    

----------------
IN: 
0x0ffb1ddc:  mov    0x3(%esp),%al
0x0ffb1de0:  mov    %al,0xe8f2c
0x0ffb1de5:  and    $0xffffffef,%eax
0x0ffb1de8:  mov    %al,0x3(%esp)
0x0ffb1dec:  lea    0x3(%esp),%edx
0x0ffb1df0:  mov    $0x1060,%eax
0x0ffb1df5:  call   0xffae6f8

----------------
IN: 
0x0ffb1dfa:  mov    %eax,%ebx
0x0ffb1dfc:  test   %eax,%eax
0x0ffb1dfe:  jne    0xffb1e89

----------------
IN: 
0x0ffb1e04:  mov    %esi,%eax
0x0ffb1e06:  movzbl %al,%eax
0x0ffb1e09:  mov    %esi,%ecx
0x0ffb1e0b:  inc    %cl
0x0ffb1e0d:  jne    0xffb1e33

----------------
IN: 
0x0ffb1e0f:  mov    $0x3e8,%edx
0x0ffb1e14:  call   0xffb1d6e

----------------
IN: 
0x0ffb1d6e:  push   %ebx
0x0ffb1d6f:  push   %ecx
0x0ffb1d70:  mov    %edx,(%esp)
0x0ffb1d73:  mov    %al,%bl
0x0ffb1d75:  call   0xec5aa

----------------
IN: 
0x0ffb1d7a:  test   %eax,%eax
0x0ffb1d7c:  jne    0xffb1da0

----------------
IN: 
0x0ffb1d7e:  mov    %bl,%al
0x0ffb1d80:  out    %al,$0x60
0x0ffb1d82:  mov    (%esp),%edx
0x0ffb1d85:  mov    $0x1,%eax
0x0ffb1d8a:  call   0xffb1cea

----------------
IN: 
0x0ffb1cea:  push   %esi
0x0ffb1ceb:  push   %ebx
0x0ffb1cec:  mov    %eax,%esi
0x0ffb1cee:  mov    %edx,%eax
0x0ffb1cf0:  call   0xebc88

----------------
IN: 
0x0ffb1cf5:  mov    %eax,%ebx
0x0ffb1cf7:  in     $0x64,%al
0x0ffb1cf9:  mov    %al,%dl
0x0ffb1cfb:  test   $0x1,%al
0x0ffb1cfd:  je     0xffb1d40

----------------
IN: 
0x0ffb1cff:  movzbl %al,%ecx
0x0ffb1d02:  in     $0x60,%al
0x0ffb1d04:  and    $0x20,%dl
0x0ffb1d07:  jne    0xffb1d2e

----------------
IN: 
0x0ffb1d09:  test   %esi,%esi
0x0ffb1d0b:  jne    0xffb1d12

----------------
IN: 
0x0ffb1d12:  cmp    $0xfa,%al
0x0ffb1d14:  je     0xffb1d66

----------------
IN: 
0x0ffb1d66:  mov    $0xfa,%eax
0x0ffb1d6b:  pop    %ebx
0x0ffb1d6c:  pop    %esi
0x0ffb1d6d:  ret    

----------------
IN: 
0x0ffb1d8f:  test   %eax,%eax
0x0ffb1d91:  js     0xffb1da0

----------------
IN: 
0x0ffb1d93:  cmp    $0xfa,%eax
0x0ffb1d98:  setne  %al
0x0ffb1d9b:  movzbl %al,%eax
0x0ffb1d9e:  neg    %eax
0x0ffb1da0:  pop    %edx
0x0ffb1da1:  pop    %ebx
0x0ffb1da2:  ret    

----------------
IN: 
0x0ffb1e19:  mov    %eax,%ebx
0x0ffb1e1b:  test   %eax,%eax
0x0ffb1e1d:  jne    0xffb1e89

----------------
IN: 
0x0ffb1e1f:  mov    $0xfa0,%edx
0x0ffb1e24:  xor    %eax,%eax
0x0ffb1e26:  call   0xffb1cea

----------------
IN: 
0x0ffb1d0d:  movzbl %al,%eax
0x0ffb1d10:  jmp    0xffb1d6b

----------------
IN: 
0x0ffb1d6b:  pop    %ebx
0x0ffb1d6c:  pop    %esi
0x0ffb1d6d:  ret    

----------------
IN: 
0x0ffb1e2b:  test   %eax,%eax
0x0ffb1e2d:  js     0xffb1e87

----------------
IN: 
0x0ffb1e2f:  mov    %al,(%edi)
0x0ffb1e31:  jmp    0xffb1e89

----------------
IN: 
0x0ffb1e89:  mov    0x2(%esp),%al
0x0ffb1e8d:  mov    %al,0xe8f2c
0x0ffb1e92:  lea    0x2(%esp),%edx
0x0ffb1e96:  mov    $0x1060,%eax
0x0ffb1e9b:  call   0xffae6f8

----------------
IN: 
0x0ffb1ea0:  test   %eax,%eax
0x0ffb1ea2:  je     0xffb1ea6

----------------
IN: 
0x0ffb1ea6:  mov    %ebx,%eax
0x0ffb1ea8:  pop    %edx
0x0ffb1ea9:  pop    %ebx
0x0ffb1eaa:  pop    %esi
0x0ffb1eab:  pop    %edi
0x0ffb1eac:  pop    %ebp
0x0ffb1ead:  ret    

----------------
IN: 
0x0ffb1f70:  test   %eax,%eax
0x0ffb1f72:  je     0xffb1f9b

----------------
IN: 
0x0ffb1f9b:  movzbl 0x2(%esp),%eax
0x0ffb1fa0:  cmp    $0xaa,%al
0x0ffb1fa2:  je     0xffb1fac

----------------
IN: 
0x0ffb1fac:  xor    %edx,%edx
0x0ffb1fae:  mov    $0xf5,%eax
0x0ffb1fb3:  call   0xffb1da3

----------------
IN: 
0x0ffb2164:  pop    %ecx
0x0ffb2165:  pop    %esi
0x0ffb2166:  and    $0x4,%edi
0x0ffb2169:  je     0xffb2198

----------------
IN: 
0x0ffb2198:  mov    $0xf,%ecx
0x0ffb219d:  mov    $0x374,%eax
0x0ffb21a2:  mov    $0x170,%esi
0x0ffb21a7:  push   %eax
0x0ffb21a8:  push   %esi
0x0ffb21a9:  mov    $0x1,%edx
0x0ffb21ae:  mov    %ebx,%eax
0x0ffb21b0:  call   0xffb2062

----------------
IN: 
0x0ffb9bd5:  cmp    0x4(%esp),%bl
0x0ffb9bd9:  jne    0xffb9f0d

----------------
IN: 
0x0ffb9bdf:  mov    0x3(%esp),%al
0x0ffb9be3:  mov    %al,0x68(%esp)
0x0ffb9be7:  test   %esi,%esi
0x0ffb9be9:  jne    0xffb9c9e

----------------
IN: 
0x0ffb9bef:  mov    0x64(%esp),%eax
0x0ffb9bf3:  movzwl (%eax),%esi
0x0ffb9bf6:  mov    %esi,%edi
0x0ffb9bf8:  mov    0x2(%eax),%ax
0x0ffb9bfc:  add    $0x2,%eax
0x0ffb9bff:  mov    %ax,0x4(%esp)
0x0ffb9c04:  mov    $0xe,%al
0x0ffb9c06:  mov    0x4(%esp),%edx
0x0ffb9c0a:  out    %al,(%dx)
0x0ffb9c0b:  mov    $0x5,%eax
0x0ffb9c10:  call   0xebd07

----------------
IN: 
0x000ebd07:  call   0xebc9b

----------------
IN: 
0x000ebc9b:  push   %esi
0x000ebc9c:  push   %ebx
0x000ebc9d:  mov    %eax,%ebx
0x000ebc9f:  call   0xebc18

----------------
IN: 
0x000ebca4:  mov    %eax,%ecx
0x000ebca6:  mov    0xf603c,%esi
0x000ebcac:  cmp    $0x7a120,%ebx
0x000ebcb2:  jbe    0xebcc8

----------------
IN: 
0x000ebcc8:  imul   %ebx,%esi
0x000ebccb:  lea    0x3e7(%esi),%eax
0x000ebcd1:  mov    $0x3e8,%ebx
0x000ebcd6:  xor    %edx,%edx
0x000ebcd8:  div    %ebx
0x000ebcda:  add    %ecx,%eax
0x000ebcdc:  pop    %ebx
0x000ebcdd:  pop    %esi
0x000ebcde:  ret    

----------------
IN: 
0x000ebd0c:  jmp    0xebcf3

----------------
IN: 
0x0ffb9c15:  mov    $0xa,%al
0x0ffb9c17:  mov    0x4(%esp),%edx
0x0ffb9c1b:  out    %al,(%dx)
0x0ffb9c1c:  mov    $0x2,%eax
0x0ffb9c21:  call   0xffad9c4

----------------
IN: 
0x0ffad9c4:  push   %ebx
0x0ffad9c5:  call   0xebc88

----------------
IN: 
0x0ffad9ca:  mov    %eax,%ebx
0x0ffad9cc:  mov    %ebx,%eax
0x0ffad9ce:  call   0xebcdf

----------------
IN: 
0x0ffad9d3:  test   %eax,%eax
0x0ffad9d5:  jne    0xffad9de

----------------
IN: 
0x0ffad9d7:  call   0xec186

----------------
IN: 
0x0ffb1e33:  mov    $0xc8,%edx
0x0ffb1e38:  call   0xffb1d6e

----------------
IN: 
0x0ffb1e3d:  mov    %eax,%ebx
0x0ffb1e3f:  test   %eax,%eax
0x0ffb1e41:  jne    0xffb1e89

----------------
IN: 
0x0ffb1e43:  mov    %esi,%ebp
0x0ffb1e45:  sar    $0xc,%ebp
0x0ffb1e48:  xor    %edx,%edx
0x0ffb1e4a:  cmp    %edx,%ebp
0x0ffb1e4c:  jle    0xffb1e66

----------------
IN: 
0x0ffb1e66:  sar    $0x8,%esi
0x0ffb1e69:  and    $0xf,%esi
0x0ffb1e6c:  add    %edi,%esi
0x0ffb1e6e:  cmp    %esi,%edi
0x0ffb1e70:  je     0xffb1e89

----------------
IN: 
0x0ffb1fb8:  test   %eax,%eax
0x0ffb1fba:  jne    0xffb1ff5

----------------
IN: 
0x0ffb1fbc:  movb   $0x2,0x2(%esp)
0x0ffb1fc1:  lea    0x2(%esp),%edx
0x0ffb1fc5:  mov    $0x10f0,%eax
0x0ffb1fca:  call   0xffb1da3

----------------
IN: 
0x0ffb21b5:  pop    %eax
0x0ffb21b6:  pop    %edx
0x0ffb21b7:  pop    %ebx
0x0ffb21b8:  pop    %esi
0x0ffb21b9:  pop    %edi
0x0ffb21ba:  pop    %ebp
0x0ffb21bb:  ret    

----------------
IN: 
0x0ffb8cd1:  movb   $0xc0,0x476
0x0ffb8cd8:  mov    $0xfd41c,%edx
0x0ffb8cdd:  movzwl %dx,%edx
0x0ffb8ce0:  or     $0xf0000000,%edx
0x0ffb8ce6:  mov    $0xe,%eax
0x0ffb8ceb:  call   0xffad04c

----------------
IN: 
0x0ffb8cf0:  mov    0xffbfde8,%eax
0x0ffb8cf5:  lea    -0x4(%eax),%edi
0x0ffb8cf8:  cmp    $0xfffffffc,%edi
0x0ffb8cfb:  je     0xffb8ef8

----------------
IN: 
0x0ffb8d01:  cmpw   $0x106,0x14(%edi)
0x0ffb8d07:  jne    0xffb8eed

----------------
IN: 
0x0ffb8eed:  mov    0x4(%edi),%edi
0x0ffb8ef0:  sub    $0x4,%edi
0x0ffb8ef3:  jmp    0xffb8cf8

----------------
IN: 
0x0ffb8cf8:  cmp    $0xfffffffc,%edi
0x0ffb8cfb:  je     0xffb8ef8

----------------
IN: 
0x0ffb8ef8:  xor    %ebx,%ebx
0x0ffb8efa:  mov    %ebp,%edx
0x0ffb8efc:  mov    $0xf35f1,%eax
0x0ffb8f01:  call   0xffaba53

----------------
IN: 
0x0ffb8f06:  mov    %eax,%ebp
0x0ffb8f08:  test   %eax,%eax
0x0ffb8f0a:  je     0xffb8f1b

----------------
IN: 
0x0ffb8f1b:  test   %ebx,%ebx
0x0ffb8f1d:  je     0xffb8f47

----------------
IN: 
0x0ffb8f47:  mov    0xffbfde8,%eax
0x0ffb8f4c:  lea    -0x4(%eax),%ebx
0x0ffb8f4f:  cmp    $0xfffffffc,%ebx
0x0ffb8f52:  je     0xffb8f1f

----------------
IN: 
0x0ffb8f54:  cmpw   $0x805,0x14(%ebx)
0x0ffb8f5a:  jne    0xffb8f6e

----------------
IN: 
0x0ffb8f6e:  mov    0x4(%ebx),%ebx
0x0ffb8f71:  sub    $0x4,%ebx
0x0ffb8f74:  jmp    0xffb8f4f

----------------
IN: 
0x0ffb8f4f:  cmp    $0xfffffffc,%ebx
0x0ffb8f52:  je     0xffb8f1f

----------------
IN: 
0x0ffb8f1f:  xor    %edx,%edx
0x0ffb8f21:  mov    $0xf35fc,%eax
0x0ffb8f26:  call   0xffaba53

----------------
IN: 
0x0ffb8f2b:  mov    %eax,%ebx
0x0ffb8f2d:  test   %eax,%eax
0x0ffb8f2f:  je     0xffb8fc2

----------------
IN: 
0x0ffb8fc2:  call   0xffaf41a

----------------
IN: 
0x0ffaf41a:  cmpl   $0xfffffffe,0xffbfbec
0x0ffaf421:  jne    0xffaf432

----------------
IN: 
0x0ffaf423:  mov    $0xf070b,%eax
0x0ffaf428:  call   0xffaf3d9

----------------
IN: 
0x0ffaf42d:  mov    %eax,0xffbfbec
0x0ffaf432:  mov    0xffbfbec,%eax
0x0ffaf437:  not    %eax
0x0ffaf439:  shr    $0x1f,%eax
0x0ffaf43c:  ret    

----------------
IN: 
0x0ffb8fc7:  mov    %eax,%esi
0x0ffb8fc9:  mov    0xffbfde8,%eax
0x0ffb8fce:  lea    -0x4(%eax),%ebx
0x0ffb8fd1:  cmp    $0xfffffffc,%ebx
0x0ffb8fd4:  je     0xffb9022

----------------
IN: 
0x0ffb8fd6:  cmpw   $0x1af4,0x10(%ebx)
0x0ffb8fdc:  jne    0xffb901a

----------------
IN: 
0x0ffb901a:  mov    0x4(%ebx),%ebx
0x0ffb901d:  sub    $0x4,%ebx
0x0ffb9020:  jmp    0xffb8fd1

----------------
IN: 
0x0ffb8fd1:  cmp    $0xfffffffc,%ebx
0x0ffb8fd4:  je     0xffb9022

----------------
IN: 
0x0ffb9022:  call   0xffaf41a

----------------
IN: 
0x0ffaf432:  mov    0xffbfbec,%eax
0x0ffaf437:  not    %eax
0x0ffaf439:  shr    $0x1f,%eax
0x0ffaf43c:  ret    

----------------
IN: 
0x0ffb9027:  mov    %eax,%esi
0x0ffb9029:  mov    0xffbfde8,%eax
0x0ffb902e:  lea    -0x4(%eax),%ebx
0x0ffb9031:  cmp    $0xfffffffc,%ebx
0x0ffb9034:  je     0xffb9082

----------------
IN: 
0x0ffb9036:  cmpw   $0x1af4,0x10(%ebx)
0x0ffb903c:  jne    0xffb907a

----------------
IN: 
0x0ffb907a:  mov    0x4(%ebx),%ebx
0x0ffb907d:  sub    $0x4,%ebx
0x0ffb9080:  jmp    0xffb9031

----------------
IN: 
0x0ffb9031:  cmp    $0xfffffffc,%ebx
0x0ffb9034:  je     0xffb9082

----------------
IN: 
0x0ffb9082:  mov    0xffbfde8,%eax
0x0ffb9087:  lea    -0x4(%eax),%ebx
0x0ffb908a:  cmp    $0xfffffffc,%ebx
0x0ffb908d:  je     0xffb90ac

----------------
IN: 
0x0ffb908f:  cmpl   $0x121000,0x10(%ebx)
0x0ffb9096:  jne    0xffb90a4

----------------
IN: 
0x0ffb90a4:  mov    0x4(%ebx),%ebx
0x0ffb90a7:  sub    $0x4,%ebx
0x0ffb90aa:  jmp    0xffb908a

----------------
IN: 
0x0ffb908a:  cmp    $0xfffffffc,%ebx
0x0ffb908d:  je     0xffb90ac

----------------
IN: 
0x0ffb90ac:  mov    0xffbfde8,%eax
0x0ffb90b1:  lea    -0x4(%eax),%ebx
0x0ffb90b4:  cmp    $0xfffffffc,%ebx
0x0ffb90b7:  je     0xffb90d6

----------------
IN: 
0x0ffb90b9:  cmpl   $0x20201022,0x10(%ebx)
0x0ffb90c0:  jne    0xffb90ce

----------------
IN: 
0x0ffb90ce:  mov    0x4(%ebx),%ebx
0x0ffb90d1:  sub    $0x4,%ebx
0x0ffb90d4:  jmp    0xffb90b4

----------------
IN: 
0x0ffb90b4:  cmp    $0xfffffffc,%ebx
0x0ffb90b7:  je     0xffb90d6

----------------
IN: 
0x0ffb90d6:  mov    0xffbfde8,%eax
0x0ffb90db:  lea    -0x4(%eax),%ebx
0x0ffb90de:  cmp    $0xfffffffc,%ebx
0x0ffb90e1:  je     0xffb9143

----------------
IN: 
0x0ffb90e3:  mov    0x10(%ebx),%eax
0x0ffb90e6:  cmp    $0x1028,%ax
0x0ffb90ea:  je     0xffb90f2

----------------
IN: 
0x0ffb90ec:  cmp    $0x1000,%ax
0x0ffb90f0:  jne    0xffb913b

----------------
IN: 
0x0ffb913b:  mov    0x4(%ebx),%ebx
0x0ffb913e:  sub    $0x4,%ebx
0x0ffb9141:  jmp    0xffb90de

----------------
IN: 
0x0ffb90de:  cmp    $0xfffffffc,%ebx
0x0ffb90e1:  je     0xffb9143

----------------
IN: 
0x0ffb9143:  mov    0xffbfde8,%eax
0x0ffb9148:  lea    -0x4(%eax),%ebx
0x0ffb914b:  cmp    $0xfffffffc,%ebx
0x0ffb914e:  je     0xffb916d

----------------
IN: 
0x0ffb9150:  cmpl   $0x7c015ad,0x10(%ebx)
0x0ffb9157:  jne    0xffb9165

----------------
IN: 
0x0ffb9165:  mov    0x4(%ebx),%ebx
0x0ffb9168:  sub    $0x4,%ebx
0x0ffb916b:  jmp    0xffb914b

----------------
IN: 
0x0ffb914b:  cmp    $0xfffffffc,%ebx
0x0ffb914e:  je     0xffb916d

----------------
IN: 
0x0ffb916d:  mov    0xffbfde8,%eax
0x0ffb9172:  lea    -0x4(%eax),%ebx
0x0ffb9175:  cmp    $0xfffffffc,%ebx
0x0ffb9178:  je     0xffb91aa

----------------
IN: 
0x0ffb917a:  cmpw   $0x1000,0x10(%ebx)
0x0ffb9180:  jne    0xffb91a2

----------------
IN: 
0x0ffb91a2:  mov    0x4(%ebx),%ebx
0x0ffb91a5:  sub    $0x4,%ebx
0x0ffb91a8:  jmp    0xffb9175

----------------
IN: 
0x0ffb9175:  cmp    $0xfffffffc,%ebx
0x0ffb9178:  je     0xffb91aa

----------------
IN: 
0x0ffb91aa:  mov    0xffbfde8,%eax
0x0ffb91af:  lea    -0x4(%eax),%ebx
0x0ffb91b2:  cmp    $0xfffffffc,%ebx
0x0ffb91b5:  je     0xffb91d9

----------------
IN: 
0x0ffb91b7:  cmpw   $0x108,0x14(%ebx)
0x0ffb91bd:  jne    0xffb91d1

----------------
IN: 
0x0ffb91d1:  mov    0x4(%ebx),%ebx
0x0ffb91d4:  sub    $0x4,%ebx
0x0ffb91d7:  jmp    0xffb91b2

----------------
IN: 
0x0ffb91b2:  cmp    $0xfffffffc,%ebx
0x0ffb91b5:  je     0xffb91d9

----------------
IN: 
0x0ffb91d9:  mov    $0x37a,%edx
0x0ffb91de:  in     (%dx),%al
0x0ffb91df:  and    $0xffffffdf,%eax
0x0ffb91e2:  out    %al,(%dx)
0x0ffb91e3:  mov    $0x378,%edx
0x0ffb91e8:  mov    $0xaa,%al
0x0ffb91ea:  out    %al,(%dx)
0x0ffb91eb:  in     (%dx),%al
0x0ffb91ec:  xor    %ecx,%ecx
0x0ffb91ee:  cmp    $0xaa,%al
0x0ffb91f0:  jne    0xffb9207

----------------
IN: 
0x0ffb91f2:  movw   $0x378,0x408
0x0ffb91fb:  movb   $0x14,0x478
0x0ffb9202:  mov    $0x1,%ecx
0x0ffb9207:  mov    $0x27a,%edx
0x0ffb920c:  in     (%dx),%al
0x0ffb920d:  and    $0xffffffdf,%eax
0x0ffb9210:  out    %al,(%dx)
0x0ffb9211:  mov    $0x278,%edx
0x0ffb9216:  mov    $0xaa,%al
0x0ffb9218:  out    %al,(%dx)
0x0ffb9219:  in     (%dx),%al
0x0ffb921a:  xor    %ebx,%ebx
0x0ffb921c:  cmp    $0xaa,%al
0x0ffb921e:  jne    0xffb9239

----------------
IN: 
0x0ffb9239:  add    %ecx,%ebx
0x0ffb923b:  movzwl %bx,%eax
0x0ffb923e:  push   %eax
0x0ffb923f:  push   $0xf3699
0x0ffb9244:  call   0xec4d8

----------------
IN: 
0x0ffb9249:  mov    0x410,%eax
0x0ffb924e:  and    $0x3fff,%ax
0x0ffb9252:  shl    $0xe,%ebx
0x0ffb9255:  or     %ebx,%eax
0x0ffb9257:  mov    %ax,0x410
0x0ffb925d:  xor    %edx,%edx
0x0ffb925f:  mov    $0x3f8,%eax
0x0ffb9264:  call   0xffacf36

----------------
IN: 
0x0ffacf36:  push   %esi
0x0ffacf37:  push   %ebx
0x0ffacf38:  mov    %eax,%ebx
0x0ffacf3a:  mov    %edx,%ecx
0x0ffacf3c:  lea    0x1(%eax),%esi
0x0ffacf3f:  mov    $0x2,%al
0x0ffacf41:  mov    %esi,%edx
0x0ffacf43:  out    %al,(%dx)
0x0ffacf44:  in     (%dx),%al
0x0ffacf45:  cmp    $0x2,%al
0x0ffacf47:  jne    0xffacf75

----------------
IN: 
0x0ffacf49:  lea    0x2(%ebx),%edx
0x0ffacf4c:  in     (%dx),%al
0x0ffacf4d:  and    $0x3f,%eax
0x0ffacf50:  mov    %al,%dl
0x0ffacf52:  xor    %eax,%eax
0x0ffacf54:  cmp    $0x2,%dl
0x0ffacf57:  jne    0xffacf77

----------------
IN: 
0x0ffacf59:  mov    %esi,%edx
0x0ffacf5b:  out    %al,(%dx)
0x0ffacf5c:  movzbl %cl,%eax
0x0ffacf5f:  mov    %bx,0x400(%eax,%eax,1)
0x0ffacf67:  movb   $0xa,0x47c(%eax)
0x0ffacf6e:  mov    $0x1,%eax
0x0ffacf73:  jmp    0xffacf77

----------------
IN: 
0x0ffacf77:  pop    %ebx
0x0ffacf78:  pop    %esi
0x0ffacf79:  ret    

----------------
IN: 
0x0ffb9269:  mov    %eax,%ebx
0x0ffb926b:  movzbl %al,%edx
0x0ffb926e:  mov    $0x2f8,%eax
0x0ffb9273:  call   0xffacf36

----------------
IN: 
0x0ffacf75:  xor    %eax,%eax
0x0ffacf77:  pop    %ebx
0x0ffacf78:  pop    %esi
0x0ffacf79:  ret    

----------------
IN: 
0x0ffb9278:  add    %eax,%ebx
0x0ffb927a:  movzbl %bl,%edx
0x0ffb927d:  mov    $0x3e8,%eax
0x0ffb9282:  call   0xffacf36

----------------
IN: 
0x0ffb9287:  add    %eax,%ebx
0x0ffb9289:  movzbl %bl,%edx
0x0ffb928c:  mov    $0x2e8,%eax
0x0ffb9291:  call   0xffacf36

----------------
IN: 
0x0ffb9296:  add    %eax,%ebx
0x0ffb9298:  movzwl %bx,%eax
0x0ffb929b:  push   %eax
0x0ffb929c:  push   $0xf36ad
0x0ffb92a1:  call   0xec4d8

----------------
IN: 
0x0ffb92a6:  mov    0x410,%eax
0x0ffb92ab:  and    $0xf1,%ah
0x0ffb92ae:  shl    $0x9,%ebx
0x0ffb92b1:  or     %ebx,%eax
0x0ffb92b3:  mov    %ax,0x410
0x0ffb92b9:  add    $0x24,%esp
0x0ffb92bc:  pop    %ebx
0x0ffb92bd:  pop    %esi
0x0ffb92be:  pop    %edi
0x0ffb92bf:  pop    %ebp
0x0ffb92c0:  ret    

----------------
IN: 
0x0ffbbea8:  call   0xffad8b7

----------------
IN: 
0x0ffad8b7:  cmpl   $0xf616c,0xf616c
0x0ffad8c1:  je     0xffad8ca

----------------
IN: 
0x0ffad8c3:  call   0xec186

----------------
IN: 
0x0ffad9dc:  jmp    0xffad9cc

----------------
IN: 
0x0ffad9cc:  mov    %ebx,%eax
0x0ffad9ce:  call   0xebcdf

----------------
IN: 
0x0ffad9de:  pop    %ebx
0x0ffad9df:  ret    

----------------
IN: 
0x0ffb9c26:  mov    %esi,%eax
0x0ffb9c28:  call   0xec743

----------------
IN: 
0x000ec743:  movzwl %ax,%ecx
0x000ec746:  xor    %edx,%edx
0x000ec748:  mov    $0x80,%eax
0x000ec74d:  jmp    0xec6ef

----------------
IN: 
0x000ec6ef:  push   %ebp
0x000ec6f0:  push   %edi
0x000ec6f1:  push   %esi
0x000ec6f2:  push   %ebx
0x000ec6f3:  mov    %eax,%esi
0x000ec6f5:  mov    %edx,%edi
0x000ec6f7:  mov    %ecx,%ebp
0x000ec6f9:  mov    $0x7d00,%eax
0x000ec6fe:  call   0xebc88

----------------
IN: 
0x000ec703:  mov    %eax,%ebx
0x000ec705:  lea    0x7(%ebp),%edx
0x000ec708:  in     (%dx),%al
0x000ec709:  mov    %esi,%edx
0x000ec70b:  and    %eax,%edx
0x000ec70d:  mov    %edi,%ecx
0x000ec70f:  cmp    %cl,%dl
0x000ec711:  jne    0xec718

----------------
IN: 
0x000ec713:  movzbl %al,%eax
0x000ec716:  jmp    0xec73e

----------------
IN: 
0x000ec73e:  pop    %ebx
0x000ec73f:  pop    %esi
0x000ec740:  pop    %edi
0x000ec741:  pop    %ebp
0x000ec742:  ret    

----------------
IN: 
0x0ffb9c2d:  test   %eax,%eax
0x0ffb9c2f:  js     0xffb9c97

----------------
IN: 
0x0ffb9c31:  add    $0x6,%edi
0x0ffb9c34:  cmpb   $0x0,0x3(%esp)
0x0ffb9c39:  je     0xffb9c7a

----------------
IN: 
0x0ffb9c7a:  mov    $0xa0,%al
0x0ffb9c7c:  mov    %edi,%edx
0x0ffb9c7e:  out    %al,(%dx)
0x0ffb9c7f:  cmpb   $0x20,0x40(%esp)
0x0ffb9c84:  jne    0xffb9c97

----------------
IN: 
0x0ffb9c97:  mov    $0x8,%al
0x0ffb9c99:  mov    0x4(%esp),%edx
0x0ffb9c9d:  out    %al,(%dx)
0x0ffb9c9e:  mov    $0xa1,%ecx
0x0ffb9ca3:  lea    0x6c(%esp),%edx
0x0ffb9ca7:  lea    0x40(%esp),%eax
0x0ffb9cab:  call   0xffaec4c

----------------
IN: 
0x0ffaec4c:  push   %edi
0x0ffaec4d:  push   %esi
0x0ffaec4e:  push   %ebx
0x0ffaec4f:  sub    $0x20,%esp
0x0ffaec52:  mov    %eax,%edi
0x0ffaec54:  mov    %edx,%ebx
0x0ffaec56:  mov    %ecx,%esi
0x0ffaec58:  mov    $0x200,%ecx
0x0ffaec5d:  xor    %edx,%edx
0x0ffaec5f:  mov    %ebx,%eax
0x0ffaec61:  call   0xeab7b

----------------
IN: 
0x0ffaec66:  mov    $0x14,%ecx
0x0ffaec6b:  lea    0xc(%esp),%eax
0x0ffaec6f:  call   0xeab7b

----------------
IN: 
0x0ffaec74:  mov    %edi,0x10(%esp)
0x0ffaec78:  movw   $0x1,0x16(%esp)
0x0ffaec7f:  movl   $0x1,0x18(%esp)
0x0ffaec87:  movl   $0x0,0x1c(%esp)
0x0ffaec8f:  mov    %ebx,0xc(%esp)
0x0ffaec93:  mov    $0xc,%ecx
0x0ffaec98:  mov    %esp,%eax
0x0ffaec9a:  call   0xeab7b

----------------
IN: 
0x0ffaec9f:  mov    %esi,%eax
0x0ffaeca1:  mov    %al,0x6(%esp)
0x0ffaeca5:  mov    0x24(%edi),%eax
0x0ffaeca8:  mov    (%eax),%si
0x0ffaecab:  mov    0x2(%eax),%bx
0x0ffaecaf:  add    $0x2,%ebx
0x0ffaecb2:  mov    $0xa,%al
0x0ffaecb4:  mov    %ebx,%edx
0x0ffaecb6:  out    %al,(%dx)
0x0ffaecb7:  mov    %esp,%edx
0x0ffaecb9:  mov    %edi,%eax
0x0ffaecbb:  call   0xec7a8

----------------
IN: 
0x000ec7a8:  push   %ebp
0x000ec7a9:  push   %edi
0x000ec7aa:  push   %esi
0x000ec7ab:  push   %ebx
0x000ec7ac:  sub    $0x8,%esp
0x000ec7af:  mov    %edx,%esi
0x000ec7b1:  mov    0x28(%eax),%bl
0x000ec7b4:  mov    0x24(%eax),%eax
0x000ec7b7:  movzwl (%eax),%edi
0x000ec7ba:  mov    %edi,%eax
0x000ec7bc:  call   0xec743

----------------
IN: 
0x000ec7c1:  test   %eax,%eax
0x000ec7c3:  js     0xec87d

----------------
IN: 
0x000ec7c9:  mov    %edi,%ebp
0x000ec7cb:  mov    0x5(%esi),%cl
0x000ec7ce:  and    $0x4f,%ecx
0x000ec7d1:  cmp    $0x1,%bl
0x000ec7d4:  sbb    %eax,%eax
0x000ec7d6:  and    $0xfffffff0,%eax
0x000ec7d9:  sub    $0x50,%eax
0x000ec7dc:  or     %eax,%ecx
0x000ec7de:  lea    0x6(%edi),%edx
0x000ec7e1:  in     (%dx),%al
0x000ec7e2:  mov    %al,%bl
0x000ec7e4:  mov    %cl,%al
0x000ec7e6:  out    %al,(%dx)
0x000ec7e7:  xor    %ebx,%ecx
0x000ec7e9:  and    $0x10,%cl
0x000ec7ec:  jne    0xec843

----------------
IN: 
0x000ec7ee:  mov    0x6(%esi),%cl
0x000ec7f1:  lea    0x1(%ebp),%eax
0x000ec7f4:  mov    %ax,0x2(%esp)
0x000ec7f9:  lea    0x2(%ebp),%edi
0x000ec7fc:  lea    0x3(%ebp),%ebx
0x000ec7ff:  lea    0x4(%ebp),%eax
0x000ec802:  mov    %ax,0x4(%esp)
0x000ec807:  lea    0x5(%ebp),%eax
0x000ec80a:  mov    %ax,0x6(%esp)
0x000ec80f:  mov    %ecx,%eax
0x000ec811:  and    $0xee,%eax
0x000ec816:  cmp    $0x24,%eax
0x000ec819:  jne    0xec850

----------------
IN: 
0x000ec850:  mov    (%esi),%al
0x000ec852:  mov    0x2(%esp),%dx
0x000ec857:  out    %al,(%dx)
0x000ec858:  mov    0x1(%esi),%al
0x000ec85b:  mov    %edi,%edx
0x000ec85d:  out    %al,(%dx)
0x000ec85e:  mov    0x2(%esi),%al
0x000ec861:  mov    %ebx,%edx
0x000ec863:  out    %al,(%dx)
0x000ec864:  mov    0x3(%esi),%al
0x000ec867:  mov    0x4(%esp),%edx
0x000ec86b:  out    %al,(%dx)
0x000ec86c:  mov    0x4(%esi),%al
0x000ec86f:  mov    0x6(%esp),%dx
0x000ec874:  out    %al,(%dx)
0x000ec875:  lea    0x7(%ebp),%edx
0x000ec878:  mov    %cl,%al
0x000ec87a:  out    %al,(%dx)
0x000ec87b:  xor    %eax,%eax
0x000ec87d:  add    $0x8,%esp
0x000ec880:  pop    %ebx
0x000ec881:  pop    %esi
0x000ec882:  pop    %edi
0x000ec883:  pop    %ebp
0x000ec884:  ret    

----------------
IN: 
0x0ffaecc0:  mov    %eax,%ecx
0x0ffaecc2:  test   %eax,%eax
0x0ffaecc4:  jne    0xffaece4

----------------
IN: 
0x0ffaecc6:  movzwl %si,%eax
0x0ffaecc9:  call   0xec786

----------------
IN: 
0x000ec786:  movzwl %ax,%eax
0x000ec789:  call   0xec752

----------------
IN: 
0x000ec752:  push   %esi
0x000ec753:  push   %ebx
0x000ec754:  mov    %eax,%ebx
0x000ec756:  call   0xebc18

----------------
IN: 
0x000ec75b:  mov    %eax,%ecx
0x000ec75d:  imul   $0x190,0xf603c,%eax
0x000ec767:  add    $0xf423f,%eax
0x000ec76c:  mov    $0xf4240,%esi
0x000ec771:  xor    %edx,%edx
0x000ec773:  div    %esi
0x000ec775:  add    %ecx,%eax
0x000ec777:  call   0xebcf3

----------------
IN: 
0x000ec77c:  movzwl %bx,%eax
0x000ec77f:  pop    %ebx
0x000ec780:  pop    %esi
0x000ec781:  jmp    0xec743

----------------
IN: 
0x000ec78e:  test   %eax,%eax
0x000ec790:  js     0xec7a7

----------------
IN: 
0x000ec792:  test   $0x1,%al
0x000ec794:  jne    0xec7a2

----------------
IN: 
0x000ec796:  and    $0x8,%eax
0x000ec799:  cmp    $0x1,%eax
0x000ec79c:  sbb    %eax,%eax
0x000ec79e:  and    $0xfffffffb,%eax
0x000ec7a1:  ret    

----------------
IN: 
0x0ffaecce:  mov    %eax,%ecx
0x0ffaecd0:  test   %eax,%eax
0x0ffaecd2:  jne    0xffaece4

----------------
IN: 
0x0ffaecd4:  mov    $0x200,%edx
0x0ffaecd9:  lea    0xc(%esp),%eax
0x0ffaecdd:  call   0xec885

----------------
IN: 
0x000ec885:  push   %ebp
0x000ec886:  push   %edi
0x000ec887:  push   %esi
0x000ec888:  push   %ebx
0x000ec889:  sub    $0x10,%esp
0x000ec88c:  mov    %eax,%ebx
0x000ec88e:  mov    %edx,(%esp)
0x000ec891:  mov    0x4(%eax),%eax
0x000ec894:  mov    0x24(%eax),%eax
0x000ec897:  mov    (%eax),%di
0x000ec89a:  mov    %di,0x4(%esp)
0x000ec89f:  mov    0x2(%eax),%ax
0x000ec8a3:  mov    %ax,0x6(%esp)
0x000ec8a8:  movzwl 0xa(%ebx),%esi
0x000ec8ac:  mov    (%ebx),%ebp
0x000ec8ae:  mov    $0x2,%ecx
0x000ec8b3:  mov    %edx,%eax
0x000ec8b5:  cltd   
0x000ec8b6:  idiv   %ecx
0x000ec8b8:  mov    %eax,0x8(%esp)
0x000ec8bc:  movzwl %di,%eax
0x000ec8bf:  mov    %eax,0xc(%esp)
0x000ec8c3:  mov    0x8(%esp),%ecx
0x000ec8c7:  mov    %ebp,%edi
0x000ec8c9:  mov    0x4(%esp),%edx
0x000ec8cd:  rep insw (%dx),%es:(%edi)

----------------
IN: 
0x000ec8cd:  rep insw (%dx),%es:(%edi)

----------------
IN: 
0x000ec8d0:  add    (%esp),%ebp
0x000ec8d3:  mov    0x6(%esp),%ax
0x000ec8d8:  lea    0x2(%eax),%edx
0x000ec8db:  in     (%dx),%al
0x000ec8dc:  mov    0xc(%esp),%eax
0x000ec8e0:  call   0xec743

----------------
IN: 
0x000ec8e5:  test   %eax,%eax
0x000ec8e7:  jns    0xec8ef

----------------
IN: 
0x000ec8ef:  and    $0x89,%eax
0x000ec8f4:  dec    %esi
0x000ec8f5:  je     0xec907

----------------
IN: 
0x000ec907:  test   %eax,%eax
0x000ec909:  je     0xec910

----------------
IN: 
0x000ec910:  add    $0x10,%esp
0x000ec913:  pop    %ebx
0x000ec914:  pop    %esi
0x000ec915:  pop    %edi
0x000ec916:  pop    %ebp
0x000ec917:  ret    

----------------
IN: 
0x0ffaece2:  mov    %eax,%ecx
0x0ffaece4:  mov    $0x8,%al
0x0ffaece6:  mov    %ebx,%edx
0x0ffaece8:  out    %al,(%dx)
0x0ffaece9:  mov    %ecx,%eax
0x0ffaeceb:  add    $0x20,%esp
0x0ffaecee:  pop    %ebx
0x0ffaecef:  pop    %esi
0x0ffaecf0:  pop    %edi
0x0ffaecf1:  ret    

----------------
IN: 
0x0ffb9cb0:  test   %eax,%eax
0x0ffb9cb2:  je     0xffb9cc5

----------------
IN: 
0x0ffb9cc5:  lea    0x6c(%esp),%edx
0x0ffb9cc9:  lea    0x40(%esp),%eax
0x0ffb9ccd:  call   0xffae489

----------------
IN: 
0x0ffae489:  push   %edi
0x0ffae48a:  push   %esi
0x0ffae48b:  push   %ebx
0x0ffae48c:  mov    %eax,%edi
0x0ffae48e:  mov    %edx,%esi
0x0ffae490:  mov    $0x2c,%eax
0x0ffae495:  call   0xffae0d4

----------------
IN: 
0x0ffae49a:  mov    %eax,%ebx
0x0ffae49c:  test   %eax,%eax
0x0ffae49e:  jne    0xffae4b1

----------------
IN: 
0x0ffae4b1:  mov    $0x2c,%ecx
0x0ffae4b6:  xor    %edx,%edx
0x0ffae4b8:  call   0xeab7b

----------------
IN: 
0x0ffae4bd:  mov    0x24(%edi),%eax
0x0ffae4c0:  mov    %eax,0x24(%ebx)
0x0ffae4c3:  mov    0x28(%edi),%dl
0x0ffae4c6:  mov    %dl,0x28(%ebx)
0x0ffae4c9:  movzbl 0x8(%eax),%eax
0x0ffae4cd:  add    %eax,%eax
0x0ffae4cf:  movzbl 0x28(%edi),%edx
0x0ffae4d3:  add    %edx,%eax
0x0ffae4d5:  mov    %eax,0x14(%ebx)
0x0ffae4d8:  movzwl (%esi),%eax
0x0ffae4db:  shr    $0x7,%al
0x0ffae4de:  mov    %al,0x18(%ebx)
0x0ffae4e1:  mov    %ebx,%eax
0x0ffae4e3:  pop    %ebx
0x0ffae4e4:  pop    %esi
0x0ffae4e5:  pop    %edi
0x0ffae4e6:  ret    

----------------
IN: 
0x0ffb9cd2:  mov    %eax,%ebx
0x0ffb9cd4:  test   %eax,%eax
0x0ffb9cd6:  je     0xffb9cb4

----------------
IN: 
0x0ffb9cd8:  movb   $0x21,(%eax)
0x0ffb9cdb:  movw   $0x800,0x1a(%eax)
0x0ffb9ce1:  movl   $0xffffffff,0xc(%eax)
0x0ffb9ce8:  movl   $0xffffffff,0x10(%eax)
0x0ffb9cef:  movzbl 0x6d(%esp),%edi
0x0ffb9cf4:  and    $0x1f,%edi
0x0ffb9cf7:  mov    $0xf3897,%ebp
0x0ffb9cfc:  cmp    $0x5,%di
0x0ffb9d00:  je     0xffb9d07

----------------
IN: 
0x0ffb9d07:  lea    0x6c(%esp),%eax
0x0ffb9d0b:  call   0xffab8dc

----------------
IN: 
0x0ffab8dc:  push   %ebx
0x0ffab8dd:  mov    $0xf,%ecx
0x0ffab8e2:  movzwl 0xa0(%eax),%edx
0x0ffab8e9:  movzbl %cl,%eax
0x0ffab8ec:  mov    %edx,%ebx
0x0ffab8ee:  sar    %cl,%ebx
0x0ffab8f0:  and    $0x1,%bl
0x0ffab8f3:  jne    0xffab8fa

----------------
IN: 
0x0ffab8f5:  dec    %ecx
0x0ffab8f6:  jne    0xffab8e9

----------------
IN: 
0x0ffab8e9:  movzbl %cl,%eax
0x0ffab8ec:  mov    %edx,%ebx
0x0ffab8ee:  sar    %cl,%ebx
0x0ffab8f0:  and    $0x1,%bl
0x0ffab8f3:  jne    0xffab8fa

----------------
IN: 
0x0ffab8fa:  pop    %ebx
0x0ffab8fb:  ret    

----------------
IN: 
0x0ffb9d10:  mov    %eax,%esi
0x0ffb9d12:  lea    0x6c(%esp),%edx
0x0ffb9d16:  lea    0x17(%esp),%eax
0x0ffb9d1a:  call   0xffacb29

----------------
IN: 
0x0ffacb29:  push   %ebx
0x0ffacb2a:  mov    %eax,%ebx
0x0ffacb2c:  xor    %eax,%eax
0x0ffacb2e:  mov    0x36(%edx,%eax,2),%cx
0x0ffacb33:  xchg   %ch,%cl
0x0ffacb35:  mov    %cx,(%ebx,%eax,2)
0x0ffacb39:  inc    %eax
0x0ffacb3a:  cmp    $0x14,%eax
0x0ffacb3d:  jne    0xffacb2e

----------------
IN: 
0x0ffacb2e:  mov    0x36(%edx,%eax,2),%cx
0x0ffacb33:  xchg   %ch,%cl
0x0ffacb35:  mov    %cx,(%ebx,%eax,2)
0x0ffacb39:  inc    %eax
0x0ffacb3a:  cmp    $0x14,%eax
0x0ffacb3d:  jne    0xffacb2e

----------------
IN: 
0x0ffacb3f:  movb   $0x0,0x28(%ebx)
0x0ffacb43:  mov    %ebx,%eax
0x0ffacb45:  call   0xffab6d1

----------------
IN: 
0x0ffab6e6:  dec    %eax
0x0ffab6e7:  movb   $0x0,0x1(%eax)
0x0ffab6eb:  jmp    0xffab6dd

----------------
IN: 
0x0ffab6dd:  cmp    %ebx,%eax
0x0ffab6df:  jb     0xffab6f2

----------------
IN: 
0x0ffacb4a:  mov    %ebx,%eax
0x0ffacb4c:  pop    %ebx
0x0ffacb4d:  ret    

----------------
IN: 
0x0ffb9d1f:  push   %ebp
0x0ffb9d20:  push   %esi
0x0ffb9d21:  push   %eax
0x0ffb9d22:  movzbl 0x28(%ebx),%eax
0x0ffb9d26:  push   %eax
0x0ffb9d27:  mov    0x24(%ebx),%eax
0x0ffb9d2a:  movzbl 0x8(%eax),%eax
0x0ffb9d2e:  push   %eax
0x0ffb9d2f:  push   $0xf38a5
0x0ffb9d34:  push   $0x50
0x0ffb9d36:  call   0xffb3cc8

----------------
IN: 
0x0ffb9d3b:  mov    %eax,%esi
0x0ffb9d3d:  push   %eax
0x0ffb9d3e:  push   $0xf38c7
0x0ffb9d43:  call   0xec4d8

----------------
IN: 
0x0ffb9d48:  add    $0x24,%esp
0x0ffb9d4b:  cmp    $0x5,%di
0x0ffb9d4f:  jne    0xffb9eef

----------------
IN: 
0x0ffb9d55:  mov    0x24(%ebx),%eax
0x0ffb9d58:  movzbl 0x28(%ebx),%ecx
0x0ffb9d5c:  movzbl 0x7(%eax),%edx
0x0ffb9d60:  mov    0x10(%eax),%eax
0x0ffb9d63:  call   0xffb3b5c

----------------
IN: 
0x0ffb3b5c:  test   %eax,%eax
0x0ffb3b5e:  je     0xffb3ba3

----------------
IN: 
0x0ffb3b60:  push   %esi
0x0ffb3b61:  push   %ebx
0x0ffb3b62:  sub    $0x100,%esp
0x0ffb3b68:  mov    %edx,%ebx
0x0ffb3b6a:  mov    %ecx,%esi
0x0ffb3b6c:  mov    %eax,%ecx
0x0ffb3b6e:  mov    $0xf1834,%edx
0x0ffb3b73:  mov    %esp,%eax
0x0ffb3b75:  call   0xffb3960

----------------
IN: 
0x0ffb39f4:  push   %edx
0x0ffb39f5:  push   $0xf17fb
0x0ffb39fa:  sub    %ebx,%esi
0x0ffb39fc:  push   %esi
0x0ffb39fd:  push   %ebx
0x0ffb39fe:  call   0xffb244c

----------------
IN: 
0x0ffb3a03:  add    %eax,%ebx
0x0ffb3a05:  add    $0x10,%esp
0x0ffb3a08:  mov    %ebx,%eax
0x0ffb3a0a:  pop    %edx
0x0ffb3a0b:  pop    %ebx
0x0ffb3a0c:  pop    %esi
0x0ffb3a0d:  pop    %edi
0x0ffb3a0e:  pop    %ebp
0x0ffb3a0f:  ret    

----------------
IN: 
0x0ffb3b7a:  push   %esi
0x0ffb3b7b:  push   %ebx
0x0ffb3b7c:  push   $0xf1836
0x0ffb3b81:  lea    0x10c(%esp),%edx
0x0ffb3b88:  sub    %eax,%edx
0x0ffb3b8a:  push   %edx
0x0ffb3b8b:  push   %eax
0x0ffb3b8c:  call   0xffb244c

----------------
IN: 
0x0ffb3b91:  lea    0x14(%esp),%eax
0x0ffb3b95:  call   0xffaf3d9

----------------
IN: 
0x0ffb3b9a:  add    $0x114,%esp
0x0ffb3ba0:  pop    %ebx
0x0ffb3ba1:  pop    %esi
0x0ffb3ba2:  ret    

----------------
IN: 
0x0ffb9d68:  mov    %eax,%edi
0x0ffb9d6a:  mov    0x24(%ebx),%eax
0x0ffb9d6d:  movzbl 0x28(%ebx),%ecx
0x0ffb9d71:  movzbl 0x7(%eax),%edx
0x0ffb9d75:  mov    0x10(%eax),%eax
0x0ffb9d78:  lea    0x2(%ebx),%ebp
0x0ffb9d7b:  push   %ebp
0x0ffb9d7c:  call   0xffb3c5d

----------------
IN: 
0x0ffb3c5d:  push   %edi
0x0ffb3c5e:  push   %esi
0x0ffb3c5f:  push   %ebx
0x0ffb3c60:  sub    $0x100,%esp
0x0ffb3c66:  mov    0x110(%esp),%ebx
0x0ffb3c6d:  test   %eax,%eax
0x0ffb3c6f:  je     0xffb3cbe

----------------
IN: 
0x0ffb3c71:  mov    %edx,%esi
0x0ffb3c73:  mov    %ecx,%edi
0x0ffb3c75:  mov    %eax,%ecx
0x0ffb3c77:  mov    $0xf1834,%edx
0x0ffb3c7c:  mov    %esp,%eax
0x0ffb3c7e:  call   0xffb3960

----------------
IN: 
0x0ffb3c83:  push   %edi
0x0ffb3c84:  push   %esi
0x0ffb3c85:  push   $0xf1836
0x0ffb3c8a:  lea    0x10c(%esp),%edx
0x0ffb3c91:  sub    %eax,%edx
0x0ffb3c93:  push   %edx
0x0ffb3c94:  push   %eax
0x0ffb3c95:  call   0xffb244c

----------------
IN: 
0x0ffb3c9a:  lea    0x14(%esp),%eax
0x0ffb3c9e:  call   0xffaf390

----------------
IN: 
0x0ffaf390:  push   %ebp
0x0ffaf391:  push   %edi
0x0ffaf392:  push   %esi
0x0ffaf393:  push   %ebx
0x0ffaf394:  push   %ecx
0x0ffaf395:  mov    %eax,%esi
0x0ffaf397:  push   %eax
0x0ffaf398:  push   $0xf06cd
0x0ffaf39d:  call   0xec4d8

----------------
IN: 
0x0ffaf3a2:  mov    0xffbff34,%eax
0x0ffaf3a7:  mov    %eax,0x8(%esp)
0x0ffaf3ab:  mov    0xffbfe58,%ebx
0x0ffaf3b1:  pop    %edi
0x0ffaf3b2:  pop    %ebp
0x0ffaf3b3:  xor    %edi,%edi
0x0ffaf3b5:  cmp    %edi,(%esp)
0x0ffaf3b8:  jle    0xffaf3cf

----------------
IN: 
0x0ffaf3cf:  xor    %ebp,%ebp
0x0ffaf3d1:  mov    %ebp,%eax
0x0ffaf3d3:  pop    %edx
0x0ffaf3d4:  pop    %ebx
0x0ffaf3d5:  pop    %esi
0x0ffaf3d6:  pop    %edi
0x0ffaf3d7:  pop    %ebp
0x0ffaf3d8:  ret    

----------------
IN: 
0x0ffb3ca3:  add    $0x14,%esp
0x0ffb3ca6:  test   %eax,%eax
0x0ffb3ca8:  je     0xffb3cbe

----------------
IN: 
0x0ffb3cbe:  add    $0x100,%esp
0x0ffb3cc4:  pop    %ebx
0x0ffb3cc5:  pop    %esi
0x0ffb3cc6:  pop    %edi
0x0ffb3cc7:  ret    

----------------
IN: 
0x0ffb9d81:  mov    %edi,%ecx
0x0ffb9d83:  mov    %esi,%edx
0x0ffb9d85:  mov    %ebx,%eax
0x0ffb9d87:  call   0xffb9aae

----------------
IN: 
0x0ffb9aae:  push   %ebp
0x0ffb9aaf:  push   %edi
0x0ffb9ab0:  push   %esi
0x0ffb9ab1:  push   %ebx
0x0ffb9ab2:  mov    %eax,%edi
0x0ffb9ab4:  mov    %edx,%ebx
0x0ffb9ab6:  mov    %ecx,%ebp
0x0ffb9ab8:  testb  $0x1,0xf5d00
0x0ffb9abf:  je     0xffb9ae6

----------------
IN: 
0x0ffb9ac1:  call   0xffb99ed

----------------
IN: 
0x0ffb99ed:  push   %ebx
0x0ffb99ee:  sub    $0x814,%esp
0x0ffb99f4:  mov    %eax,%ebx
0x0ffb99f6:  mov    $0x14,%ecx
0x0ffb99fb:  xor    %edx,%edx
0x0ffb99fd:  mov    %esp,%eax
0x0ffb99ff:  call   0xeab7b

----------------
IN: 
0x0ffb9a04:  mov    %ebx,0x4(%esp)
0x0ffb9a08:  call   0xef330

----------------
IN: 
0x000ef330:  push   %ebp
0x000ef331:  push   %edi
0x000ef332:  push   %esi
0x000ef333:  push   %ebx
0x000ef334:  sub    $0x28,%esp
0x000ef337:  mov    %eax,%ebx
0x000ef339:  mov    $0x1388,%eax
0x000ef33e:  call   0xebc88

----------------
IN: 
0x000ef343:  mov    %eax,%esi
0x000ef345:  movl   $0x0,(%esp)
0x000ef34c:  mov    $0x3,%edi
0x000ef351:  mov    %esi,%eax
0x000ef353:  call   0xebcdf

----------------
IN: 
0x000ef358:  test   %eax,%eax
0x000ef35a:  je     0xef36c

----------------
IN: 
0x000ef36c:  lea    0x16(%esp),%ebp
0x000ef370:  mov    $0x10,%ecx
0x000ef375:  xor    %edx,%edx
0x000ef377:  mov    %ebp,%eax
0x000ef379:  call   0xeab7b

----------------
IN: 
0x000ef37e:  movb   $0x0,0x16(%esp)
0x000ef383:  movb   $0x20,0x8(%ebx)
0x000ef387:  movl   $0x0,(%ebx)
0x000ef38d:  mov    %ebp,0x10(%ebx)
0x000ef390:  movl   $0x0,0xa(%ebx)
0x000ef397:  mov    %ebx,%eax
0x000ef399:  call   0xef2ee

----------------
IN: 
0x000ef2ee:  push   %esi
0x000ef2ef:  push   %ebx
0x000ef2f0:  mov    %eax,%ebx
0x000ef2f2:  movzwl 0xa(%eax),%esi
0x000ef2f6:  mov    0x4(%eax),%eax
0x000ef2f9:  movzwl 0x1a(%eax),%eax
0x000ef2fd:  imul   %esi,%eax
0x000ef300:  cmp    $0x10000,%eax
0x000ef305:  jle    0xef314

----------------
IN: 
0x000ef314:  mov    %ebx,%eax
0x000ef316:  call   0xee6cd

----------------
IN: 
0x000ee6cd:  push   %ebp
0x000ee6ce:  push   %edi
0x000ee6cf:  push   %esi
0x000ee6d0:  push   %ebx
0x000ee6d1:  sub    $0xe0,%esp
0x000ee6d7:  mov    %eax,(%esp)
0x000ee6da:  mov    0x4(%eax),%ebp
0x000ee6dd:  mov    0x0(%ebp),%al
0x000ee6e0:  cmp    $0x71,%al
0x000ee6e2:  je     0xee873

----------------
IN: 
0x000ee6e8:  ja     0xee70e

----------------
IN: 
0x000ee6ea:  cmp    $0x60,%al
0x000ee6ec:  je     0xee89f

----------------
IN: 
0x000ee6f2:  ja     0xee705

----------------
IN: 
0x000ee6f4:  cmp    $0x50,%al
0x000ee6f6:  je     0xee767

----------------
IN: 
0x000ee6f8:  cmp    $0x51,%al
0x000ee6fa:  je     0xee794

----------------
IN: 
0x000ee700:  jmp    0xeecc1

----------------
IN: 
0x000eecc1:  cmp    $0x21,%al
0x000eecc3:  je     0xeece9

----------------
IN: 
0x000eece9:  mov    (%esp),%eax
0x000eecec:  mov    0x8(%eax),%bl
0x000eecef:  lea    -0x3(%ebx),%eax
0x000eecf2:  test   $0xfd,%al
0x000eecf4:  je     0xef25d

----------------
IN: 
0x000eecfa:  mov    $0xc,%ecx
0x000eecff:  lea    0x41(%esp),%edx
0x000eed03:  mov    (%esp),%eax
0x000eed06:  call   0xeadb8

----------------
IN: 
0x000eadb8:  push   %ebp
0x000eadb9:  push   %edi
0x000eadba:  push   %esi
0x000eadbb:  push   %ebx
0x000eadbc:  mov    %eax,%ebx
0x000eadbe:  mov    %edx,%ebp
0x000eadc0:  mov    0x8(%eax),%al
0x000eadc3:  cmp    $0x3,%al
0x000eadc5:  ja     0xeadcd

----------------
IN: 
0x000eadcd:  cmp    $0x20,%al
0x000eadcf:  je     0xeae0b

----------------
IN: 
0x000eae0b:  mov    0x10(%ebx),%esi
0x000eae0e:  mov    %edx,%edi
0x000eae10:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000eae10:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000eae12:  movzwl 0xc(%ebx),%eax
0x000eae16:  pop    %ebx
0x000eae17:  pop    %esi
0x000eae18:  pop    %edi
0x000eae19:  pop    %ebp
0x000eae1a:  ret    

----------------
IN: 
0x000eed0b:  mov    %eax,%edi
0x000eed0d:  mov    %bl,%al
0x000eed0f:  test   %edi,%edi
0x000eed11:  js     0xef11a

----------------
IN: 
0x000eed17:  mov    0x24(%ebp),%eax
0x000eed1a:  mov    (%eax),%si
0x000eed1d:  mov    %si,0x8(%esp)
0x000eed22:  mov    0x2(%eax),%si
0x000eed26:  mov    $0xc,%ecx
0x000eed2b:  xor    %edx,%edx
0x000eed2d:  lea    0x74(%esp),%eax
0x000eed31:  call   0xeab7b

----------------
IN: 
0x000eed36:  mov    %di,0x77(%esp)
0x000eed3b:  movb   $0xa0,0x7a(%esp)
0x000eed40:  lea    0x2(%esi),%eax
0x000eed43:  mov    %ax,0x4(%esp)
0x000eed48:  mov    $0xa,%al
0x000eed4a:  mov    0x4(%esp),%edx
0x000eed4e:  out    %al,(%dx)
0x000eed4f:  lea    0x74(%esp),%edx
0x000eed53:  mov    %ebp,%eax
0x000eed55:  call   0xec7a8

----------------
IN: 
0x000eed5a:  mov    %eax,%ebx
0x000eed5c:  test   %eax,%eax
0x000eed5e:  jne    0xeedce

----------------
IN: 
0x000eed60:  movzwl 0x8(%esp),%ebp
0x000eed65:  mov    %ebp,%eax
0x000eed67:  call   0xec786

----------------
IN: 
0x000eed6c:  mov    %eax,%ebx
0x000eed6e:  test   %eax,%eax
0x000eed70:  jne    0xeedce

----------------
IN: 
0x000eed72:  mov    $0x6,%ecx
0x000eed77:  lea    0x41(%esp),%esi
0x000eed7b:  mov    0x8(%esp),%edx
0x000eed7f:  rep outsw %es:(%esi),(%dx)

----------------
IN: 
0x000eed7f:  rep outsw %es:(%esi),(%dx)

----------------
IN: 
0x000eed83:  mov    0x4(%esp),%edx
0x000eed87:  in     (%dx),%al
0x000eed88:  mov    %ebp,%eax
0x000eed8a:  call   0xec743

----------------
IN: 
0x000eed8f:  mov    %eax,%ebx
0x000eed91:  test   %eax,%eax
0x000eed93:  js     0xeedce

----------------
IN: 
0x000eed95:  test   $0x1,%al
0x000eed97:  je     0xeeda1

----------------
IN: 
0x000eed99:  mov    0x8(%esp),%edx
0x000eed9d:  inc    %edx
0x000eed9e:  in     (%dx),%al
0x000eed9f:  jmp    0xeedb6

----------------
IN: 
0x000eedb6:  mov    $0x8,%al
0x000eedb8:  mov    0x4(%esp),%edx
0x000eedbc:  out    %al,(%dx)
0x000eedbd:  jmp    0xef23d

----------------
IN: 
0x000ef23d:  mov    $0xc,%ebx
0x000ef242:  jmp    0xef2e1

----------------
IN: 
0x000ef2e1:  mov    %ebx,%eax
0x000ef2e3:  add    $0xe0,%esp
0x000ef2e9:  pop    %ebx
0x000ef2ea:  pop    %esi
0x000ef2eb:  pop    %edi
0x000ef2ec:  pop    %ebp
0x000ef2ed:  ret    

----------------
IN: 
0x000ef31b:  test   %eax,%eax
0x000ef31d:  je     0xef32d

----------------
IN: 
0x000ef31f:  movzwl 0xa(%ebx),%edx
0x000ef323:  cmp    %edx,%esi
0x000ef325:  jne    0xef32d

----------------
IN: 
0x000ef327:  movw   $0x0,0xa(%ebx)
0x000ef32d:  pop    %ebx
0x000ef32e:  pop    %esi
0x000ef32f:  ret    

----------------
IN: 
0x000ef39e:  test   %eax,%eax
0x000ef3a0:  je     0xef43e

----------------
IN: 
0x000ef3a6:  lea    0x6(%esp),%eax
0x000ef3aa:  mov    $0x10,%ecx
0x000ef3af:  xor    %edx,%edx
0x000ef3b1:  call   0xeab7b

----------------
IN: 
0x000ef3b6:  movb   $0x3,0x6(%esp)
0x000ef3bb:  movb   $0x12,0xa(%esp)
0x000ef3c0:  movb   $0x20,0x8(%ebx)
0x000ef3c4:  mov    %ebp,(%ebx)
0x000ef3c6:  mov    %eax,0x10(%ebx)
0x000ef3c9:  movl   $0x120001,0xa(%ebx)
0x000ef3d0:  mov    %ebx,%eax
0x000ef3d2:  call   0xef2ee

----------------
IN: 
0x000eeda1:  test   %edi,%edi
0x000eeda3:  jne    0xeedb1

----------------
IN: 
0x000eedb1:  and    $0x8,%bl
0x000eedb4:  jne    0xeedc2

----------------
IN: 
0x000eedc2:  mov    %edi,%edx
0x000eedc4:  mov    (%esp),%eax
0x000eedc7:  call   0xec885

----------------
IN: 
0x000eedcc:  mov    %eax,%ebx
0x000eedce:  mov    $0x8,%al
0x000eedd0:  mov    0x4(%esp),%edx
0x000eedd4:  out    %al,(%dx)
0x000eedd5:  jmp    0xef0ee

----------------
IN: 
0x000ef0ee:  test   %ebx,%ebx
0x000ef0f0:  je     0xef2e1

----------------
IN: 
0x000ef32d:  pop    %ebx
0x000ef32e:  pop    %esi
0x000ef32f:  ret    

----------------
IN: 
0x000ef3d7:  test   %eax,%eax
0x000ef3d9:  jne    0xef351

----------------
IN: 
0x000ef3df:  cmpb   $0x3a,0x22(%esp)
0x000ef3e4:  jne    0xef3f8

----------------
IN: 
0x000ef3e6:  dec    %edi
0x000ef3e7:  push   %edi
0x000ef3e8:  push   $0xf374c
0x000ef3ed:  call   0xec4d8

----------------
IN: 
0x000ef3f2:  pop    %edx
0x000ef3f3:  pop    %ecx
0x000ef3f4:  test   %edi,%edi
0x000ef3f6:  je     0xef43b

----------------
IN: 
0x000ef3f8:  cmpb   $0x4,0x22(%esp)
0x000ef3fd:  jne    0xef351

----------------
IN: 
0x000ef351:  mov    %esi,%eax
0x000ef353:  call   0xebcdf

----------------
IN: 
0x000ef43b:  or     $0xffffffff,%eax
0x000ef43e:  add    $0x28,%esp
0x000ef441:  pop    %ebx
0x000ef442:  pop    %esi
0x000ef443:  pop    %edi
0x000ef444:  pop    %ebp
0x000ef445:  ret    

----------------
IN: 
0x0ffb9a0d:  test   %eax,%eax
0x0ffb9a0f:  je     0xffb9a18

----------------
IN: 
0x0ffb9a11:  xor    %ebx,%ebx
0x0ffb9a13:  jmp    0xffb9aa4

----------------
IN: 
0x0ffb9aa4:  mov    %ebx,%eax
0x0ffb9aa6:  add    $0x814,%esp
0x0ffb9aac:  pop    %ebx
0x0ffb9aad:  ret    

----------------
IN: 
0x0ffb9ac6:  mov    %eax,%esi
0x0ffb9ac8:  test   %eax,%eax
0x0ffb9aca:  je     0xffb9ae6

----------------
IN: 
0x0ffb9ae6:  mov    0xffbfe4c,%edx
0x0ffb9aec:  test   %ebp,%ebp
0x0ffb9aee:  js     0xffb9af2

----------------
IN: 
0x0ffb9af2:  push   %ebx
0x0ffb9af3:  mov    %edi,%ecx
0x0ffb9af5:  mov    $0x3,%eax
0x0ffb9afa:  call   0xffae248

----------------
IN: 
0x0ffae2ae:  cmp    %edi,-0x8(%edx)
0x0ffae2b1:  jg     0xffae29e

----------------
IN: 
0x0ffae2b3:  jl     0xffae2d9

----------------
IN: 
0x0ffae2d9:  mov    %edx,(%esp)
0x0ffae2dc:  mov    (%edx),%edx
0x0ffae2de:  jmp    0xffae29a

----------------
IN: 
0x0ffae29a:  test   %edx,%edx
0x0ffae29c:  jne    0xffae2ae

----------------
IN: 
0x0ffb9aff:  pop    %eax
0x0ffb9b00:  pop    %ebx
0x0ffb9b01:  pop    %esi
0x0ffb9b02:  pop    %edi
0x0ffb9b03:  pop    %ebp
0x0ffb9b04:  ret    

----------------
IN: 
0x0ffb9d8c:  pop    %eax
0x0ffb9d8d:  jmp    0xffb9eef

----------------
IN: 
0x0ffb9eef:  mov    0x126(%esp),%ax
0x0ffb9ef7:  mov    $0x1,%esi
0x0ffb9efc:  cmpb   $0x0,0x3(%esp)
0x0ffb9f01:  jne    0xffb9f0d

----------------
IN: 
0x0ffb9f03:  and    $0xdf61,%ax
0x0ffb9f07:  cmp    $0x4041,%ax
0x0ffb9f0b:  jmp    0xffb9f12

----------------
IN: 
0x0ffb9f12:  je     0xffb9f1e

----------------
IN: 
0x0ffb9c9e:  mov    $0xa1,%ecx
0x0ffb9ca3:  lea    0x6c(%esp),%edx
0x0ffb9ca7:  lea    0x40(%esp),%eax
0x0ffb9cab:  call   0xffaec4c

----------------
IN: 
0x0ffaece4:  mov    $0x8,%al
0x0ffaece6:  mov    %ebx,%edx
0x0ffaece8:  out    %al,(%dx)
0x0ffaece9:  mov    %ecx,%eax
0x0ffaeceb:  add    $0x20,%esp
0x0ffaecee:  pop    %ebx
0x0ffaecef:  pop    %esi
0x0ffaecf0:  pop    %edi
0x0ffaecf1:  ret    

----------------
IN: 
0x0ffb9cb4:  lea    0x7(%ebp),%edx
0x0ffb9cb7:  in     (%dx),%al
0x0ffb9cb8:  test   %al,%al
0x0ffb9cba:  je     0xffb9dbf

----------------
IN: 
0x0ffb9dbf:  mov    $0x1,%esi
0x0ffb9dc4:  jmp    0xffb9f0d

----------------
IN: 
0x0ffb1e4e:  movzbl (%edi),%eax
0x0ffb1e51:  mov    $0xc8,%edx
0x0ffb1e56:  call   0xffb1d6e

----------------
IN: 
0x0ffb1e5b:  mov    $0x1,%edx
0x0ffb1e60:  test   %eax,%eax
0x0ffb1e62:  je     0xffb1e4a

----------------
IN: 
0x0ffb1e4a:  cmp    %edx,%ebp
0x0ffb1e4c:  jle    0xffb1e66

----------------
IN: 
0x0ffb1fcf:  test   %eax,%eax
0x0ffb1fd1:  jne    0xffb1ff5

----------------
IN: 
0x0ffb1fd3:  movb   $0x61,0xe8f2c
0x0ffb1fda:  xor    %edx,%edx
0x0ffb1fdc:  mov    $0xf4,%eax
0x0ffb1fe1:  call   0xffb1da3

Servicing hardware INT=0x08
----------------
IN: 
0x0ffad8c8:  jmp    0xffad8b7

----------------
IN: 
0x0ffb1fe6:  test   %eax,%eax
0x0ffb1fe8:  jne    0xffb1ff5

----------------
IN: 
0x0ffb1fea:  push   $0xf13ec
0x0ffb1fef:  call   0xec4d8

----------------
IN: 
0x0ffb1ff4:  pop    %edx
0x0ffb1ff5:  pop    %eax
0x0ffb1ff6:  pop    %ebx
0x0ffb1ff7:  pop    %esi
0x0ffb1ff8:  ret    

----------------
IN: 
0x0ffadbf9:  push   $0xf04cd
0x0ffadbfe:  call   0xec4d8

----------------
IN: 
0x0ffadc03:  pop    %eax
0x0ffadc04:  ret    

----------------
IN: 
0x0ffad8ca:  ret    

----------------
IN: 
0x0ffbbead:  call   0xffb528c

----------------
IN: 
0x0ffb528c:  push   %edi
0x0ffb528d:  lea    0x8(%esp),%edi
0x0ffb5291:  and    $0xfffffff8,%esp
0x0ffb5294:  pushl  -0x4(%edi)
0x0ffb5297:  push   %ebp
0x0ffb5298:  mov    %esp,%ebp
0x0ffb529a:  push   %edi
0x0ffb529b:  push   %esi
0x0ffb529c:  push   %ebx
0x0ffb529d:  sub    $0x314,%esp
0x0ffb52a3:  push   $0xf1d1d
0x0ffb52a8:  call   0xec4d8

----------------
IN: 
0x0ffb52ad:  mov    $0x300,%ecx
0x0ffb52b2:  xor    %edx,%edx
0x0ffb52b4:  lea    -0x310(%ebp),%eax
0x0ffb52ba:  call   0xeab7b

----------------
IN: 
0x0ffb52bf:  mov    0xffbfe60,%esi
0x0ffb52c5:  mov    0xffbfde8,%eax
0x0ffb52ca:  lea    -0x4(%eax),%ebx
0x0ffb52cd:  pop    %ecx
0x0ffb52ce:  cmp    $0xfffffffc,%ebx
0x0ffb52d1:  je     0xffb52fb

----------------
IN: 
0x0ffb52d3:  mov    0x14(%ebx),%eax
0x0ffb52d6:  and    $0x7f,%al
0x0ffb52d8:  cmp    $0x300,%ax
0x0ffb52dc:  je     0xffb52f3

----------------
IN: 
0x0ffb52de:  cmpl   $0x0,0x1c(%ebx)
0x0ffb52e2:  jne    0xffb52f3

----------------
IN: 
0x0ffb52e4:  lea    -0x310(%ebp),%ecx
0x0ffb52ea:  xor    %edx,%edx
0x0ffb52ec:  mov    %ebx,%eax
0x0ffb52ee:  call   0xffb515d

----------------
IN: 
0x0ffaf375:  mov    %esi,%ecx
0x0ffaf377:  mov    $0x30,%edx
0x0ffaf37c:  mov    (%esp),%eax
0x0ffaf37f:  call   0xea07a

----------------
IN: 
0x0ffaf384:  xor    %ebx,%ebx
0x0ffaf386:  mov    %ebx,%eax
0x0ffaf388:  add    $0x8,%esp
0x0ffaf38b:  pop    %ebx
0x0ffaf38c:  pop    %esi
0x0ffaf38d:  pop    %edi
0x0ffaf38e:  pop    %ebp
0x0ffaf38f:  ret    

----------------
IN: 
0x0ffb52f3:  mov    0x4(%ebx),%ebx
0x0ffb52f6:  sub    $0x4,%ebx
0x0ffb52f9:  jmp    0xffb52ce

----------------
IN: 
0x0ffb52ce:  cmp    $0xfffffffc,%ebx
0x0ffb52d1:  je     0xffb52fb

----------------
IN: 
0x0ffab9f5:  mov    %ecx,%eax
0x0ffab9f7:  add    $0x10,%eax
0x0ffab9fa:  mov    %eax,0x8(%ebx)
0x0ffab9fd:  mov    %edx,%eax
0x0ffab9ff:  jmp    0xffaba03

----------------
IN: 
0x0ffb51f6:  test   %ebp,%ebp
0x0ffb51f8:  je     0xffb520f

----------------
IN: 
0x0ffb51fa:  lea    -0xc0000(%eax),%edx
0x0ffb5200:  shr    $0xb,%edx
0x0ffb5203:  mov    %ebx,0x0(%ebp,%edx,8)
0x0ffb5207:  movl   $0x2,0x4(%ebp,%edx,8)
0x0ffb520f:  movzwl (%ebx),%edx
0x0ffb5212:  mov    (%esp),%ecx
0x0ffb5215:  mov    %eax,0x10(%esp)
0x0ffb5219:  call   0xffb5004

----------------
IN: 
0x0ffb50ae:  movzwl 0x1a(%ebx),%eax
0x0ffb50b2:  cmpl   $0x506e5024,(%ebx,%eax,1)
0x0ffb50b9:  jne    0xffb50cb

----------------
IN: 
0x000ca003:  jmp    0xca0a8

----------------
IN: 
0x000ca0a8:  pusha  
0x000ca0a9:  push   %ds
0x000ca0aa:  push   %es
0x000ca0ab:  push   %fs
0x000ca0ad:  push   %gs
0x000ca0af:  cld    
0x000ca0b0:  push   %cs
0x000ca0b1:  pop    %ds
0x000ca0b2:  mov    $0x327,%si
0x000ca0b5:  xor    %di,%di
0x000ca0b7:  call   0xca507

----------------
IN: 
0x000ca507:  push   %ax
0x000ca508:  lods   %ds:(%si),%al
0x000ca509:  test   %al,%al
0x000ca50b:  je     0xca512

----------------
IN: 
0x000ca50d:  call   0xca4e0

----------------
IN: 
0x000ca4e0:  push   %ax
0x000ca4e1:  push   %bx
0x000ca4e2:  push   %bp
0x000ca4e3:  test   %di,%di
0x000ca4e5:  je     0xca4ec

----------------
IN: 
0x000ca4ec:  mov    $0x7,%bx
0x000ca4ef:  mov    $0xe,%ah
0x000ca4f1:  cmp    $0xa,%al
0x000ca4f3:  jne    0xca4f9

----------------
IN: 
0x000ca4f5:  int    $0x10

----------------
IN: 
0x000ca4f7:  mov    $0xd,%al
0x000ca4f9:  int    $0x10

----------------
IN: 
0x000ca4fb:  pop    %bp
0x000ca4fc:  pop    %bx
0x000ca4fd:  pop    %ax
0x000ca4fe:  ret    

----------------
IN: 
0x000ca510:  jmp    0xca508

----------------
IN: 
0x000ca508:  lods   %ds:(%si),%al
0x000ca509:  test   %al,%al
0x000ca50b:  je     0xca512

----------------
IN: 
0x000ca4f9:  int    $0x10

----------------
IN: 
0x000ca512:  pop    %ax
0x000ca513:  ret    

----------------
IN: 
0x000ca0ba:  mov    %bx,%gs
0x000ca0bc:  xor    %di,%di
0x000ca0be:  call   0xca4ff

----------------
IN: 
0x000ca4ff:  push   %ax
0x000ca500:  mov    $0x20,%al
0x000ca502:  call   0xca4e0

----------------
IN: 
0x000ca505:  pop    %ax
0x000ca506:  ret    

----------------
IN: 
0x000ca0c1:  mov    %ax,0x37a
0x000ca0c4:  call   0xca53c

----------------
IN: 
0x000ca53c:  push   %ax
0x000ca53d:  xchg   %al,%ah
0x000ca53f:  call   0xca526

----------------
IN: 
0x000ca526:  ror    $0x4,%al
0x000ca529:  call   0xca52f

----------------
IN: 
0x000ca52f:  push   %ax
0x000ca530:  and    $0xf,%al
0x000ca532:  cmp    $0xa,%al
0x000ca534:  sbb    $0x69,%al
0x000ca536:  das    
0x000ca537:  call   0xca4e0

----------------
IN: 
0x000ca53a:  pop    %ax
0x000ca53b:  ret    

----------------
IN: 
0x000ca52c:  ror    $0x4,%al
0x000ca52f:  push   %ax
0x000ca530:  and    $0xf,%al
0x000ca532:  cmp    $0xa,%al
0x000ca534:  sbb    $0x69,%al
0x000ca536:  das    
0x000ca537:  call   0xca4e0

----------------
IN: 
0x000ca542:  mov    $0x3a,%al
0x000ca544:  call   0xca4e0

----------------
IN: 
0x000ca547:  mov    %ah,%al
0x000ca549:  shr    $0x3,%al
0x000ca54c:  call   0xca526

----------------
IN: 
0x000ca54f:  mov    $0x2e,%al
0x000ca551:  call   0xca4e0

----------------
IN: 
0x000ca554:  mov    %ah,%al
0x000ca556:  and    $0x7,%al
0x000ca558:  call   0xca52f

----------------
IN: 
0x000ca55b:  pop    %ax
0x000ca55c:  ret    

----------------
IN: 
0x000ca0c7:  mov    $0x7b,%di
0x000ca0ca:  call   0xca53c

----------------
IN: 
0x000ca4e7:  mov    %al,(%di)
0x000ca4e9:  inc    %di
0x000ca4ea:  jmp    0xca4fb

----------------
IN: 
0x000ca0cd:  movb   $0x20,0x75
0x000ca0d2:  xor    %di,%di
0x000ca0d4:  call   0xca4ff

----------------
IN: 
0x000ca0d7:  mov    %cs,%ax
0x000ca0d9:  call   0xca51f

----------------
IN: 
0x000ca51f:  xchg   %al,%ah
0x000ca521:  call   0xca526

----------------
IN: 
0x000ca524:  xchg   %al,%ah
0x000ca526:  ror    $0x4,%al
0x000ca529:  call   0xca52f

----------------
IN: 
0x000ca0dc:  push   %ebx
0x000ca0de:  push   %edx
0x000ca0e0:  push   %edi
0x000ca0e2:  stc    
0x000ca0e3:  mov    $0xb101,%ax
0x000ca0e6:  int    $0x1a

----------------
IN: 
0x000ffe6e:  cmp    $0xb1,%ah
0x000ffe71:  je     0xfd20a

----------------
IN: 
0x000fd20a:  cli    
0x000fd20b:  cld    
0x000fd20c:  push   %eax
0x000fd20e:  push   %ecx
0x000fd210:  push   %edx
0x000fd212:  push   %ebx
0x000fd214:  push   %ebp
0x000fd216:  push   %esi
0x000fd218:  push   %edi
0x000fd21a:  push   %es
0x000fd21b:  push   %ds
0x000fd21c:  mov    %ss,%ax
0x000fd21e:  mov    %ax,%ds
0x000fd220:  mov    %esp,%ebx
0x000fd223:  movzwl %sp,%esp
0x000fd227:  mov    %esp,%eax
0x000fd22a:  calll  0xfcb1c

----------------
IN: 
0x000fcb1c:  push   %ebp
0x000fcb1e:  push   %edi
0x000fcb20:  push   %esi
0x000fcb22:  push   %ebx
0x000fcb24:  mov    %eax,%ebx
0x000fcb27:  addr32 mov 0x1c(%eax),%al
0x000fcb2b:  cmp    $0xa,%al
0x000fcb2d:  je     0xfcd57

----------------
IN: 
0x000fcb31:  ja     0xfcbb0

----------------
IN: 
0x000fcb33:  cmp    $0x3,%al
0x000fcb35:  je     0xfcc93

----------------
IN: 
0x000fcb39:  ja     0xfcb67

----------------
IN: 
0x000fcb3b:  cmp    $0x1,%al
0x000fcb3d:  je     0xfcc0a

----------------
IN: 
0x000fcc0a:  addr32 movw $0x210,0x10(%ebx)
0x000fcc10:  mov    %cs:0x5d0c,%eax
0x000fcc15:  addr32 mov %al,0x18(%ebx)
0x000fcc19:  addr32 movl $0x20494350,0x14(%ebx)
0x000fcc22:  addr32 movl $0xfd1dc,0x4(%ebx)
0x000fcc2b:  jmp    0xfce6b

----------------
IN: 
0x000fce6b:  mov    %ebx,%eax
0x000fce6e:  pop    %ebx
0x000fce70:  pop    %esi
0x000fce72:  pop    %edi
0x000fce74:  pop    %ebp
0x000fce76:  jmp    0xfe3f2

----------------
IN: 
0x000fe3f2:  addr32 movb $0x0,0x1d(%eax)
0x000fe3f7:  addr32 andw $0xfffffffe,0x24(%eax)
0x000fe3fc:  retl   

----------------
IN: 
0x000fd230:  mov    %ebx,%esp
0x000fd233:  pop    %ds
0x000fd234:  pop    %es
0x000fd235:  pop    %edi
0x000fd237:  pop    %esi
0x000fd239:  pop    %ebp
0x000fd23b:  pop    %ebx
0x000fd23d:  pop    %edx
0x000fd23f:  pop    %ecx
0x000fd241:  pop    %eax
0x000fd243:  iret   

----------------
IN: 
0x000ca0e8:  jb     0xca140

----------------
IN: 
0x000ca0ea:  cmp    $0x20494350,%edx
0x000ca0f1:  jne    0xca140

----------------
IN: 
0x000ca0f3:  test   %ah,%ah
0x000ca0f5:  jne    0xca140

----------------
IN: 
0x000ca0f7:  mov    $0x341,%si
0x000ca0fa:  xor    %di,%di
0x000ca0fc:  call   0xca507

----------------
IN: 
0x000ca0ff:  mov    %bh,%al
0x000ca101:  call   0xca52f

----------------
IN: 
0x000ca104:  mov    $0x2e,%al
0x000ca106:  call   0xca4e0

----------------
IN: 
0x000ca109:  mov    %bl,%al
0x000ca10b:  call   0xca526

----------------
IN: 
0x000ca10e:  cmp    $0x3,%bh
0x000ca111:  jb     0xca140

----------------
IN: 
0x000ca140:  push   %cs
0x000ca141:  pop    %gs
0x000ca143:  pop    %edi
0x000ca145:  pop    %edx
0x000ca147:  pop    %ebx
0x000ca149:  mov    $0xefff,%bx
0x000ca14c:  inc    %bx
0x000ca14d:  je     0xca179

----------------
IN: 
0x000ca14f:  mov    %bx,%es
0x000ca151:  cmpl   $0x506e5024,%es:0x0
0x000ca15b:  jne    0xca14c

----------------
IN: 
0x000ca14c:  inc    %bx
0x000ca14d:  je     0xca179

----------------
IN: 
0x000ca15d:  xor    %dx,%dx
0x000ca15f:  xor    %si,%si
0x000ca161:  movzbw %es:0x5,%cx
0x000ca167:  lods   %es:(%si),%al
0x000ca169:  add    %al,%dl
0x000ca16b:  loop   0xca167

----------------
IN: 
0x000ca167:  lods   %es:(%si),%al
0x000ca169:  add    %al,%dl
0x000ca16b:  loop   0xca167

----------------
IN: 
0x000ca16d:  jne    0xca14c

----------------
IN: 
0x000ca16f:  mov    $0x346,%si
0x000ca172:  xor    %di,%di
0x000ca174:  call   0xca507

----------------
IN: 
0x000ca177:  jmp    0xca179

----------------
IN: 
0x000ca179:  mov    $0xdfff,%bx
0x000ca17c:  inc    %bx
0x000ca17d:  je     0xca22e

----------------
IN: 
0x000ca181:  mov    %bx,%es
0x000ca183:  cmpl   $0x4d4d5024,%es:0x0
0x000ca18d:  jne    0xca17c

----------------
IN: 
0x000ca17c:  inc    %bx
0x000ca17d:  je     0xca22e

----------------
IN: 
0x000ca18f:  xor    %dx,%dx
0x000ca191:  xor    %si,%si
0x000ca193:  movzbw %es:0x5,%cx
0x000ca199:  lods   %es:(%si),%al
0x000ca19b:  add    %al,%dl
0x000ca19d:  loop   0xca199

----------------
IN: 
0x000ca199:  lods   %es:(%si),%al
0x000ca19b:  add    %al,%dl
0x000ca19d:  loop   0xca199

----------------
IN: 
0x000ca19f:  jne    0xca17c

----------------
IN: 
0x000ca1a1:  mov    $0x34b,%si
0x000ca1a4:  xor    %di,%di
0x000ca1a6:  call   0xca507

----------------
IN: 
0x000ca1a9:  pushal 
0x000ca1ab:  movzbl 0x2,%ecx
0x000ca1b1:  add    0x380,%cx
0x000ca1b5:  add    $0x7,%cx
0x000ca1b8:  and    $0xfffffff8,%cx
0x000ca1bb:  shl    $0x5,%ecx
0x000ca1bf:  mov    $0x18ae1000,%ebx
0x000ca1c5:  mov    $0x30e,%bp
0x000ca1c8:  call   0xca2ba

----------------
IN: 
0x000ca2ba:  push   %eax
0x000ca2bc:  push   %di
0x000ca2bd:  mov    $0x20,%di
0x000ca2c0:  push   %ebx
0x000ca2c2:  push   $0x1
0x000ca2c4:  lcall  *%es:0x7

----------------
IN: 
0x0ffbee07:  mov    0x2(%esi),%ecx
0x0ffbee0a:  cmp    $0xffffffff,%ecx
0x0ffbee0d:  je     0xffbed29

----------------
IN: 
0x0ffbee13:  xor    %edx,%edx
0x0ffbee15:  mov    0xffbfe64(,%edx,4),%eax
0x0ffbee1c:  mov    (%eax),%eax
0x0ffbee1e:  test   %eax,%eax
0x0ffbee20:  je     0xffbee31

----------------
IN: 
0x0ffbee22:  cmp    0x8(%eax),%eax
0x0ffbee25:  jne    0xffbee1c

----------------
IN: 
0x0ffbee1c:  mov    (%eax),%eax
0x0ffbee1e:  test   %eax,%eax
0x0ffbee20:  je     0xffbee31

----------------
IN: 
0x0ffbee31:  inc    %edx
0x0ffbee32:  cmp    $0x5,%edx
0x0ffbee35:  jne    0xffbee15

----------------
IN: 
0x0ffbee15:  mov    0xffbfe64(,%edx,4),%eax
0x0ffbee1c:  mov    (%eax),%eax
0x0ffbee1e:  test   %eax,%eax
0x0ffbee20:  je     0xffbee31

----------------
IN: 
0x0ffbee27:  cmp    0x28(%eax),%ecx
0x0ffbee2a:  jne    0xffbee1c

----------------
IN: 
0x0ffbee37:  jmp    0xffbed29

----------------
IN: 
0x0ffbed29:  xor    %ebx,%ebx
0x0ffbed2b:  jmp    0xffbee4b

----------------
IN: 
0x000ca2c9:  add    $0x6,%sp
0x000ca2cc:  push   %dx
0x000ca2cd:  push   %ax
0x000ca2ce:  pop    %esi
0x000ca2d0:  inc    %esi
0x000ca2d2:  je     0xca2e0

----------------
IN: 
0x000ca2d4:  dec    %esi
0x000ca2d6:  je     0xca2e0

----------------
IN: 
0x000ca2e0:  push   $0x2
0x000ca2e2:  push   %ebx
0x000ca2e4:  push   %ecx
0x000ca2e6:  push   $0x0
0x000ca2e8:  lcall  *%es:0x7

----------------
IN: 
0x0ffbeccb:  mov    $0xffbfe78,%ebp
0x0ffbecd0:  mov    $0xffbfe7c,%eax
0x0ffbecd5:  test   %ebx,%ebx
0x0ffbecd7:  jne    0xffbed1d

----------------
IN: 
0x0ffbed6e:  mov    %ecx,0x8(%esp)
0x0ffbed72:  mov    %edx,0x4(%esp)
0x0ffbed76:  mov    %ebp,%eax
0x0ffbed78:  call   0xffadfb2

----------------
IN: 
0x0ffbed7d:  mov    %eax,%ebx
0x0ffbed7f:  test   %eax,%eax
0x0ffbed81:  jne    0xffbede8

----------------
IN: 
0x0ffbeded:  mov    %ebx,%eax
0x0ffbedef:  call   0xffab916

----------------
IN: 
0x0ffbedf4:  test   %eax,%eax
0x0ffbedf6:  je     0xffbee4b

----------------
IN: 
0x0ffbedf8:  cmp    %ebx,%eax
0x0ffbedfa:  je     0xffbee4b

----------------
IN: 
0x0ffbedfc:  cmpl   $0x0,0x10(%eax)
0x0ffbee00:  je     0xffbee4b

----------------
IN: 
0x0ffbee02:  mov    %esi,0x14(%eax)
0x0ffbee05:  jmp    0xffbee4b

----------------
IN: 
0x000ca2ed:  add    $0xc,%sp
0x000ca2f0:  push   %dx
0x000ca2f1:  push   %ax
0x000ca2f2:  pop    %esi
0x000ca2f4:  mov    $0x2b,%di
0x000ca2f7:  mov    %di,%ax
0x000ca2f9:  xor    %di,%di
0x000ca2fb:  call   0xca4e0

----------------
IN: 
0x000ca2fe:  mov    %esi,%eax
0x000ca301:  call   0xca514

----------------
IN: 
0x000ca514:  ror    $0x10,%eax
0x000ca518:  call   0xca51f

----------------
IN: 
0x000ca51b:  ror    $0x10,%eax
0x000ca51f:  xchg   %al,%ah
0x000ca521:  call   0xca526

----------------
IN: 
0x000ca304:  inc    %esi
0x000ca306:  je     0xca30a

----------------
IN: 
0x000ca308:  dec    %esi
0x000ca30a:  pop    %di
0x000ca30b:  pop    %eax
0x000ca30d:  ret    

----------------
IN: 
0x000ca1cb:  mov    %esi,0x37c
0x000ca1d0:  je     0xca1f2

----------------
IN: 
0x000ca1d2:  push   %es
0x000ca1d3:  xor    %ax,%ax
0x000ca1d5:  mov    %ax,%es
0x000ca1d7:  mov    %esi,%edi
0x000ca1da:  xor    %esi,%esi
0x000ca1dd:  movzbl 0x2,%ecx
0x000ca1e3:  shl    $0x7,%ecx
0x000ca1e7:  rep addr32 movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000ca1e7:  rep addr32 movsl %ds:(%esi),%es:(%edi)

----------------
IN: 
0x000ca1eb:  pop    %es
0x000ca1ec:  mov    0xa2,%al
0x000ca1ef:  mov    %al,0x2
0x000ca1f2:  mov    $0xabd9,%ecx
0x000ca1f8:  add    $0x20ff,%ecx
0x000ca1ff:  and    $0xffffe000,%ecx
0x000ca206:  mov    %ecx,%ebx
0x000ca209:  shr    $0xc,%bx
0x000ca20c:  or     $0x18ae2000,%ebx
0x000ca213:  mov    $0x325,%bp
0x000ca216:  call   0xca2ba

----------------
IN: 
0x000ca219:  add    $0xfff,%esi
0x000ca220:  and    $0xfffff000,%esi
0x000ca227:  mov    %esi,0x382
0x000ca22c:  popal  
0x000ca22e:  xor    %bx,%bx
0x000ca230:  xor    %si,%si
0x000ca232:  movzbw 0x2,%cx
0x000ca237:  shl    $0x9,%cx
0x000ca23a:  lods   %ds:(%si),%al
0x000ca23b:  add    %al,%bl
0x000ca23d:  loop   0xca23a

----------------
IN: 
0x000ca23a:  lods   %ds:(%si),%al
0x000ca23b:  add    %al,%bl
0x000ca23d:  loop   0xca23a

----------------
IN: 
0x000ca23f:  sub    %bl,0x6
0x000ca243:  mov    %gs,%ax
0x000ca245:  mov    %ax,%es
0x000ca247:  movzbw 0x2,%cx
0x000ca24c:  xor    %di,%di
0x000ca24e:  call   0xca4ff

----------------
IN: 
0x000ca251:  call   0xca51f

----------------
IN: 
0x000ca254:  mov    %cs,%si
0x000ca256:  cmp    %si,%ax
0x000ca258:  je     0xca267

----------------
IN: 
0x000ca267:  shl    $0x9,%cx
0x000ca26a:  xor    %si,%si
0x000ca26c:  xor    %di,%di
0x000ca26e:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000ca26e:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000ca26e:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000ca26e:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000ca26e:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000ca26e:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000ca26e:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000ca26e:  rep movsb %cs:(%si),%es:(%di)

----------------
IN: 
0x000ca271:  testb  $0x7,0x37a
0x000ca276:  jne    0xca2a8

----------------
IN: 
0x000ca278:  mov    $0x357,%si
0x000ca27b:  xor    %di,%di
0x000ca27d:  call   0xca507

----------------
IN: 
0x000ca507:  push   %ax
0x000ca508:  lods   %ds:(%si),%al
0x000ca509:  test   %al,%al
0x000ca50b:  je     0xca512

----------------
IN: 
0x000ca50d:  call   0xca4e0

----------------
IN: 
0x000ca4e0:  push   %ax
0x000ca4e1:  push   %bx
0x000ca4e2:  push   %bp
0x000ca4e3:  test   %di,%di
0x000ca4e5:  je     0xca4ec

----------------
IN: 
0x000ca4ec:  mov    $0x7,%bx
0x000ca4ef:  mov    $0xe,%ah
0x000ca4f1:  cmp    $0xa,%al
0x000ca4f3:  jne    0xca4f9

----------------
IN: 
0x000ca4f5:  int    $0x10

----------------
IN: 
0x000ca4f7:  mov    $0xd,%al
0x000ca4f9:  int    $0x10

----------------
IN: 
0x000ca4fb:  pop    %bp
0x000ca4fc:  pop    %bx
0x000ca4fd:  pop    %ax
0x000ca4fe:  ret    

----------------
IN: 
0x000ca510:  jmp    0xca508

----------------
IN: 
0x000ca508:  lods   %ds:(%si),%al
0x000ca509:  test   %al,%al
0x000ca50b:  je     0xca512

----------------
IN: 
0x000ca4f9:  int    $0x10

----------------
IN: 
0x000ca512:  pop    %ax
0x000ca513:  ret    

----------------
IN: 
0x000ca280:  mov    $0x71,%si
0x000ca283:  call   0xca507

----------------
IN: 
0x000ca286:  mov    $0x373,%si
0x000ca289:  call   0xca507

----------------
IN: 
0x000ca28c:  mov    $0xff02,%bx
0x000ca28f:  call   0xca45a

----------------
IN: 
0x000ca45a:  push   %cx
0x000ca45b:  push   %ax
0x000ca45c:  mov    $0x1,%ah
0x000ca45e:  int    $0x16

----------------
IN: 
0x000fe82e:  pushl  $0xb9b6
0x000fe834:  jmp    0xfd371

----------------
IN: 
0x000fd371:  cli    
0x000fd372:  cld    
0x000fd373:  push   %ds
0x000fd374:  push   %eax
0x000fd376:  mov    $0xd980,%eax
0x000fd37c:  mov    %ax,%ds
0x000fd37e:  mov    0xf790,%eax
0x000fd382:  sub    $0x30,%eax
0x000fd386:  addr32 popl 0x1c(%eax)
0x000fd38b:  addr32 popw (%eax)
0x000fd38e:  addr32 mov %edi,0x4(%eax)
0x000fd393:  addr32 mov %esi,0x8(%eax)
0x000fd398:  addr32 mov %ebp,0xc(%eax)
0x000fd39d:  addr32 mov %ebx,0x10(%eax)
0x000fd3a2:  addr32 mov %edx,0x14(%eax)
0x000fd3a7:  addr32 mov %ecx,0x18(%eax)
0x000fd3ac:  addr32 mov %es,0x2(%eax)
0x000fd3b0:  pop    %ecx
0x000fd3b2:  addr32 mov %esp,0x28(%eax)
0x000fd3b7:  addr32 mov %ss,0x2c(%eax)
0x000fd3bb:  addr32 popl 0x20(%eax)
0x000fd3c0:  addr32 popw 0x24(%eax)
0x000fd3c4:  mov    %ds,%dx
0x000fd3c6:  mov    %dx,%ss

----------------
IN: 
0x000fd3c8:  mov    %eax,%esp

----------------
IN: 
0x000fd3cb:  calll  *%ecx

----------------
IN: 
0x000fb9b6:  push   %ebx
0x000fb9b8:  mov    %eax,%ebx
0x000fb9bb:  calll  0xfef60

----------------
IN: 
0x000fef60:  push   %esi
0x000fef62:  push   %ebx
0x000fef64:  push   %edx
0x000fef66:  mov    $0x40,%esi
0x000fef6c:  mov    %si,%es
0x000fef6e:  mov    %es:0x17,%ax
0x000fef72:  shr    $0x4,%ax
0x000fef75:  and    $0x7,%eax
0x000fef79:  addr32 mov %al,0x3(%esp)
0x000fef7e:  mov    %es:0x97,%bl
0x000fef83:  mov    %bl,%dl
0x000fef85:  and    $0x7,%edx
0x000fef89:  cmp    %dl,%al
0x000fef8b:  je     0xfefbe

----------------
IN: 
0x000fefbe:  pop    %eax
0x000fefc0:  pop    %ebx
0x000fefc2:  pop    %esi
0x000fefc4:  retl   

----------------
IN: 
0x000fb9c1:  addr32 mov 0x1d(%ebx),%al
0x000fb9c5:  cmp    $0xa,%al
0x000fb9c7:  je     0xfba52

----------------
IN: 
0x000fb9cb:  ja     0xfb9f5

----------------
IN: 
0x000fb9cd:  cmp    $0x2,%al
0x000fb9cf:  je     0xfba25

----------------
IN: 
0x000fb9d1:  ja     0xfb9e3

----------------
IN: 
0x000fb9d3:  test   %al,%al
0x000fb9d5:  je     0xfba20

----------------
IN: 
0x000fb9d7:  dec    %al
0x000fb9d9:  jne    0xfbaa9

----------------
IN: 
0x000fb9dd:  xor    %ecx,%ecx
0x000fb9e0:  jmp    0xfba68

----------------
IN: 
0x000fba68:  xor    %edx,%edx
0x000fba6b:  mov    %ebx,%eax
0x000fba6e:  pop    %ebx
0x000fba70:  jmp    0xfb5ac

----------------
IN: 
0x000fb5ac:  push   %ebp
0x000fb5ae:  push   %edi
0x000fb5b0:  push   %esi
0x000fb5b2:  push   %ebx
0x000fb5b4:  mov    %eax,%ebx
0x000fb5b7:  mov    %edx,%esi
0x000fb5ba:  mov    %ecx,%edi
0x000fb5bd:  calll  0xf88d8

----------------
IN: 
0x000f88e3:  mov    $0x88d8,%ecx
0x000f88e9:  xor    %edx,%edx
0x000f88ec:  xor    %eax,%eax
0x000f88ef:  jmp    0xf7bd2

----------------
IN: 
0x000fb5c3:  mov    $0x40,%ebp
0x000fb5c9:  mov    %bp,%es
0x000fb5cb:  mov    %es:0x1a,%dx
0x000fb5d0:  mov    %es:0x1c,%ax
0x000fb5d4:  cmp    %dx,%ax
0x000fb5d6:  jne    0xfb5ed

----------------
IN: 
0x000fb5d8:  test   %esi,%esi
0x000fb5db:  jne    0xfb5e5

----------------
IN: 
0x000fb5dd:  addr32 orw $0x40,0x24(%ebx)
0x000fb5e2:  jmp    0xfb67e

----------------
IN: 
0x000fb67e:  pop    %ebx
0x000fb680:  pop    %esi
0x000fb682:  pop    %edi
0x000fb684:  pop    %ebp
0x000fb686:  retl   

----------------
IN: 
0x000fd3ce:  mov    %esp,%eax
0x000fd3d1:  addr32 mov 0x2c(%eax),%ss

----------------
IN: 
0x000fd3d5:  addr32 mov 0x28(%eax),%esp

----------------
IN: 
0x000fd3da:  pop    %edx
0x000fd3dc:  pop    %dx
0x000fd3dd:  addr32 pushw 0x24(%eax)
0x000fd3e1:  addr32 pushl 0x20(%eax)
0x000fd3e6:  addr32 mov 0x4(%eax),%edi
0x000fd3eb:  addr32 mov 0x8(%eax),%esi
0x000fd3f0:  addr32 mov 0xc(%eax),%ebp
0x000fd3f5:  addr32 mov 0x10(%eax),%ebx
0x000fd3fa:  addr32 mov 0x14(%eax),%edx
0x000fd3ff:  addr32 mov 0x18(%eax),%ecx
0x000fd404:  addr32 mov 0x2(%eax),%es
0x000fd408:  addr32 pushl 0x1c(%eax)
0x000fd40d:  addr32 mov (%eax),%ds
0x000fd410:  pop    %eax
0x000fd412:  iret   

----------------
IN: 
0x000ca460:  je     0xca468

----------------
IN: 
0x000ca468:  mov    $0x0,%cx
0x000ca46b:  dec    %cx
0x000ca46c:  js     0xca483

----------------
IN: 
0x000ca483:  pop    %ax
0x000ca484:  pop    %cx
0x000ca485:  ret    

----------------
IN: 
0x000ca292:  pushf  
0x000ca293:  xor    %di,%di
0x000ca295:  call   0xca55d

----------------
IN: 
0x000ca55d:  push   %ax
0x000ca55e:  push   %cx
0x000ca55f:  mov    $0xd,%al
0x000ca561:  call   0xca4e0

----------------
IN: 
0x000ca564:  mov    $0x4f,%cx
0x000ca567:  call   0xca4ff

----------------
IN: 
0x000ca4ff:  push   %ax
0x000ca500:  mov    $0x20,%al
0x000ca502:  call   0xca4e0

----------------
IN: 
0x000ca505:  pop    %ax
0x000ca506:  ret    

----------------
IN: 
0x000ca56a:  loop   0xca567

----------------
IN: 
0x000ca567:  call   0xca4ff

----------------
IN: 
0x000ca56c:  call   0xca4e0

----------------
IN: 
0x000ca56f:  pop    %cx
0x000ca570:  pop    %ax
0x000ca571:  ret    

----------------
IN: 
0x000ca298:  mov    $0x377,%si
0x000ca29b:  call   0xca507

----------------
IN: 
0x000ca29e:  popf   

----------------
IN: 
0x000ca29f:  jne    0xca2a8

----------------
IN: 
0x000ca2a8:  mov    $0xa,%al
0x000ca2aa:  xor    %di,%di
0x000ca2ac:  call   0xca4e0

----------------
IN: 
0x000ca2af:  pop    %gs
0x000ca2b1:  pop    %fs
0x000ca2b3:  pop    %es
0x000ca2b4:  pop    %ds
0x000ca2b5:  popa   
0x000ca2b6:  mov    $0x20,%ax
0x000ca2b9:  lret   

----------------
IN: 
0x0ffb52fb:  lea    -0x310(%ebp),%ecx
0x0ffb5301:  xor    %edx,%edx
0x0ffb5303:  mov    $0xf1d33,%eax
0x0ffb5308:  call   0xffb5111

----------------
IN: 
0x0ffb512c:  call   0xffadc26

----------------
IN: 
0x0ffadc26:  push   %esi
0x0ffadc27:  push   %ebx
0x0ffadc28:  push   %ecx
0x0ffadc29:  mov    %eax,%esi
0x0ffadc2b:  mov    0x84(%eax),%ecx
0x0ffadc31:  mov    %ecx,%eax
0x0ffadc33:  mov    %ecx,(%esp)
0x0ffadc36:  call   0xffab9c9

----------------
IN: 
0x0ffadc3b:  mov    %eax,%ebx
0x0ffadc3d:  test   %eax,%eax
0x0ffadc3f:  mov    (%esp),%ecx
0x0ffadc42:  jne    0xffadc55

----------------
IN: 
0x0ffadc55:  mov    %eax,%edx
0x0ffadc57:  mov    %esi,%eax
0x0ffadc59:  call   *0x88(%esi)

----------------
IN: 
0x0ffadc5f:  test   %eax,%eax
0x0ffadc61:  jg     0xffadc65

----------------
IN: 
0x0ffadc65:  mov    %ebx,%eax
0x0ffadc67:  pop    %edx
0x0ffadc68:  pop    %ebx
0x0ffadc69:  pop    %esi
0x0ffadc6a:  ret    

----------------
IN: 
0x0ffb5131:  test   %eax,%eax
0x0ffb5133:  je     0xffb511d

----------------
IN: 
0x0ffb5135:  test   %esi,%esi
0x0ffb5137:  je     0xffb514d

----------------
IN: 
0x0ffb5139:  lea    -0xc0000(%eax),%edx
0x0ffb513f:  shr    $0xb,%edx
0x0ffb5142:  mov    %ebx,(%esi,%edx,8)
0x0ffb5145:  movl   $0x0,0x4(%esi,%edx,8)
0x0ffb514d:  mov    %edi,%ecx
0x0ffb514f:  xor    %edx,%edx
0x0ffb5151:  call   0xffb5004

----------------
IN: 
0x000cb003:  lret   

----------------
IN: 
0x0ffb5156:  jmp    0xffb511d

----------------
IN: 
0x0ffb511d:  mov    %ebx,%edx
0x0ffb511f:  mov    %ebp,%eax
0x0ffb5121:  call   0xffaba53

----------------
IN: 
0x0ffb530d:  xor    %eax,%eax
0x0ffb530f:  call   0xffab9c9

----------------
IN: 
0x0ffb5314:  cmp    0xffbfe60,%esi
0x0ffb531a:  jae    0xffb5493

----------------
IN: 
0x0ffb5320:  mov    %esi,%eax
0x0ffb5322:  call   0xeda0e

----------------
IN: 
0x0ffb5327:  test   %eax,%eax
0x0ffb5329:  jne    0xffb533c

----------------
IN: 
0x0ffb533c:  movzbl 0x2(%esi),%eax
0x0ffb5340:  shl    $0x9,%eax
0x0ffb5343:  add    $0x7ff,%eax
0x0ffb5348:  and    $0xfffff800,%eax
0x0ffb534d:  add    %esi,%eax
0x0ffb534f:  mov    %eax,-0x314(%ebp)
0x0ffb5355:  movzwl 0x1a(%esi),%ebx
0x0ffb5359:  add    %esi,%ebx
0x0ffb535b:  mov    %esi,%edi
0x0ffb535d:  shr    $0x4,%edi
0x0ffb5360:  mov    %edi,%eax
0x0ffb5362:  cmpl   $0x506e5024,(%ebx)
0x0ffb5368:  jne    0xffb5385

----------------
IN: 
0x0ffb536a:  movl   $0x1,-0x318(%ebp)
0x0ffb5374:  shl    $0x10,%eax
0x0ffb5377:  mov    %eax,-0x31c(%ebp)
0x0ffb537d:  test   %ebx,%ebx
0x0ffb537f:  jne    0xffb5428

----------------
IN: 
0x0ffb5428:  mov    -0x318(%ebp),%eax
0x0ffb542e:  lea    -0x1(%eax),%ecx
0x0ffb5431:  cmpw   $0x0,0x1a(%ebx)
0x0ffb5436:  jne    0xffb53bd

----------------
IN: 
0x0ffb53bd:  mov    %esi,%edx
0x0ffb53bf:  lea    -0x310(%ebp),%eax
0x0ffb53c5:  call   0xffb3ac6

----------------
IN: 
0x0ffb3ac6:  push   %esi
0x0ffb3ac7:  push   %ebx
0x0ffb3ac8:  sub    $0x100,%esp
0x0ffb3ace:  mov    %ecx,%ebx
0x0ffb3ad0:  sub    $0xc0000,%edx
0x0ffb3ad6:  shr    $0xb,%edx
0x0ffb3ad9:  mov    (%eax,%edx,8),%ecx
0x0ffb3adc:  mov    0x4(%eax,%edx,8),%eax
0x0ffb3ae0:  mov    %eax,%esi
0x0ffb3ae2:  or     %ecx,%esi
0x0ffb3ae4:  je     0xffb3b2e

----------------
IN: 
0x0ffb3ae6:  test   $0x2,%al
0x0ffb3ae8:  je     0xffb3b1c

----------------
IN: 
0x0ffb3aea:  mov    $0xf1834,%edx
0x0ffb3aef:  mov    %esp,%eax
0x0ffb3af1:  call   0xffb3960

----------------
IN: 
0x0ffb3af6:  test   %ebx,%ebx
0x0ffb3af8:  je     0xffb3b13

----------------
IN: 
0x0ffb3b13:  mov    %esp,%eax
0x0ffb3b15:  call   0xffaf3d9

----------------
IN: 
0x0ffb3b1a:  jmp    0xffb3b31

----------------
IN: 
0x0ffb3b31:  add    $0x100,%esp
0x0ffb3b37:  pop    %ebx
0x0ffb3b38:  pop    %esi
0x0ffb3b39:  ret    

----------------
IN: 
0x0ffb53ca:  mov    %eax,%edi
0x0ffb53cc:  movzwl 0x10(%ebx),%edx
0x0ffb53d0:  movzwl 0x1a(%ebx),%ecx
0x0ffb53d4:  mov    $0xf1d03,%eax
0x0ffb53d9:  test   %dx,%dx
0x0ffb53dc:  je     0xffb53e7

----------------
IN: 
0x0ffb53de:  mov    %esi,%eax
0x0ffb53e0:  and    $0xffff0,%eax
0x0ffb53e5:  add    %edx,%eax
0x0ffb53e7:  or     -0x31c(%ebp),%ecx
0x0ffb53ed:  mov    0xffbfe44,%edx
0x0ffb53f3:  test   %edi,%edi
0x0ffb53f5:  js     0xffb53f9

----------------
IN: 
0x0ffb53f9:  push   %eax
0x0ffb53fa:  mov    $0x80,%eax
0x0ffb53ff:  call   0xffae248

----------------
IN: 
0x0ffb5404:  movl   $0x270f,0xffbfe44
0x0ffb540e:  pop    %eax
0x0ffb540f:  movzwl 0x6(%ebx),%ebx
0x0ffb5413:  test   %bx,%bx
0x0ffb5416:  je     0xffb5488

----------------
IN: 
0x0ffb5488:  mov    -0x314(%ebp),%esi
0x0ffb548e:  jmp    0xffb5314

----------------
IN: 
0x0ffb3b1c:  lea    0x4(%ecx),%eax
0x0ffb3b1f:  mov    %ebx,%edx
0x0ffb3b21:  add    $0x100,%esp
0x0ffb3b27:  pop    %ebx
0x0ffb3b28:  pop    %esi
0x0ffb3b29:  jmp    0xffb2497

----------------
IN: 
0x0ffb2497:  push   %esi
0x0ffb2498:  push   %ebx
0x0ffb2499:  sub    $0x100,%esp
0x0ffb249f:  mov    %edx,%esi
0x0ffb24a1:  push   %eax
0x0ffb24a2:  push   $0xf15aa
0x0ffb24a7:  push   $0x100
0x0ffb24ac:  lea    0xc(%esp),%ebx
0x0ffb24b0:  push   %ebx
0x0ffb24b1:  call   0xffb244c

----------------
IN: 
0x0ffb24b6:  mov    %ebx,%esp
0x0ffb24b8:  test   %esi,%esi
0x0ffb24ba:  je     0xffb24d6

----------------
IN: 
0x0ffb24d6:  mov    %ebx,%eax
0x0ffb24d8:  call   0xffaf3d9

----------------
IN: 
0x0ffaba96:  cmp    $0x2f,%dl
0x0ffaba99:  je     0xffabac1

----------------
IN: 
0x0ffaba9b:  test   %dl,%dl
0x0ffaba9d:  jne    0xffababf

----------------
IN: 
0x0ffaba9f:  jmp    0xffabac1

----------------
IN: 
0x0ffabac1:  pop    %ebx
0x0ffabac2:  ret    

----------------
IN: 
0x0ffaf40e:  jmp    0xffaf413

----------------
IN: 
0x0ffaf413:  mov    %ebx,%eax
0x0ffaf415:  pop    %ebx
0x0ffaf416:  pop    %esi
0x0ffaf417:  pop    %edi
0x0ffaf418:  pop    %ebp
0x0ffaf419:  ret    

----------------
IN: 
0x0ffb24dd:  add    $0x100,%esp
0x0ffb24e3:  pop    %ebx
0x0ffb24e4:  pop    %esi
0x0ffb24e5:  ret    

----------------
IN: 
0x0ffb53f7:  mov    %edi,%edx
0x0ffb53f9:  push   %eax
0x0ffb53fa:  mov    $0x80,%eax
0x0ffb53ff:  call   0xffae248

----------------
IN: 
0x0ffb5385:  xor    %ecx,%ecx
0x0ffb5387:  mov    %esi,%edx
0x0ffb5389:  lea    -0x310(%ebp),%eax
0x0ffb538f:  call   0xffb3ac6

----------------
IN: 
0x0ffb5394:  shl    $0x10,%edi
0x0ffb5397:  mov    %edi,%ecx
0x0ffb5399:  or     $0x3,%ecx
0x0ffb539c:  mov    0xffbfe48,%edx
0x0ffb53a2:  test   %eax,%eax
0x0ffb53a4:  js     0xffb53a8

----------------
IN: 
0x0ffb53a8:  push   $0xf1d0b
0x0ffb53ad:  mov    $0x81,%eax
0x0ffb53b2:  call   0xffae248

----------------
IN: 
0x0ffb53b7:  pop    %edx
0x0ffb53b8:  jmp    0xffb5488

----------------
IN: 
0x0ffb5493:  lea    -0xc(%ebp),%esp
0x0ffb5496:  pop    %ebx
0x0ffb5497:  pop    %esi
0x0ffb5498:  pop    %edi
0x0ffb5499:  pop    %ebp
0x0ffb549a:  lea    -0x8(%edi),%esp
0x0ffb549d:  pop    %edi
0x0ffb549e:  ret    

----------------
IN: 
0x0ffbbeb2:  mov    $0x1,%edx
0x0ffbbeb7:  xor    %ecx,%ecx
0x0ffbbeb9:  mov    $0xf1698,%eax
0x0ffbbebe:  call   0xffad81f

----------------
IN: 
0x0ffbbec3:  test   %eax,%eax
0x0ffbbec5:  je     0xffbdc4b

----------------
IN: 
0x0ffbdc4b:  call   0xffad8b7

----------------
IN: 
0x0ffbdc50:  mov    0xf5404,%al
0x0ffbdc55:  cmp    $0x1,%al
0x0ffbdc57:  je     0xffbdc62

----------------
IN: 
0x0ffbdc59:  cmp    $0x2,%al
0x0ffbdc5b:  je     0xffbdc8b

----------------
IN: 
0x0ffbdc5d:  jmp    0xffbde31

----------------
IN: 
0x0ffbde31:  mov    $0xf46a3,%edx
0x0ffbde36:  mov    $0x4,%eax
0x0ffbde3b:  call   0xeb423

----------------
IN: 
0x000eb423:  push   %ebx
0x000eb424:  push   %ecx
0x000eb425:  mov    %eax,%ebx
0x000eb427:  mov    %edx,%eax
0x000eb429:  mov    %edx,(%esp)
0x000eb42c:  call   0xe9960

----------------
IN: 
0x000eb431:  push   %eax
0x000eb432:  mov    0x4(%esp),%ecx
0x000eb436:  push   %ecx
0x000eb437:  push   %eax
0x000eb438:  mov    $0x5,%edx
0x000eb43d:  mov    %ebx,%eax
0x000eb43f:  call   0xeb389

----------------
IN: 
0x000eb389:  cmpb   $0x0,0xe8f01
0x000eb390:  je     0xeb422

----------------
IN: 
0x000eb422:  ret    

----------------
IN: 
0x000eb444:  add    $0x10,%esp
0x000eb447:  pop    %ebx
0x000eb448:  ret    

----------------
IN: 
0x0ffbde40:  xor    %ebx,%ebx
0x0ffbde42:  push   $0x4
0x0ffbde44:  push   $0xffbf4d8
0x0ffbde49:  push   $0x4
0x0ffbde4b:  mov    $0xffbf4d8,%ecx
0x0ffbde50:  mov    $0x4,%edx
0x0ffbde55:  mov    %ebx,%eax
0x0ffbde57:  call   0xeb389

----------------
IN: 
0x0ffbde5c:  inc    %ebx
0x0ffbde5d:  add    $0xc,%esp
0x0ffbde60:  cmp    $0x8,%ebx
0x0ffbde63:  jne    0xffbde42

----------------
IN: 
0x0ffbde42:  push   $0x4
0x0ffbde44:  push   $0xffbf4d8
0x0ffbde49:  push   $0x4
0x0ffbde4b:  mov    $0xffbf4d8,%ecx
0x0ffbde50:  mov    $0x4,%edx
0x0ffbde55:  mov    %ebx,%eax
0x0ffbde57:  call   0xeb389

----------------
IN: 
0x0ffbde65:  mov    $0xf070b,%eax
0x0ffbde6a:  call   0xffaf3d9

----------------
IN: 
0x0ffbde6f:  mov    %eax,%edx
0x0ffbde71:  test   %eax,%eax
0x0ffbde73:  js     0xffbde87

----------------
IN: 
0x0ffbde87:  mov    0xffbfe40,%eax
0x0ffbde8c:  sub    $0x10,%eax
0x0ffbde8f:  mov    %eax,(%esp)
0x0ffbde92:  cmpl   $0xfffffff0,(%esp)
0x0ffbde96:  je     0xffbe2d5

----------------
IN: 
0x0ffbde9c:  mov    (%esp),%eax
0x0ffbde9f:  mov    (%eax),%eax
0x0ffbdea1:  cmp    $0x3,%eax
0x0ffbdea4:  je     0xffbe2a8

----------------
IN: 
0x0ffbdeaa:  jg     0xffbdebb

----------------
IN: 
0x0ffbdebb:  cmp    $0x81,%eax
0x0ffbdec0:  jne    0xffbe2bd

----------------
IN: 
0x0ffbe2bd:  mov    (%esp),%eax
0x0ffbe2c0:  mov    0x4(%eax),%edx
0x0ffbe2c3:  mov    (%eax),%eax
0x0ffbe2c5:  call   0xffabb0a

----------------
IN: 
0x0ffabb0a:  push   %ebx
0x0ffabb0b:  mov    %edx,%ecx
0x0ffabb0d:  cmp    $0x2,%eax
0x0ffabb10:  jne    0xffabb49

----------------
IN: 
0x0ffabb49:  cmp    $0x1,%eax
0x0ffabb4c:  jne    0xffabb25

----------------
IN: 
0x0ffabb25:  mov    0xf5408,%edx
0x0ffabb2b:  cmp    $0x13,%edx
0x0ffabb2e:  ja     0xffabb5f

----------------
IN: 
0x0ffabb30:  lea    0x1(%edx),%ebx
0x0ffabb33:  mov    %ebx,0xf5408
0x0ffabb39:  mov    %eax,0xf5420(,%edx,8)
0x0ffabb40:  mov    %ecx,0xf5424(,%edx,8)
0x0ffabb47:  jmp    0xffabb5f

----------------
IN: 
0x0ffabb5f:  pop    %ebx
0x0ffabb60:  ret    

----------------
IN: 
0x0ffbe2ca:  mov    (%esp),%eax
0x0ffbe2cd:  mov    0x10(%eax),%eax
0x0ffbe2d0:  jmp    0xffbde8c

----------------
IN: 
0x0ffbde8c:  sub    $0x10,%eax
0x0ffbde8f:  mov    %eax,(%esp)
0x0ffbde92:  cmpl   $0xfffffff0,(%esp)
0x0ffbde96:  je     0xffbe2d5

----------------
IN: 
0x0ffbdec6:  mov    (%esp),%eax
0x0ffbdec9:  movzwl 0x4(%eax),%edx
0x0ffbdecd:  movzwl 0x6(%eax),%eax
0x0ffbded1:  shl    $0x4,%eax
0x0ffbded4:  xor    %ecx,%ecx
0x0ffbded6:  call   0xee4d2

----------------
IN: 
0x000cb803:  push   %es
0x000cb804:  push   %cs
0x000cb805:  pop    %es
0x000cb806:  xor    %ax,%ax
0x000cb808:  mov    $0x1000,%cx
0x000cb80b:  lea    0x300,%di
0x000cb80f:  cld    
0x000cb810:  rep stos %ax,%es:(%di)

----------------
IN: 
0x000cb810:  rep stos %ax,%es:(%di)

----------------
IN: 
0x000cb812:  pop    %es
0x000cb813:  mov    $0x20,%ax
0x000cb816:  out    %ax,$0x7e
0x000cb818:  lret   

----------------
IN: 
0x0ffbdedb:  jmp    0xffbe29f

----------------
IN: 
0x0ffbe29f:  xor    %edx,%edx
0x0ffbe2a1:  mov    $0x2,%eax
0x0ffbe2a6:  jmp    0xffbe2c5

----------------
IN: 
0x0ffbe2c5:  call   0xffabb0a

----------------
IN: 
0x0ffabb12:  mov    0xffbff2c,%edx
0x0ffabb18:  lea    0x1(%edx),%ebx
0x0ffabb1b:  mov    %ebx,0xffbff2c
0x0ffabb21:  test   %edx,%edx
0x0ffabb23:  jne    0xffabb5f

----------------
IN: 
0x0ffbdeac:  cmp    $0x1,%eax
0x0ffbdeaf:  je     0xffbdee0

----------------
IN: 
0x0ffbdee0:  mov    (%esp),%eax
0x0ffbdee3:  mov    0x4(%eax),%ecx
0x0ffbdee6:  mov    $0xf6160,%edx
0x0ffbdeeb:  mov    $0xf60a0,%eax
0x0ffbdef0:  call   0xffadc05

----------------
IN: 
0x0ffadc05:  push   %ebx
0x0ffadc06:  mov    %eax,%ebx
0x0ffadc08:  movzbl (%edx),%eax
0x0ffadc0b:  cmp    $0xf,%al
0x0ffadc0d:  jbe    0xffadc1f

----------------
IN: 
0x0ffadc1f:  mov    %ecx,(%ebx,%eax,4)
0x0ffadc22:  incb   (%edx)
0x0ffadc24:  pop    %ebx
0x0ffadc25:  ret    

----------------
IN: 
0x0ffbdef5:  cmpb   $0x1,0xf6160
0x0ffbdefc:  jne    0xffbdf18

----------------
IN: 
0x0ffbdefe:  mov    0x410,%eax
0x0ffbdf03:  and    $0xffffffbe,%eax
0x0ffbdf06:  or     $0x1,%eax
0x0ffbdf09:  mov    %ax,0x410
0x0ffbdf0f:  movb   $0x7,0x48f
0x0ffbdf16:  jmp    0xffbdf29

----------------
IN: 
0x0ffbdf29:  xor    %edx,%edx
0x0ffbdf2b:  mov    $0x1,%eax
0x0ffbdf30:  jmp    0xffbe2c5

----------------
IN: 
0x0ffabb4e:  mov    0xffbff28,%edx
0x0ffabb54:  lea    0x1(%edx),%ebx
0x0ffabb57:  mov    %ebx,0xffbff28
0x0ffabb5d:  jmp    0xffabb21

----------------
IN: 
0x0ffabb21:  test   %edx,%edx
0x0ffabb23:  jne    0xffabb5f

----------------
IN: 
0x0ffbe2a8:  mov    (%esp),%eax
0x0ffbe2ab:  mov    0x4(%eax),%ecx
0x0ffbe2ae:  mov    $0xffbff48,%edx
0x0ffbe2b3:  mov    $0xf6120,%eax
0x0ffbe2b8:  call   0xffadc05

----------------
IN: 
0x0ffbe2d5:  xor    %edx,%edx
0x0ffbe2d7:  mov    $0x1,%eax
0x0ffbe2dc:  call   0xffabb0a

----------------
IN: 
0x0ffbe2e1:  xor    %edx,%edx
0x0ffbe2e3:  mov    $0x2,%eax
0x0ffbe2e8:  call   0xffabb0a

----------------
IN: 
0x0ffbe2ed:  cmpb   $0x0,0xffbff48
0x0ffbe2f4:  je     0xffbe346

----------------
IN: 
0x0ffbe2f6:  call   0xffae452

----------------
IN: 
0x0ffae452:  push   %ebx
0x0ffae453:  xor    %ebx,%ebx
0x0ffae455:  cmpl   $0x0,0xf608c
0x0ffae45c:  jne    0xffae485

----------------
IN: 
0x0ffae45e:  mov    $0x800,%eax
0x0ffae463:  call   0xffae0c3

----------------
IN: 
0x0ffae0c3:  mov    %eax,%edx
0x0ffae0c5:  mov    $0x10,%ecx
0x0ffae0ca:  mov    $0xffbfe88,%eax
0x0ffae0cf:  jmp    0xffadfb2

----------------
IN: 
0x0ffae468:  test   %eax,%eax
0x0ffae46a:  jne    0xffae480

----------------
IN: 
0x0ffae480:  mov    %eax,0xf608c
0x0ffae485:  mov    %ebx,%eax
0x0ffae487:  pop    %ebx
0x0ffae488:  ret    

----------------
IN: 
0x0ffbe2fb:  test   %eax,%eax
0x0ffbe2fd:  js     0xffbe346

----------------
IN: 
0x0ffbe2ff:  mov    $0x24,%eax
0x0ffbe304:  call   0xffae0d4

----------------
IN: 
0x0ffbe309:  test   %eax,%eax
0x0ffbe30b:  jne    0xffbe31e

----------------
IN: 
0x0ffbe31e:  mov    %eax,0xf6088
0x0ffbe323:  mov    $0x24,%ecx
0x0ffbe328:  xor    %edx,%edx
0x0ffbe32a:  call   0xeab7b

----------------
IN: 
0x0ffbe32f:  movb   $0x40,(%eax)
0x0ffbe332:  movw   $0x200,0x1a(%eax)
0x0ffbe338:  movl   $0xffffffff,0xc(%eax)
0x0ffbe33f:  movl   $0xffffffff,0x10(%eax)
0x0ffbe346:  movl   $0x0,0xf5d10
0x0ffbe350:  movl   $0x0,0xf5d17
0x0ffbe35a:  call   0xe99b2

----------------
IN: 
0x0ffbe35f:  mov    %eax,%esi
0x0ffbe361:  mov    0xffbfe60,%eax
0x0ffbe366:  mov    %esi,%ecx
0x0ffbe368:  sub    %eax,%ecx
0x0ffbe36a:  xor    %edx,%edx
0x0ffbe36c:  call   0xeab7b

----------------
IN: 
0x0ffbe371:  movw   $0xaa55,(%esi)
0x0ffbe376:  mov    $0xf0000,%eax
0x0ffbe37b:  sub    %esi,%eax
0x0ffbe37d:  mov    %eax,%edx
0x0ffbe37f:  shr    $0x9,%edx
0x0ffbe382:  cmp    $0x1ffff,%eax
0x0ffbe387:  jbe    0xffbe38e

----------------
IN: 
0x0ffbe38e:  mov    %dl,0x2(%esi)
0x0ffbe391:  movzwl 0x413,%ebx
0x0ffbe398:  shl    $0xa,%ebx
0x0ffbe39b:  mov    %ebx,%eax
0x0ffbe39d:  cltd   
0x0ffbe39e:  push   $0x2
0x0ffbe3a0:  mov    $0xa0000,%ecx
0x0ffbe3a5:  sub    %ebx,%ecx
0x0ffbe3a7:  xor    %ebx,%ebx
0x0ffbe3a9:  push   %ebx
0x0ffbe3aa:  push   %ecx
0x0ffbe3ab:  call   0xffadf0b

----------------
IN: 
0x0ffade80:  lea    0x8(%ecx),%edi
0x0ffade83:  mov    %edi,0x14(%esp)
0x0ffade87:  add    0x8(%ecx),%eax
0x0ffade8a:  adc    0xc(%ecx),%edx
0x0ffade8d:  cmp    %eax,(%esp)
0x0ffade90:  mov    0x4(%esp),%edi
0x0ffade94:  sbb    %edx,%edi
0x0ffade96:  jb     0xffadea3

----------------
IN: 
0x0ffade98:  mov    0x8(%esp),%eax
0x0ffade9c:  call   0xffad5bb

----------------
IN: 
0x0ffad5bb:  push   %ebx
0x0ffad5bc:  mov    0xf5d24,%ebx
0x0ffad5c2:  lea    -0x1(%ebx),%ecx
0x0ffad5c5:  mov    %ecx,0xf5d24
0x0ffad5cb:  lea    0x1(%eax),%edx
0x0ffad5ce:  imul   $0x14,%edx,%edx
0x0ffad5d1:  sub    %eax,%ecx
0x0ffad5d3:  imul   $0x14,%ecx,%ecx
0x0ffad5d6:  lea    0xf5d40(%edx),%ebx
0x0ffad5dc:  lea    0xf5d2c(%edx),%eax
0x0ffad5e2:  mov    %ebx,%edx
0x0ffad5e4:  pop    %ebx
0x0ffad5e5:  jmp    0xffad59d

----------------
IN: 
0x0ffad5a5:  mov    %eax,%edi
0x0ffad5a7:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffad5a7:  rep movsb %ds:(%esi),%es:(%edi)

----------------
IN: 
0x0ffad5a9:  jmp    0xffad5b8

----------------
IN: 
0x0ffadea1:  jmp    0xffade57

----------------
IN: 
0x0ffade57:  mov    0x8(%esp),%eax
0x0ffade5b:  cmp    0xf5d24,%eax
0x0ffade61:  jge    0xffaded2

----------------
IN: 
0x0ffbe3b0:  mov    0xffbfe80,%ebx
0x0ffbe3b6:  add    $0xc,%esp
0x0ffbe3b9:  xor    %edi,%edi
0x0ffbe3bb:  test   %ebx,%ebx
0x0ffbe3bd:  je     0xffbe3c5

----------------
IN: 
0x0ffbe3bf:  mov    %ebx,%edi
0x0ffbe3c1:  mov    (%ebx),%ebx
0x0ffbe3c3:  jmp    0xffbe3bb

----------------
IN: 
0x0ffbe3bb:  test   %ebx,%ebx
0x0ffbe3bd:  je     0xffbe3c5

----------------
IN: 
0x0ffbe3c5:  mov    0x8(%edi),%eax
0x0ffbe3c8:  mov    0xc(%edi),%ecx
0x0ffbe3cb:  sub    %eax,%ecx
0x0ffbe3cd:  xor    %edx,%edx
0x0ffbe3cf:  call   0xeab7b

----------------
IN: 
0x0ffbe3d4:  pushl  0xc(%edi)
0x0ffbe3d7:  pushl  0x8(%edi)
0x0ffbe3da:  push   %esi
0x0ffbe3db:  pushl  0xffbfe60
0x0ffbe3e1:  push   $0xf46ee
0x0ffbe3e6:  call   0xec4d8

----------------
IN: 
0x0ffbe3eb:  mov    0xffbfe84,%eax
0x0ffbe3f0:  add    $0x14,%esp
0x0ffbe3f3:  test   %eax,%eax
0x0ffbe3f5:  je     0xffbe3fd

----------------
IN: 
0x0ffbe3f7:  mov    %eax,%ebx
0x0ffbe3f9:  mov    (%eax),%eax
0x0ffbe3fb:  jmp    0xffbe3f3

----------------
IN: 
0x0ffbe3f3:  test   %eax,%eax
0x0ffbe3f5:  je     0xffbe3fd

----------------
IN: 
0x0ffbe3fd:  test   %ebx,%ebx
0x0ffbe3ff:  je     0xffbe42a

----------------
IN: 
0x0ffbe401:  mov    0x8(%ebx),%eax
0x0ffbe404:  mov    0xc(%ebx),%ebx
0x0ffbe407:  sub    %eax,%ebx
0x0ffbe409:  and    $0xfffff000,%ebx
0x0ffbe40f:  xor    %edx,%edx
0x0ffbe411:  push   $0x1
0x0ffbe413:  xor    %edi,%edi
0x0ffbe415:  push   %edi
0x0ffbe416:  push   %ebx
0x0ffbe417:  call   0xffadf0b

----------------
IN: 
0x0ffaddc5:  incl   0x8(%esp)
0x0ffaddc9:  jmp    0xffadd80

----------------
IN: 
0x0ffadd80:  cmp    %edx,0x8(%esp)
0x0ffadd84:  jge    0xffaded2

----------------
IN: 
0x0ffadde7:  mov    (%esp),%esi
0x0ffaddea:  mov    0x4(%esp),%edi
0x0ffaddee:  sub    %ecx,%esi
0x0ffaddf0:  sbb    %ebx,%edi
0x0ffaddf2:  mov    %esi,0x1c(%esp)
0x0ffaddf6:  mov    %edi,0x20(%esp)
0x0ffaddfa:  mov    %ecx,0xc(%esp)
0x0ffaddfe:  mov    %ebx,0x10(%esp)
0x0ffade02:  jmp    0xffade52

----------------
IN: 
0x0ffadea3:  mov    (%esp),%ebx
0x0ffadea6:  mov    0x4(%esp),%esi
0x0ffadeaa:  mov    %ebx,(%ecx)
0x0ffadeac:  mov    %esi,0x4(%ecx)
0x0ffadeaf:  sub    %ebx,%eax
0x0ffadeb1:  sbb    %esi,%edx
0x0ffadeb3:  mov    0x14(%esp),%ebx
0x0ffadeb7:  mov    %eax,(%ebx)
0x0ffadeb9:  mov    %edx,0x4(%ebx)
0x0ffadebc:  cmp    0x10(%ecx),%ebp
0x0ffadebf:  jne    0xffaded2

----------------
IN: 
0x0ffbe41c:  push   %ebx
0x0ffbe41d:  push   $0xf4715
0x0ffbe422:  call   0xec4d8

----------------
IN: 
0x0ffbe427:  add    $0x14,%esp
0x0ffbe42a:  call   0xffaba05

----------------
IN: 
0x0ffbe42f:  pushl  0xf5d24
0x0ffbe435:  push   $0xf4734
0x0ffbe43a:  call   0xec4d8

----------------
IN: 
0x0ffbe43f:  mov    $0xf5d40,%ebx
0x0ffbe444:  pop    %edx
0x0ffbe445:  pop    %ecx
0x0ffbe446:  xor    %esi,%esi
0x0ffbe448:  cmp    0xf5d24,%esi
0x0ffbe44e:  jge    0xffbe49d

----------------
IN: 
0x0ffbe450:  mov    (%ebx),%eax
0x0ffbe452:  mov    0x4(%ebx),%edx
0x0ffbe455:  mov    %eax,%edi
0x0ffbe457:  mov    %edx,%ebp
0x0ffbe459:  add    0x8(%ebx),%edi
0x0ffbe45c:  adc    0xc(%ebx),%ebp
0x0ffbe45f:  mov    %edi,(%esp)
0x0ffbe462:  mov    %ebp,0x4(%esp)
0x0ffbe466:  mov    0x10(%ebx),%ecx
0x0ffbe469:  lea    -0x1(%ecx),%ebp
0x0ffbe46c:  mov    $0xf3ec9,%edi
0x0ffbe471:  cmp    $0x4,%ebp
0x0ffbe474:  ja     0xffbe47d

----------------
IN: 
0x0ffbe476:  mov    0xffbef68(,%ebp,4),%edi
0x0ffbe47d:  push   %edi
0x0ffbe47e:  push   %ecx
0x0ffbe47f:  pushl  0xc(%esp)
0x0ffbe483:  pushl  0xc(%esp)
0x0ffbe487:  push   %edx
0x0ffbe488:  push   %eax
0x0ffbe489:  push   %esi
0x0ffbe48a:  push   $0xf474c
0x0ffbe48f:  call   0xec4d8

----------------
IN: 
0x0ffbe494:  inc    %esi
0x0ffbe495:  add    $0x14,%ebx
0x0ffbe498:  add    $0x20,%esp
0x0ffbe49b:  jmp    0xffbe448

----------------
IN: 
0x0ffbe448:  cmp    0xf5d24,%esi
0x0ffbe44e:  jge    0xffbe49d

----------------
IN: 
0x000ebee2:  sub    $0x8,%ecx
0x000ebee5:  push   %edi
0x000ebee6:  push   %eax
0x000ebee7:  mov    %ebx,%eax
0x000ebee9:  call   0xe990b

----------------
IN: 
0x000ebeee:  push   %edi
0x000ebeef:  mov    $0x8,%ecx
0x000ebef4:  mov    0x10(%esp),%edx
0x000ebef8:  mov    %ebx,%eax
0x000ebefa:  call   0xe9872

----------------
IN: 
0x000ebeff:  add    $0xc,%esp
0x000ebf02:  jmp    0xebf19

----------------
IN: 
0x000ebf19:  mov    (%esp),%ebp
0x000ebf1c:  jmp    0xebf72

----------------
IN: 
0x0ffbe49d:  movl   $0x2,0xf61c8
0x0ffbe4a7:  mov    $0x10000,%edx
0x0ffbe4ac:  mov    $0xf0000,%eax
0x0ffbe4b1:  call   0xeaaa5

----------------
IN: 
0x0ffbe4b6:  sub    %al,0xfffff
0x0ffbe4bc:  call   0xedb78

----------------
IN: 
0x000edb78:  push   %ebx
0x000edb79:  call   0xe97da

----------------
IN: 
0x000edb7e:  test   %eax,%eax
0x000edb80:  jne    0xedbc0

----------------
IN: 
0x000edb82:  mov    0xf5158,%ebx
0x000edb88:  test   %ebx,%ebx
0x000edb8a:  jns    0xedb99

----------------
IN: 
0x000edb99:  movzwl %bx,%ebx
0x000edb9c:  mov    $0x2,%edx
0x000edba1:  mov    %ebx,%eax
0x000edba3:  call   0xea491

----------------
IN: 
0x000edba8:  mov    $0x59,%edx
0x000edbad:  cmp    $0x1237,%ax
0x000edbb1:  je     0xedbb8

----------------
IN: 
0x000edbb8:  mov    %ebx,%eax
0x000edbba:  pop    %ebx
0x000edbbb:  jmp    0xea36b

----------------
IN: 
0x000ea36b:  push   %ebp
0x000ea36c:  push   %edi
0x000ea36d:  push   %esi
0x000ea36e:  push   %ebx
0x000ea36f:  sub    $0x10,%esp
0x000ea372:  mov    %edx,%esi
0x000ea374:  wbinvd 
0x000ea376:  mov    %edx,%ebx
0x000ea378:  and    $0xfffffffc,%ebx
0x000ea37b:  movzwl %ax,%eax
0x000ea37e:  mov    %eax,(%esp)
0x000ea381:  mov    %ebx,%edx
0x000ea383:  call   0xea337

----------------
IN: 
0x000ea388:  mov    %eax,0x8(%esp)
0x000ea38c:  lea    0x4(%ebx),%eax
0x000ea38f:  mov    %eax,0x4(%esp)
0x000ea393:  mov    %eax,%edx
0x000ea395:  mov    (%esp),%eax
0x000ea398:  call   0xea337

----------------
IN: 
0x000ea39d:  mov    %eax,0xc(%esp)
0x000ea3a1:  and    $0x3,%esi
0x000ea3a4:  mov    %esi,%edx
0x000ea3a6:  lea    0x8(%esp,%esi,1),%edi
0x000ea3aa:  call   0xe99b2

----------------
IN: 
0x000ea3af:  mov    %eax,%ecx
0x000ea3b1:  xor    %eax,%eax
0x000ea3b3:  mov    %eax,%esi
0x000ea3b5:  shl    $0xf,%esi
0x000ea3b8:  lea    0xc8000(%esi),%ebp
0x000ea3be:  cmp    %ebp,%ecx
0x000ea3c0:  jae    0xea3d3

----------------
IN: 
0x000ea3d3:  movb   $0x11,0x1(%edi,%eax,1)
0x000ea3d8:  inc    %eax
0x000ea3d9:  cmp    $0x6,%eax
0x000ea3dc:  jne    0xea3b3

----------------
IN: 
0x000ea3b3:  mov    %eax,%esi
0x000ea3b5:  shl    $0xf,%esi
0x000ea3b8:  lea    0xc8000(%esi),%ebp
0x000ea3be:  cmp    %ebp,%ecx
0x000ea3c0:  jae    0xea3d3

----------------
IN: 
0x000ea3c2:  add    $0xc4000,%esi
0x000ea3c8:  cmp    %ecx,%esi
0x000ea3ca:  ja     0xea3de

----------------
IN: 
0x000ea3de:  movb   $0x10,0x8(%esp,%edx,1)
0x000ea3e3:  mov    0x8(%esp),%ecx
0x000ea3e7:  mov    %ebx,%edx
0x000ea3e9:  mov    (%esp),%eax
0x000ea3ec:  call   0xea07a

----------------
IN: 
0x000ea3f1:  mov    0xc(%esp),%ecx
0x000ea3f5:  mov    0x4(%esp),%edx
0x000ea3f9:  mov    (%esp),%eax
0x000ea3fc:  add    $0x10,%esp
0x000ea3ff:  pop    %ebx
0x000ea400:  pop    %esi
0x000ea401:  pop    %edi
0x000ea402:  pop    %ebp
0x000ea403:  jmp    0xea07a

----------------
IN: 
0x0ffbe4c1:  add    $0x124,%esp
0x0ffbe4c7:  pop    %ebx
0x0ffbe4c8:  pop    %esi
0x0ffbe4c9:  pop    %edi
0x0ffbe4ca:  pop    %ebp
0x0ffbe4cb:  jmp    0xefbe2

----------------
IN: 
0x000efbe2:  sub    $0x28,%esp
0x000efbe5:  mov    $0x89000,%ecx
0x000efbea:  xor    %edx,%edx
0x000efbec:  mov    $0x7000,%eax
0x000efbf1:  call   0xeab7b

----------------
IN: 
0x000efbf6:  mov    $0x26,%ecx
0x000efbfb:  lea    0x2(%esp),%eax
0x000efbff:  call   0xeab7b

----------------
IN: 
0x000efc04:  movw   $0x200,0x26(%esp)
0x000efc0b:  mov    $0xfe6ee,%edx
0x000efc10:  movzwl %dx,%edx
0x000efc13:  call   0xec42f

----------------
IN: 
0x000fe6ee:  int    $0x19

----------------
IN: 
0x000fe6f2:  jmp    0xfd452

----------------
IN: 
0x000fd452:  xor    %dx,%dx
0x000fd454:  mov    %dx,%ss

----------------
IN: 
0x000fd456:  mov    $0x7000,%esp

----------------
IN: 
0x000fd45c:  mov    $0xefd1d,%edx
0x000fd462:  jmp    0xfcf2b

----------------
IN: 
0x000fcf2b:  cli    
0x000fcf2c:  cld    
0x000fcf2d:  mov    %eax,%ecx
0x000fcf30:  mov    $0x8f,%eax
0x000fcf36:  out    %al,$0x70
0x000fcf38:  in     $0x71,%al
0x000fcf3a:  in     $0x92,%al
0x000fcf3c:  or     $0x2,%al
0x000fcf3e:  out    %al,$0x92
0x000fcf40:  mov    %ecx,%eax
0x000fcf43:  lidtw  %cs:0x61b8
0x000fcf49:  lgdtw  %cs:0x6178
0x000fcf4f:  mov    %cr0,%ecx
0x000fcf52:  and    $0x1fffffff,%ecx
0x000fcf59:  or     $0x1,%ecx
0x000fcf5d:  mov    %ecx,%cr0

----------------
IN: 
0x000efd1d:  push   $0xf4f64
0x000efd22:  push   $0xf49db
0x000efd27:  call   0xec4d8

----------------
IN: 
0x000efd2c:  push   $0xf49e6
0x000efd31:  call   0xec4d8

----------------
IN: 
0x000efd36:  movl   $0x0,0xe8f18
0x000efd40:  add    $0xc,%esp
0x000efd43:  xor    %eax,%eax
0x000efd45:  jmp    0xef73b

----------------
IN: 
0x000ef73b:  push   %edi
0x000ef73c:  push   %esi
0x000ef73d:  push   %ebx
0x000ef73e:  sub    $0x2c,%esp
0x000ef741:  cmp    %eax,0xf5408
0x000ef747:  jle    0xef884

----------------
IN: 
0x000ef74d:  mov    0xf5420(,%eax,8),%edx
0x000ef754:  cmp    $0x3,%edx
0x000ef757:  je     0xef7b9

----------------
IN: 
0x000ef759:  jg     0xef77f

----------------
IN: 
0x000ef77f:  cmp    $0x80,%edx
0x000ef785:  je     0xef860

----------------
IN: 
0x000ef860:  mov    0xf5424(,%eax,8),%eax
0x000ef867:  mov    %eax,(%esp)
0x000ef86a:  push   $0xf387a
0x000ef86f:  call   0xee44a

----------------
IN: 
0x000ec136:  mov    $0xfcf79,%ecx
0x000ec13b:  cmpl   $0x1,0xf61c8
0x000ec142:  jne    0xec149

----------------
IN: 
0x000fcf79:  mov    $0x20,%ecx
0x000fcf7e:  mov    %ecx,%ds

----------------
IN: 
0x000fcf80:  mov    %ecx,%es

----------------
IN: 
0x000fcf82:  mov    %ecx,%ss

----------------
IN: 
0x000fcf84:  mov    %ecx,%fs

----------------
IN: 
0x000fcf86:  mov    %ecx,%gs
0x000fcf88:  ljmpw  $0x18,$0xcfa3

----------------
IN: 
0x000ef874:  xor    %edx,%edx
0x000ef876:  mov    0x4(%esp),%eax
0x000ef87a:  call   0xee563

----------------
IN: 
0x000ee563:  push   %esi
0x000ee564:  push   %ebx
0x000ee565:  sub    $0x28,%esp
0x000ee568:  mov    %eax,%ebx
0x000ee56a:  mov    %edx,%esi
0x000ee56c:  movzwl %ax,%eax
0x000ee56f:  push   %eax
0x000ee570:  mov    %ebx,%eax
0x000ee572:  shr    $0x10,%eax
0x000ee575:  push   %eax
0x000ee576:  push   $0xf1d3c
0x000ee57b:  call   0xec4d8

----------------
IN: 
0x000ee580:  mov    $0x26,%ecx
0x000ee585:  xor    %edx,%edx
0x000ee587:  lea    0xe(%esp),%eax
0x000ee58b:  call   0xeab7b

----------------
IN: 
0x000ee590:  movw   $0x200,0x32(%esp)
0x000ee597:  mov    %ebx,0x2e(%esp)
0x000ee59b:  mov    %esi,%eax
0x000ee59d:  mov    %al,0x22(%esp)
0x000ee5a1:  movw   $0xaa55,0x2a(%esp)
0x000ee5a8:  xor    %eax,%eax
0x000ee5aa:  call   0xebf98

----------------
IN: 
0x000ebfca:  movb   $0x1,0xe979e
0x000ebfd1:  pop    %ebx
0x000ebfd2:  ret    

----------------
IN: 
0x000ee5af:  mov    $0xf8148,%ecx
0x000ee5b4:  xor    %edx,%edx
0x000ee5b6:  lea    0xe(%esp),%eax
0x000ee5ba:  call   0xec0df

----------------
IN: 
0x000cb03c:  mov    %cs,%ax
0x000cb03e:  mov    %ax,%ds
0x000cb040:  cli    
0x000cb041:  cld    
0x000cb042:  mov    %cs,%eax
0x000cb045:  shl    $0x4,%eax
0x000cb049:  mov    %ss,%ecx
0x000cb04c:  shl    $0x4,%ecx
0x000cb050:  mov    %esp,%ebx
0x000cb053:  add    %ebx,%ecx
0x000cb056:  sub    $0x20,%ecx
0x000cb05a:  sub    $0x30,%esp
0x000cb05e:  shr    $0x4,%ecx
0x000cb062:  mov    %cx,%gs
0x000cb064:  mov    0x2ac,%ebx
0x000cb069:  add    %eax,%ebx
0x000cb06c:  mov    %ebx,%gs:0x0
0x000cb072:  mov    $0x8,%bx
0x000cb075:  mov    %bx,%gs:0x4
0x000cb07a:  mov    0x2dc,%bx
0x000cb07e:  mov    %bx,%gs:0x6
0x000cb083:  mov    0x2de,%ebx
0x000cb088:  add    %eax,%ebx
0x000cb08b:  mov    %ebx,%gs:0x8
0x000cb091:  xor    %eax,%eax
0x000cb094:  mov    %ax,%es
0x000cb096:  mov    $0xb,%ax
0x000cb099:  mov    $0x510,%dx
0x000cb09c:  out    %ax,(%dx)
0x000cb09d:  mov    $0x511,%dx
0x000cb0a0:  in     (%dx),%al
0x000cb0a1:  shl    $0x8,%eax
0x000cb0a5:  in     (%dx),%al
0x000cb0a6:  shl    $0x8,%eax
0x000cb0aa:  in     (%dx),%al
0x000cb0ab:  shl    $0x8,%eax
0x000cb0af:  in     (%dx),%al
0x000cb0b0:  bswap  %eax
0x000cb0b3:  mov    %eax,%ecx
0x000cb0b6:  mov    $0xa,%ax
0x000cb0b9:  mov    $0x510,%dx
0x000cb0bc:  out    %ax,(%dx)
0x000cb0bd:  mov    $0x511,%dx
0x000cb0c0:  in     (%dx),%al
0x000cb0c1:  shl    $0x8,%eax
0x000cb0c5:  in     (%dx),%al
0x000cb0c6:  shl    $0x8,%eax
0x000cb0ca:  in     (%dx),%al
0x000cb0cb:  shl    $0x8,%eax
0x000cb0cf:  in     (%dx),%al
0x000cb0d0:  bswap  %eax
0x000cb0d3:  mov    %eax,%edi
0x000cb0d6:  bswap  %edi
0x000cb0d9:  push   %edi
0x000cb0db:  xor    %eax,%eax
0x000cb0de:  push   %eax
0x000cb0e0:  mov    $0x514,%dx
0x000cb0e3:  out    %eax,(%dx)
0x000cb0e5:  bswap  %ecx
0x000cb0e8:  push   %ecx
0x000cb0ea:  mov    $0x12000a,%eax
0x000cb0f0:  bswap  %eax
0x000cb0f3:  push   %eax
0x000cb0f5:  mov    %esp,%eax
0x000cb0f8:  bswap  %eax
0x000cb0fb:  mov    $0x518,%dx
0x000cb0fe:  out    %eax,(%dx)
0x000cb100:  addr32 mov (%esp),%eax
0x000cb105:  bswap  %eax
0x000cb108:  test   $0xfffffffe,%eax
0x000cb10e:  jne    0xcb100

----------------
IN: 
0x000cb110:  add    $0x10,%esp
0x000cb114:  mov    $0xa,%ax
0x000cb117:  mov    $0x510,%dx
0x000cb11a:  out    %ax,(%dx)
0x000cb11b:  mov    $0x511,%dx
0x000cb11e:  in     (%dx),%al
0x000cb11f:  shl    $0x8,%eax
0x000cb123:  in     (%dx),%al
0x000cb124:  shl    $0x8,%eax
0x000cb128:  in     (%dx),%al
0x000cb129:  shl    $0x8,%eax
0x000cb12d:  in     (%dx),%al
0x000cb12e:  bswap  %eax
0x000cb131:  shr    $0x4,%eax
0x000cb135:  mov    %ax,%fs
0x000cb137:  int    $0x12

----------------
IN: 
0x000ff841:  pushl  $0x7c2e
0x000ff847:  jmp    0xfd371

----------------
IN: 
0x000f7c2e:  mov    $0x40,%edx
0x000f7c34:  mov    %dx,%es
0x000f7c36:  mov    %es:0x13,%dx
0x000f7c3b:  addr32 mov %dx,0x1c(%eax)
0x000f7c3f:  retl   

----------------
IN: 
0x000cb139:  cwtl   
0x000cb13b:  mov    %eax,%fs:0x4
0x000cb140:  mov    %fs:0x30,%eax
0x000cb145:  shr    $0x4,%eax
0x000cb149:  mov    %ax,%es
0x000cb14b:  xor    %ebx,%ebx
0x000cb14e:  xor    %edi,%edi
0x000cb151:  add    $0x4,%di
0x000cb154:  mov    $0x14,%ecx
0x000cb15a:  mov    $0xe820,%eax
0x000cb160:  mov    $0x534d4150,%edx
0x000cb166:  int    $0x15

----------------
IN: 
0x000ff859:  cmp    $0x89,%ah
0x000ff85c:  je     0xfd244

----------------
IN: 
0x000ff860:  pushl  $0xbb47
0x000ff866:  jmp    0xfd371

----------------
IN: 
0x000fbb47:  push   %ebp
0x000fbb49:  push   %edi
0x000fbb4b:  push   %esi
0x000fbb4d:  push   %ebx
0x000fbb4f:  sub    $0xc,%esp
0x000fbb53:  mov    %eax,%ebx
0x000fbb56:  addr32 mov 0x1d(%eax),%al
0x000fbb5a:  cmp    $0x86,%al
0x000fbb5c:  je     0xfbf41

----------------
IN: 
0x000fbb60:  ja     0xfbb94

----------------
IN: 
0x000fbb94:  cmp    $0xc0,%al
0x000fbb96:  je     0xfbfb7

----------------
IN: 
0x000fbb9a:  ja     0xfbcfa

----------------
IN: 
0x000fbcfa:  cmp    $0xc2,%al
0x000fbcfc:  je     0xfbfca

----------------
IN: 
0x000fbd00:  cmp    $0xe8,%al
0x000fbd02:  je     0xfc1d3

----------------
IN: 
0x000fc1d3:  addr32 mov 0x1c(%ebx),%al
0x000fc1d7:  cmp    $0x1,%al
0x000fc1d9:  je     0xfc1e2

----------------
IN: 
0x000fc1db:  cmp    $0x20,%al
0x000fc1dd:  je     0xfc223

----------------
IN: 
0x000fc223:  mov    %cs:0x5d24,%edx
0x000fc229:  addr32 cmpl $0x534d4150,0x14(%ebx)
0x000fc232:  jne    0xfc247

----------------
IN: 
0x000fc234:  addr32 movzwl 0x10(%ebx),%esi
0x000fc23a:  cmp    %esi,%edx
0x000fc23d:  jle    0xfc247

----------------
IN: 
0x000fc23f:  addr32 cmpl $0x13,0x18(%ebx)
0x000fc245:  ja     0xfc253

----------------
IN: 
0x000fc253:  mov    %cs,%bp
0x000fc255:  addr32 movzwl 0x4(%ebx),%edi
0x000fc25b:  addr32 mov 0x2(%ebx),%es
0x000fc25f:  imul   $0x14,%esi,%esi
0x000fc263:  add    $0x5d40,%esi
0x000fc26a:  mov    $0x14,%ecx
0x000fc270:  mov    %ds,%ax
0x000fc272:  mov    %bp,%ds
0x000fc274:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000fc274:  rep movsb %ds:(%si),%es:(%di)

----------------
IN: 
0x000fc276:  mov    %ax,%ds
0x000fc278:  addr32 movzwl 0x10(%ebx),%ecx
0x000fc27e:  dec    %edx
0x000fc280:  xor    %eax,%eax
0x000fc283:  cmp    %edx,%ecx
0x000fc286:  je     0xfc28f

----------------
IN: 
0x000fc288:  addr32 mov 0x10(%ebx),%eax
0x000fc28d:  inc    %eax
0x000fc28f:  addr32 mov %eax,0x10(%ebx)
0x000fc294:  addr32 movl $0x534d4150,0x1c(%ebx)
0x000fc29d:  addr32 movl $0x14,0x18(%ebx)
0x000fc2a6:  addr32 andw $0xfffffffe,0x24(%ebx)
0x000fc2ab:  jmp    0xfc2d1

----------------
IN: 
0x000fc2d1:  add    $0xc,%esp
0x000fc2d5:  pop    %ebx
0x000fc2d7:  pop    %esi
0x000fc2d9:  pop    %edi
0x000fc2db:  pop    %ebp
0x000fc2dd:  retl   

----------------
IN: 
0x000cb168:  jb     0xcb17d

----------------
IN: 
0x000cb16a:  addr32 mov %ecx,%es:-0x4(%edi)
0x000cb170:  add    %ecx,%edi
0x000cb173:  mov    %di,%fs:0x2c
0x000cb178:  test   %ebx,%ebx
0x000cb17b:  jne    0xcb151

----------------
IN: 
0x000cb151:  add    $0x4,%di
0x000cb154:  mov    $0x14,%ecx
0x000cb15a:  mov    $0xe820,%eax
0x000cb160:  mov    $0x534d4150,%edx
0x000cb166:  int    $0x15

----------------
IN: 
0x000fc28f:  addr32 mov %eax,0x10(%ebx)
0x000fc294:  addr32 movl $0x534d4150,0x1c(%ebx)
0x000fc29d:  addr32 movl $0x14,0x18(%ebx)
0x000fc2a6:  addr32 andw $0xfffffffe,0x24(%ebx)
0x000fc2ab:  jmp    0xfc2d1

----------------
IN: 
0x000cb17d:  xor    %di,%di
0x000cb17f:  mov    $0x100000,%edx
0x000cb185:  cmp    %fs:0x2c,%di
0x000cb18a:  je     0xcb1c2

----------------
IN: 
0x000cb18c:  add    $0x4,%di
0x000cb18f:  cmpl   $0x1,%es:0x10(%di)
0x000cb195:  jne    0xcb1bb

----------------
IN: 
0x000cb197:  mov    %es:0x4(%di),%eax
0x000cb19c:  test   %eax,%eax
0x000cb19f:  jne    0xcb1bb

----------------
IN: 
0x000cb1a1:  mov    %es:(%di),%eax
0x000cb1a5:  cmp    %eax,%edx
0x000cb1a8:  jb     0xcb1bb

----------------
IN: 
0x000cb1aa:  add    %es:0x8(%di),%eax
0x000cb1af:  cmp    %eax,%edx
0x000cb1b2:  jae    0xcb1bb

----------------
IN: 
0x000cb1bb:  add    %es:-0x4(%di),%edi
0x000cb1c0:  jmp    0xcb185

----------------
IN: 
0x000cb185:  cmp    %fs:0x2c,%di
0x000cb18a:  je     0xcb1c2

----------------
IN: 
0x000cb1b4:  mov    %eax,%edx
0x000cb1b7:  xor    %di,%di
0x000cb1b9:  jmp    0xcb185

----------------
IN: 
0x000cb1c2:  sub    $0x100000,%edx
0x000cb1c9:  shr    $0xa,%edx
0x000cb1cd:  mov    %edx,%fs:0x8
0x000cb1d3:  lgdtl  %gs:0x6
0x000cb1da:  mov    $0x1,%eax
0x000cb1e0:  mov    %eax,%cr0

----------------
IN: 
0x000cb1e3:  ljmpl  *%gs:0x0

----------------
IN: 
0x000cb1e9:  mov    $0x10,%eax
0x000cb1ee:  mov    %eax,%ss

----------------
IN: 
0x000cb1f0:  mov    %eax,%ds

----------------
IN: 
0x000cb1f2:  mov    %eax,%es

----------------
IN: 
0x000cb1f4:  mov    %eax,%fs
0x000cb1f6:  mov    %eax,%gs
0x000cb1f8:  mov    $0x8,%ax
0x000cb1fc:  mov    $0x510,%dx
0x000cb200:  out    %ax,(%dx)
0x000cb202:  mov    $0x511,%dx
0x000cb206:  in     (%dx),%al
0x000cb207:  shl    $0x8,%eax
0x000cb20a:  in     (%dx),%al
0x000cb20b:  shl    $0x8,%eax
0x000cb20e:  in     (%dx),%al
0x000cb20f:  shl    $0x8,%eax
0x000cb212:  in     (%dx),%al
0x000cb213:  bswap  %eax
0x000cb215:  mov    %eax,%ecx
0x000cb217:  mov    $0x7,%ax
0x000cb21b:  mov    $0x510,%dx
0x000cb21f:  out    %ax,(%dx)
0x000cb221:  mov    $0x511,%dx
0x000cb225:  in     (%dx),%al
0x000cb226:  shl    $0x8,%eax
0x000cb229:  in     (%dx),%al
0x000cb22a:  shl    $0x8,%eax
0x000cb22d:  in     (%dx),%al
0x000cb22e:  shl    $0x8,%eax
0x000cb231:  in     (%dx),%al
0x000cb232:  bswap  %eax
0x000cb234:  mov    %eax,%edi
0x000cb236:  bswap  %edi
0x000cb238:  push   %edi
0x000cb239:  xor    %eax,%eax
0x000cb23b:  push   %eax
0x000cb23c:  mov    $0x514,%dx
0x000cb240:  out    %eax,(%dx)
0x000cb241:  bswap  %ecx
0x000cb243:  push   %ecx
0x000cb244:  mov    $0x11000a,%eax
0x000cb249:  bswap  %eax
0x000cb24b:  push   %eax
0x000cb24c:  mov    %esp,%eax
0x000cb24e:  bswap  %eax
0x000cb250:  mov    $0x518,%dx
0x000cb254:  out    %eax,(%dx)
0x000cb255:  mov    (%esp),%eax
0x000cb258:  bswap  %eax
0x000cb25a:  test   $0xfffffffe,%eax
0x000cb25f:  jne    0xcb255

----------------
IN: 
0x000cb261:  add    $0x10,%esp
0x000cb264:  mov    $0x10,%ax
0x000cb268:  mov    $0x510,%dx
0x000cb26c:  out    %ax,(%dx)
0x000cb26e:  mov    $0x511,%dx
0x000cb272:  in     (%dx),%al
0x000cb273:  shl    $0x8,%eax
0x000cb276:  in     (%dx),%al
0x000cb277:  shl    $0x8,%eax
0x000cb27a:  in     (%dx),%al
0x000cb27b:  shl    $0x8,%eax
0x000cb27e:  in     (%dx),%al
0x000cb27f:  bswap  %eax
0x000cb281:  mov    %eax,%ecx
0x000cb283:  mov    $0xa,%ax
0x000cb287:  mov    $0x510,%dx
0x000cb28b:  out    %ax,(%dx)
0x000cb28d:  mov    $0x511,%dx
0x000cb291:  in     (%dx),%al
0x000cb292:  shl    $0x8,%eax
0x000cb295:  in     (%dx),%al
0x000cb296:  shl    $0x8,%eax
0x000cb299:  in     (%dx),%al
0x000cb29a:  shl    $0x8,%eax
0x000cb29d:  in     (%dx),%al
0x000cb29e:  bswap  %eax
0x000cb2a0:  mov    %eax,%ebx
0x000cb2a2:  mov    $0x2badb002,%eax
0x000cb2a7:  jmp    *%ecx

----------------
IN: 
0x004015c0:  cli    
0x004015c1:  mov    $0x402400,%esp
0x004015c6:  mov    %esp,%ebp
0x004015c8:  push   %ebx
0x004015c9:  push   %eax
0x004015ca:  call   0x401000

----------------
IN: kboot
0x00401000:  push   %ebp
0x00401001:  mov    %esp,%ebp
0x00401003:  sub    $0x18,%esp
0x00401006:  cmpl   $0x2badb002,0x8(%ebp)
0x0040100d:  je     0x40101f

----------------
IN: kboot
0x0040101f:  movl   $0x403000,-0xc(%ebp)
0x00401026:  mov    0xc(%ebp),%eax
0x00401029:  sub    $0x8,%esp
0x0040102c:  push   %eax
0x0040102d:  pushl  -0xc(%ebp)
0x00401030:  call   0x4010b5

----------------
IN: kboot_read_mbinfo
0x004010b5:  push   %ebp
0x004010b6:  mov    %esp,%ebp
0x004010b8:  push   %ebx
0x004010b9:  sub    $0x14,%esp
0x004010bc:  mov    0x8(%ebp),%eax
0x004010bf:  movl   $0x0,(%eax)
0x004010c5:  mov    0x8(%ebp),%eax
0x004010c8:  movl   $0x404000,0x324(%eax)
0x004010d2:  mov    0x8(%ebp),%eax
0x004010d5:  movl   $0x0,0x328(%eax)
0x004010df:  mov    $0xf0400000,%edx
0x004010e4:  mov    0x8(%ebp),%eax
0x004010e7:  mov    %edx,0x4(%eax)
0x004010ea:  mov    $0xf0405000,%edx
0x004010ef:  mov    0x8(%ebp),%eax
0x004010f2:  mov    %edx,0x8(%eax)
0x004010f5:  mov    $0xf04207df,%edx
0x004010fa:  mov    0x8(%ebp),%eax
0x004010fd:  mov    %edx,0xc(%eax)
0x00401100:  mov    $0x400010,%edx
0x00401105:  mov    0x8(%ebp),%eax
0x00401108:  mov    %edx,0x10(%eax)
0x0040110b:  mov    $0x405000,%edx
0x00401110:  mov    $0x400010,%eax
0x00401115:  sub    %eax,%edx
0x00401117:  mov    0x8(%ebp),%eax
0x0040111a:  mov    %edx,0x14(%eax)
0x0040111d:  mov    $0x207df,%edx
0x00401122:  mov    0x8(%ebp),%eax
0x00401125:  mov    0x14(%eax),%eax
0x00401128:  sub    %eax,%edx
0x0040112a:  mov    0x8(%ebp),%eax
0x0040112d:  mov    %edx,0x18(%eax)
0x00401130:  mov    0x8(%ebp),%eax
0x00401133:  movl   $0x0,0x1c(%eax)
0x0040113a:  mov    0x8(%ebp),%eax
0x0040113d:  movl   $0x0,0x320(%eax)
0x00401147:  mov    0xc(%ebp),%eax
0x0040114a:  mov    (%eax),%eax
0x0040114c:  and    $0x40,%eax
0x0040114f:  test   %eax,%eax
0x00401151:  je     0x4011c6

----------------
IN: kboot_read_mbinfo
0x00401153:  mov    0xc(%ebp),%eax
0x00401156:  mov    0x30(%eax),%eax
0x00401159:  mov    %eax,-0xc(%ebp)
0x0040115c:  jmp    0x4011af

----------------
IN: kboot_read_mbinfo
0x004011af:  mov    0xc(%ebp),%eax
0x004011b2:  mov    0x30(%eax),%edx
0x004011b5:  mov    0xc(%ebp),%eax
0x004011b8:  mov    0x2c(%eax),%eax
0x004011bb:  add    %edx,%eax
0x004011bd:  mov    -0xc(%ebp),%edx
0x004011c0:  cmp    %eax,%edx
0x004011c2:  jb     0x40115e

----------------
IN: kboot_read_mbinfo
0x0040115e:  mov    -0xc(%ebp),%eax
0x00401161:  mov    0x14(%eax),%eax
0x00401164:  cmp    $0x1,%eax
0x00401167:  je     0x40117b

----------------
IN: kboot_read_mbinfo
0x0040117b:  mov    -0xc(%ebp),%eax
0x0040117e:  mov    0xc(%eax),%ecx
0x00401181:  mov    0x10(%eax),%ebx
0x00401184:  mov    -0xc(%ebp),%eax
0x00401187:  mov    0x8(%eax),%edx
0x0040118a:  mov    0x4(%eax),%eax
0x0040118d:  sub    $0xc,%esp
0x00401190:  push   %ebx
0x00401191:  push   %ecx
0x00401192:  push   %edx
0x00401193:  push   %eax
0x00401194:  pushl  0x8(%ebp)
0x00401197:  call   0x401254

----------------
IN: kboot_add_mmap
0x00401254:  push   %ebp
0x00401255:  mov    %esp,%ebp
0x00401257:  push   %ebx
0x00401258:  sub    $0x24,%esp
0x0040125b:  mov    0xc(%ebp),%eax
0x0040125e:  mov    %eax,-0x20(%ebp)
0x00401261:  mov    0x10(%ebp),%eax
0x00401264:  mov    %eax,-0x1c(%ebp)
0x00401267:  mov    0x14(%ebp),%eax
0x0040126a:  mov    %eax,-0x28(%ebp)
0x0040126d:  mov    0x18(%ebp),%eax
0x00401270:  mov    %eax,-0x24(%ebp)
0x00401273:  mov    $0xfffff000,%edx
0x00401278:  mov    $0x0,%eax
0x0040127d:  cmp    -0x20(%ebp),%edx
0x00401280:  sbb    -0x1c(%ebp),%eax
0x00401283:  jb     0x4013b7

----------------
IN: kboot_add_mmap
0x00401289:  mov    -0x20(%ebp),%ecx
0x0040128c:  mov    -0x1c(%ebp),%ebx
0x0040128f:  mov    -0x28(%ebp),%eax
0x00401292:  mov    -0x24(%ebp),%edx
0x00401295:  add    %ecx,%eax
0x00401297:  adc    %ebx,%edx
0x00401299:  mov    $0xfffff000,%ebx
0x0040129e:  mov    $0x0,%ecx
0x004012a3:  cmp    %eax,%ebx
0x004012a5:  sbb    %edx,%ecx
0x004012a7:  jae    0x4012d1

----------------
IN: kboot_add_mmap
0x004012d1:  mov    -0x28(%ebp),%eax
0x004012d4:  or     -0x24(%ebp),%eax
0x004012d7:  je     0x4013ba

----------------
IN: kboot_add_mmap
0x004012dd:  mov    -0x20(%ebp),%eax
0x004012e0:  push   $0x1000
0x004012e5:  push   %eax
0x004012e6:  call   0x401213

----------------
IN: kboot_round_up
0x00401213:  push   %ebp
0x00401214:  mov    %esp,%ebp
0x00401216:  mov    0x8(%ebp),%eax
0x00401219:  mov    $0x0,%edx
0x0040121e:  divl   0xc(%ebp)
0x00401221:  mov    %edx,%eax
0x00401223:  test   %eax,%eax
0x00401225:  je     0x40123b

----------------
IN: kboot_round_up
0x0040123b:  mov    0x8(%ebp),%eax
0x0040123e:  pop    %ebp
0x0040123f:  ret    

----------------
IN: kboot_add_mmap
0x004012eb:  add    $0x8,%esp
0x004012ee:  mov    %eax,-0x20(%ebp)
0x004012f1:  movl   $0x0,-0x1c(%ebp)
0x004012f8:  mov    -0x28(%ebp),%eax
0x004012fb:  push   $0x1000
0x00401300:  push   %eax
0x00401301:  call   0x401240

----------------
IN: kboot_round_down
0x00401240:  push   %ebp
0x00401241:  mov    %esp,%ebp
0x00401243:  mov    0x8(%ebp),%eax
0x00401246:  mov    $0x0,%edx
0x0040124b:  divl   0xc(%ebp)
0x0040124e:  imul   0xc(%ebp),%eax
0x00401252:  pop    %ebp
0x00401253:  ret    

----------------
IN: kboot_add_mmap
0x00401306:  add    $0x8,%esp
0x00401309:  mov    %eax,-0x28(%ebp)
0x0040130c:  movl   $0x0,-0x24(%ebp)
0x00401313:  mov    0x8(%ebp),%eax
0x00401316:  mov    0x320(%eax),%eax
0x0040131c:  lea    0x1(%eax),%ecx
0x0040131f:  mov    0x8(%ebp),%edx
0x00401322:  mov    %ecx,0x320(%edx)
0x00401328:  mov    %eax,-0xc(%ebp)
0x0040132b:  cmpl   $0x1f,-0xc(%ebp)
0x0040132f:  jbe    0x40133e

----------------
IN: kboot_add_mmap
0x0040133e:  mov    0x8(%ebp),%ecx
0x00401341:  mov    -0xc(%ebp),%edx
0x00401344:  mov    %edx,%eax
0x00401346:  add    %eax,%eax
0x00401348:  add    %edx,%eax
0x0040134a:  shl    $0x3,%eax
0x0040134d:  add    %ecx,%eax
0x0040134f:  lea    0x20(%eax),%ecx
0x00401352:  mov    -0x20(%ebp),%eax
0x00401355:  mov    -0x1c(%ebp),%edx
0x00401358:  mov    %eax,0x4(%ecx)
0x0040135b:  mov    %edx,0x8(%ecx)
0x0040135e:  mov    0x8(%ebp),%ecx
0x00401361:  mov    -0xc(%ebp),%edx
0x00401364:  mov    %edx,%eax
0x00401366:  add    %eax,%eax
0x00401368:  add    %edx,%eax
0x0040136a:  shl    $0x3,%eax
0x0040136d:  add    %ecx,%eax
0x0040136f:  lea    0x20(%eax),%ecx
0x00401372:  mov    -0x28(%ebp),%eax
0x00401375:  mov    -0x24(%ebp),%edx
0x00401378:  mov    %eax,0xc(%ecx)
0x0040137b:  mov    %edx,0x10(%ecx)
0x0040137e:  mov    0x8(%ebp),%ecx
0x00401381:  mov    -0xc(%ebp),%edx
0x00401384:  mov    %edx,%eax
0x00401386:  add    %eax,%eax
0x00401388:  add    %edx,%eax
0x0040138a:  shl    $0x3,%eax
0x0040138d:  add    %ecx,%eax
0x0040138f:  add    $0x34,%eax
0x00401392:  movl   $0x1,(%eax)
0x00401398:  mov    -0x20(%ebp),%edx
0x0040139b:  mov    -0x28(%ebp),%eax
0x0040139e:  add    %edx,%eax
0x004013a0:  mov    %eax,-0x10(%ebp)
0x004013a3:  mov    0x8(%ebp),%eax
0x004013a6:  mov    (%eax),%eax
0x004013a8:  cmp    -0x10(%ebp),%eax
0x004013ab:  jae    0x4013bb

----------------
IN: kboot_add_mmap
0x004013ad:  mov    0x8(%ebp),%eax
0x004013b0:  mov    -0x10(%ebp),%edx
0x004013b3:  mov    %edx,(%eax)
0x004013b5:  jmp    0x4013bb

----------------
IN: kboot_add_mmap
0x004013bb:  mov    -0x4(%ebp),%ebx
0x004013be:  leave  
0x004013bf:  ret    

----------------
IN: kboot_read_mbinfo
0x0040119c:  add    $0x20,%esp
0x0040119f:  mov    -0xc(%ebp),%eax
0x004011a2:  mov    (%eax),%edx
0x004011a4:  mov    -0xc(%ebp),%eax
0x004011a7:  add    %edx,%eax
0x004011a9:  add    $0x4,%eax
0x004011ac:  mov    %eax,-0xc(%ebp)
0x004011af:  mov    0xc(%ebp),%eax
0x004011b2:  mov    0x30(%eax),%edx
0x004011b5:  mov    0xc(%ebp),%eax
0x004011b8:  mov    0x2c(%eax),%eax
0x004011bb:  add    %edx,%eax
0x004011bd:  mov    -0xc(%ebp),%edx
0x004011c0:  cmp    %eax,%edx
0x004011c2:  jb     0x40115e

----------------
IN: kboot_read_mbinfo
0x00401169:  mov    -0xc(%ebp),%eax
0x0040116c:  mov    (%eax),%edx
0x0040116e:  mov    -0xc(%ebp),%eax
0x00401171:  add    %edx,%eax
0x00401173:  add    $0x4,%eax
0x00401176:  mov    %eax,-0xc(%ebp)
0x00401179:  jmp    0x4011af

----------------
IN: kboot_read_mbinfo
0x004011c4:  jmp    0x40120d

----------------
IN: kboot_read_mbinfo
0x0040120d:  nop    
0x0040120e:  mov    -0x4(%ebp),%ebx
0x00401211:  leave  
0x00401212:  ret    

----------------
IN: kboot
0x00401035:  add    $0x10,%esp
0x00401038:  sub    $0xc,%esp
0x0040103b:  pushl  -0xc(%ebp)
0x0040103e:  call   0x4013c0

----------------
IN: kboot_tpg_identity
0x004013c0:  push   %ebp
0x004013c1:  mov    %esp,%ebp
0x004013c3:  sub    $0x10,%esp
0x004013c6:  movl   $0x0,-0x4(%ebp)
0x004013cd:  jmp    0x401417

----------------
IN: kboot_tpg_identity
0x00401417:  cmpl   $0x3ff,-0x4(%ebp)
0x0040141e:  jbe    0x4013cf

----------------
IN: kboot_tpg_identity
0x004013cf:  movl   $0x87,-0x8(%ebp)
0x004013d6:  mov    -0x4(%ebp),%eax
0x004013d9:  shl    $0x16,%eax
0x004013dc:  mov    %eax,-0xc(%ebp)
0x004013df:  mov    0x8(%ebp),%eax
0x004013e2:  mov    (%eax),%eax
0x004013e4:  and    $0xffc00000,%eax
0x004013e9:  mov    -0xc(%ebp),%edx
0x004013ec:  and    $0xffc00000,%edx
0x004013f2:  cmp    %eax,%edx
0x004013f4:  jb     0x4013fa

----------------
IN: kboot_tpg_identity
0x004013fa:  mov    0x8(%ebp),%eax
0x004013fd:  mov    0x324(%eax),%eax
0x00401403:  mov    -0x4(%ebp),%edx
0x00401406:  shl    $0x2,%edx
0x00401409:  add    %eax,%edx
0x0040140b:  mov    -0xc(%ebp),%eax
0x0040140e:  or     -0x8(%ebp),%eax
0x00401411:  mov    %eax,(%edx)
0x00401413:  addl   $0x1,-0x4(%ebp)
0x00401417:  cmpl   $0x3ff,-0x4(%ebp)
0x0040141e:  jbe    0x4013cf

----------------
IN: kboot_tpg_identity
0x004013f6:  orl    $0x18,-0x8(%ebp)
0x004013fa:  mov    0x8(%ebp),%eax
0x004013fd:  mov    0x324(%eax),%eax
0x00401403:  mov    -0x4(%ebp),%edx
0x00401406:  shl    $0x2,%edx
0x00401409:  add    %eax,%edx
0x0040140b:  mov    -0xc(%ebp),%eax
0x0040140e:  or     -0x8(%ebp),%eax
0x00401411:  mov    %eax,(%edx)
0x00401413:  addl   $0x1,-0x4(%ebp)
0x00401417:  cmpl   $0x3ff,-0x4(%ebp)
0x0040141e:  jbe    0x4013cf

----------------
IN: kboot_tpg_identity
0x00401420:  nop    
0x00401421:  nop    
0x00401422:  leave  
0x00401423:  ret    

----------------
IN: kboot
0x00401043:  add    $0x10,%esp
0x00401046:  sub    $0xc,%esp
0x00401049:  pushl  -0xc(%ebp)
0x0040104c:  call   0x401424

----------------
IN: kboot_tpg_map_kernel
0x00401424:  push   %ebp
0x00401425:  mov    %esp,%ebp
0x00401427:  sub    $0x10,%esp
0x0040142a:  movl   $0x0,-0x4(%ebp)
0x00401431:  movl   $0x400000,-0x8(%ebp)
0x00401438:  mov    $0xf0400000,%eax
0x0040143d:  shr    $0x16,%eax
0x00401440:  mov    %eax,-0xc(%ebp)
0x00401443:  jmp    0x401470

----------------
IN: kboot_tpg_map_kernel
0x00401470:  mov    $0x207df,%eax
0x00401475:  cmp    %eax,-0x4(%ebp)
0x00401478:  jb     0x401445

----------------
IN: kboot_tpg_map_kernel
0x00401445:  mov    0x8(%ebp),%eax
0x00401448:  mov    0x324(%eax),%eax
0x0040144e:  mov    -0xc(%ebp),%edx
0x00401451:  shl    $0x2,%edx
0x00401454:  add    %edx,%eax
0x00401456:  mov    -0x8(%ebp),%edx
0x00401459:  or     $0x83,%dl
0x0040145c:  mov    %edx,(%eax)
0x0040145e:  addl   $0x400000,-0x4(%ebp)
0x00401465:  addl   $0x400000,-0x8(%ebp)
0x0040146c:  addl   $0x1,-0xc(%ebp)
0x00401470:  mov    $0x207df,%eax
0x00401475:  cmp    %eax,-0x4(%ebp)
0x00401478:  jb     0x401445

----------------
IN: kboot_tpg_map_kernel
0x0040147a:  mov    0x8(%ebp),%eax
0x0040147d:  mov    -0xc(%ebp),%edx
0x00401480:  mov    %edx,0x328(%eax)
0x00401486:  nop    
0x00401487:  leave  
0x00401488:  ret    

----------------
IN: kboot
0x00401051:  add    $0x10,%esp
0x00401054:  mov    -0xc(%ebp),%eax
0x00401057:  mov    0x324(%eax),%eax
0x0040105d:  sub    $0xc,%esp
0x00401060:  push   %eax
0x00401061:  call   0x401605

----------------
IN: 
0x00401605:  push   %ebp
0x00401606:  mov    %esp,%ebp
0x00401608:  mov    0x8(%ebp),%eax
0x0040160b:  mov    %eax,%cr3

----------------
IN: 
0x0040160e:  jmp    0x401610

----------------
IN: 
0x00401610:  pop    %ebp
0x00401611:  ret    

----------------
IN: kboot
0x00401066:  add    $0x10,%esp
0x00401069:  call   0x401505

----------------
IN: kboot_tpg_enable_paging
0x00401505:  push   %ebp
0x00401506:  mov    %esp,%ebp
0x00401508:  sub    $0x18,%esp
0x0040150b:  call   0x401489

----------------
IN: kboot_tpg_check_cpuf
0x00401489:  push   %ebp
0x0040148a:  mov    %esp,%ebp
0x0040148c:  sub    $0x28,%esp
0x0040148f:  movl   $0x0,-0x10(%ebp)
0x00401496:  lea    -0x1c(%ebp),%eax
0x00401499:  push   %eax
0x0040149a:  lea    -0x18(%ebp),%eax
0x0040149d:  push   %eax
0x0040149e:  lea    -0x14(%ebp),%eax
0x004014a1:  push   %eax
0x004014a2:  lea    -0x10(%ebp),%eax
0x004014a5:  push   %eax
0x004014a6:  call   0x40161f

----------------
IN: 
0x0040161f:  push   %ebp
0x00401620:  push   %ebx
0x00401621:  mov    0xc(%esp),%ebp
0x00401625:  mov    0x0(%ebp),%eax
0x00401628:  mov    0x10(%esp),%ebp
0x0040162c:  mov    0x0(%ebp),%ebx
0x0040162f:  mov    0x14(%esp),%ebp
0x00401633:  mov    0x0(%ebp),%ecx
0x00401636:  mov    0x18(%esp),%ebp
0x0040163a:  mov    0x0(%ebp),%edx
0x0040163d:  cpuid  
0x0040163f:  mov    0xc(%esp),%ebp
0x00401643:  mov    %eax,0x0(%ebp)
0x00401646:  mov    0x10(%esp),%ebp
0x0040164a:  mov    %ebx,0x0(%ebp)
0x0040164d:  mov    0x14(%esp),%ebp
0x00401651:  mov    %ecx,0x0(%ebp)
0x00401654:  mov    0x18(%esp),%ebp
0x00401658:  mov    %edx,0x0(%ebp)
0x0040165b:  pop    %ebx
0x0040165c:  pop    %ebp
0x0040165d:  ret    

----------------
IN: kboot_tpg_check_cpuf
0x004014ab:  add    $0x10,%esp
0x004014ae:  mov    -0x10(%ebp),%eax
0x004014b1:  test   %eax,%eax
0x004014b3:  jne    0x4014bc

----------------
IN: kboot_tpg_check_cpuf
0x004014bc:  movl   $0x1,-0x10(%ebp)
0x004014c3:  lea    -0x1c(%ebp),%eax
0x004014c6:  push   %eax
0x004014c7:  lea    -0x18(%ebp),%eax
0x004014ca:  push   %eax
0x004014cb:  lea    -0x14(%ebp),%eax
0x004014ce:  push   %eax
0x004014cf:  lea    -0x10(%ebp),%eax
0x004014d2:  push   %eax
0x004014d3:  call   0x40161f

----------------
IN: kboot_tpg_check_cpuf
0x004014d8:  add    $0x10,%esp
0x004014db:  movl   $0x0,-0xc(%ebp)
0x004014e2:  mov    -0x18(%ebp),%eax
0x004014e5:  and    $0x2000,%eax
0x004014ea:  test   %eax,%eax
0x004014ec:  je     0x4014f2

----------------
IN: kboot_tpg_check_cpuf
0x004014f2:  mov    -0x18(%ebp),%eax
0x004014f5:  and    $0x40,%eax
0x004014f8:  test   %eax,%eax
0x004014fa:  je     0x401500

----------------
IN: kboot_tpg_check_cpuf
0x00401500:  mov    -0xc(%ebp),%eax
0x00401503:  leave  
0x00401504:  ret    

----------------
IN: kboot_tpg_enable_paging
0x00401510:  mov    %eax,-0x10(%ebp)
0x00401513:  call   0x4015e0

----------------
IN: 
0x004015e0:  push   %ebp
0x004015e1:  mov    %esp,%ebp
0x004015e3:  mov    %cr0,%eax
0x004015e6:  pop    %ebp
0x004015e7:  ret    

----------------
IN: kboot_tpg_enable_paging
0x00401518:  mov    %eax,-0x14(%ebp)
0x0040151b:  call   0x4015f0

----------------
IN: 
0x004015f0:  push   %ebp
0x004015f1:  mov    %esp,%ebp
0x004015f3:  mov    %cr4,%eax
0x004015f6:  pop    %ebp
0x004015f7:  ret    

----------------
IN: kboot_tpg_enable_paging
0x00401520:  mov    %eax,-0xc(%ebp)
0x00401523:  mov    -0x14(%ebp),%eax
0x00401526:  and    $0x7fffffff,%eax
0x0040152b:  sub    $0xc,%esp
0x0040152e:  push   %eax
0x0040152f:  call   0x4015f8

----------------
IN: 
0x004015f8:  push   %ebp
0x004015f9:  mov    %esp,%ebp
0x004015fb:  mov    0x8(%ebp),%eax
0x004015fe:  mov    %eax,%cr0

----------------
IN: 
0x00401601:  jmp    0x401603

----------------
IN: 
0x00401603:  pop    %ebp
0x00401604:  ret    

----------------
IN: kboot_tpg_enable_paging
0x00401534:  add    $0x10,%esp
0x00401537:  mov    -0xc(%ebp),%eax
0x0040153a:  and    $0x6f,%al
0x0040153c:  sub    $0xc,%esp
0x0040153f:  push   %eax
0x00401540:  call   0x401612

----------------
IN: 
0x00401612:  push   %ebp
0x00401613:  mov    %esp,%ebp
0x00401615:  mov    0x8(%ebp),%eax
0x00401618:  mov    %eax,%cr4

----------------
IN: 
0x0040161b:  jmp    0x40161d

----------------
IN: 
0x0040161d:  pop    %ebp
0x0040161e:  ret    

----------------
IN: kboot_tpg_enable_paging
0x00401545:  add    $0x10,%esp
0x00401548:  call   0x4015e0

----------------
IN: kboot_tpg_enable_paging
0x0040154d:  mov    %eax,-0x14(%ebp)
0x00401550:  call   0x4015f0

----------------
IN: kboot_tpg_enable_paging
0x00401555:  mov    %eax,-0xc(%ebp)
0x00401558:  orl    $0x10,-0xc(%ebp)
0x0040155c:  sub    $0xc,%esp
0x0040155f:  pushl  -0xc(%ebp)
0x00401562:  call   0x401612

----------------
IN: kboot_tpg_enable_paging
0x00401567:  add    $0x10,%esp
0x0040156a:  orl    $0x80000000,-0x14(%ebp)
0x00401571:  sub    $0xc,%esp
0x00401574:  pushl  -0x14(%ebp)
0x00401577:  call   0x4015f8

----------------
IN: kboot_tpg_enable_paging
0x0040157c:  add    $0x10,%esp
0x0040157f:  orl    $0x10000,-0x14(%ebp)
0x00401586:  sub    $0xc,%esp
0x00401589:  pushl  -0x14(%ebp)
0x0040158c:  call   0x4015f8

----------------
IN: kboot_tpg_enable_paging
0x00401591:  add    $0x10,%esp
0x00401594:  mov    -0x10(%ebp),%eax
0x00401597:  and    $0x2,%eax
0x0040159a:  test   %eax,%eax
0x0040159c:  je     0x4015a5

----------------
IN: kboot_tpg_enable_paging
0x004015a5:  sub    $0xc,%esp
0x004015a8:  pushl  -0xc(%ebp)
0x004015ab:  call   0x401612

----------------
IN: kboot_tpg_enable_paging
0x004015b0:  add    $0x10,%esp
0x004015b3:  nop    
0x004015b4:  leave  
0x004015b5:  ret    

----------------
IN: kboot
0x0040106e:  mov    -0xc(%ebp),%eax
0x00401071:  leave  
0x00401072:  ret    

----------------
IN: 
0x004015cf:  add    $0x8,%esp
0x004015d2:  jmp    0xf0405460

----------------
IN: 
0xf0405460:  mov    $0xf040e800,%esp
0xf0405465:  mov    %esp,%ebp
0xf0405467:  push   $0x0
0xf0405469:  push   %eax
0xf040546a:  call   0xf0405000

----------------
IN: karch_init
0xf0405000:  push   %ebp
0xf0405001:  mov    %esp,%ebp
0xf0405003:  sub    $0x8,%esp
0xf0405006:  sub    $0x4,%esp
0xf0405009:  push   $0x32c
0xf040500e:  pushl  0x8(%ebp)
0xf0405011:  push   $0xf041e800
0xf0405016:  call   0xf040a466

----------------
IN: kmemcpy
0xf040a466:  push   %ebp
0xf040a467:  mov    %esp,%ebp
0xf040a469:  sub    $0x10,%esp
0xf040a46c:  mov    0x8(%ebp),%eax
0xf040a46f:  mov    %eax,-0x4(%ebp)
0xf040a472:  mov    0xc(%ebp),%eax
0xf040a475:  mov    %eax,-0x8(%ebp)
0xf040a478:  jmp    0xf040a494

----------------
IN: kmemcpy
0xf040a494:  cmpl   $0x3,0x10(%ebp)
0xf040a498:  ja     0xf040a47a

----------------
IN: kmemcpy
0xf040a47a:  mov    -0x8(%ebp),%edx
0xf040a47d:  lea    0x4(%edx),%eax
0xf040a480:  mov    %eax,-0x8(%ebp)
0xf040a483:  mov    -0x4(%ebp),%eax
0xf040a486:  lea    0x4(%eax),%ecx
0xf040a489:  mov    %ecx,-0x4(%ebp)
0xf040a48c:  mov    (%edx),%edx
0xf040a48e:  mov    %edx,(%eax)
0xf040a490:  subl   $0x4,0x10(%ebp)
0xf040a494:  cmpl   $0x3,0x10(%ebp)
0xf040a498:  ja     0xf040a47a

----------------
IN: kmemcpy
0xf040a49a:  mov    -0x4(%ebp),%eax
0xf040a49d:  mov    %eax,-0xc(%ebp)
0xf040a4a0:  mov    -0x8(%ebp),%eax
0xf040a4a3:  mov    %eax,-0x10(%ebp)
0xf040a4a6:  jmp    0xf040a4c3

----------------
IN: kmemcpy
0xf040a4c3:  cmpl   $0x0,0x10(%ebp)
0xf040a4c7:  jne    0xf040a4a8

----------------
IN: kmemcpy
0xf040a4c9:  nop    
0xf040a4ca:  nop    
0xf040a4cb:  leave  
0xf040a4cc:  ret    

----------------
IN: karch_init
0xf040501b:  add    $0x10,%esp
0xf040501e:  call   0xf04051e4

----------------
IN: karch_init_cpu
0xf04051e4:  push   %ebp
0xf04051e5:  mov    %esp,%ebp
0xf04051e7:  sub    $0x8,%esp
0xf04051ea:  sub    $0x4,%esp
0xf04051ed:  push   $0x900
0xf04051f2:  push   $0x0
0xf04051f4:  push   $0xf041eb30
0xf04051f9:  call   0xf040a3de

----------------
IN: kmemset
0xf040a3de:  push   %ebp
0xf040a3df:  mov    %esp,%ebp
0xf040a3e1:  sub    $0x14,%esp
0xf040a3e4:  mov    0xc(%ebp),%eax
0xf040a3e7:  mov    %al,-0x14(%ebp)
0xf040a3ea:  movl   $0x0,-0xc(%ebp)
0xf040a3f1:  lea    -0xc(%ebp),%eax
0xf040a3f4:  movzbl -0x14(%ebp),%edx
0xf040a3f8:  mov    %dl,(%eax)
0xf040a3fa:  lea    -0xc(%ebp),%eax
0xf040a3fd:  add    $0x1,%eax
0xf040a400:  movzbl -0x14(%ebp),%edx
0xf040a404:  mov    %dl,(%eax)
0xf040a406:  lea    -0xc(%ebp),%eax
0xf040a409:  add    $0x2,%eax
0xf040a40c:  movzbl -0x14(%ebp),%edx
0xf040a410:  mov    %dl,(%eax)
0xf040a412:  lea    -0xc(%ebp),%eax
0xf040a415:  add    $0x3,%eax
0xf040a418:  movzbl -0x14(%ebp),%edx
0xf040a41c:  mov    %dl,(%eax)
0xf040a41e:  mov    0x8(%ebp),%eax
0xf040a421:  mov    %eax,-0x8(%ebp)
0xf040a424:  movl   $0x0,-0x4(%ebp)
0xf040a42b:  jmp    0xf040a43e

----------------
IN: kmemset
0xf040a43e:  mov    -0x4(%ebp),%eax
0xf040a441:  cmp    0x10(%ebp),%eax
0xf040a444:  jb     0xf040a42d

----------------
IN: kmemset
0xf040a42d:  mov    -0x8(%ebp),%edx
0xf040a430:  mov    -0x4(%ebp),%eax
0xf040a433:  add    %eax,%edx
0xf040a435:  mov    -0xc(%ebp),%eax
0xf040a438:  mov    %eax,(%edx)
0xf040a43a:  addl   $0x4,-0x4(%ebp)
0xf040a43e:  mov    -0x4(%ebp),%eax
0xf040a441:  cmp    0x10(%ebp),%eax
0xf040a444:  jb     0xf040a42d

----------------
IN: kmemset
0xf040a446:  jmp    0xf040a45a

----------------
IN: kmemset
0xf040a45a:  mov    -0x4(%ebp),%eax
0xf040a45d:  cmp    0x10(%ebp),%eax
0xf040a460:  jb     0xf040a448

----------------
IN: kmemset
0xf040a462:  nop    
0xf040a463:  nop    
0xf040a464:  leave  
0xf040a465:  ret    

----------------
IN: karch_init_cpu
0xf04051fe:  add    $0x10,%esp
0xf0405201:  movb   $0x1,0xf041f430
0xf0405208:  nop    
0xf0405209:  leave  
0xf040520a:  ret    

----------------
IN: karch_init
0xf0405023:  movb   $0x1,0xf041eb2c
0xf040502a:  call   0xf040508f

----------------
IN: karch_early_init
0xf040508f:  push   %ebp
0xf0405090:  mov    %esp,%ebp
0xf0405092:  sub    $0x8,%esp
0xf0405095:  call   0xf0405da1

----------------
IN: karch_init_gdt
0xf0405da1:  push   %ebp
0xf0405da2:  mov    %esp,%ebp
0xf0405da4:  sub    $0x8,%esp
0xf0405da7:  sub    $0x4,%esp
0xf0405daa:  push   $0xb0
0xf0405daf:  push   $0x0
0xf0405db1:  push   $0xf041f4f8
0xf0405db6:  call   0xf040a3de

----------------
IN: karch_init_gdt
0xf0405dbb:  add    $0x10,%esp
0xf0405dbe:  mov    $0xf041f4f8,%eax
0xf0405dc3:  mov    %eax,0xf041f4f2
0xf0405dc8:  movw   $0xaf,0xf041f4f0
0xf0405dd1:  push   $0x0
0xf0405dd3:  push   $0x0
0xf0405dd5:  push   $0x0
0xf0405dd7:  push   $0xf041f520
0xf0405ddc:  call   0xf0405f0b

----------------
IN: karch_set_gdt_data
0xf0405f0b:  push   %ebp
0xf0405f0c:  mov    %esp,%ebp
0xf0405f0e:  pushl  0x10(%ebp)
0xf0405f11:  pushl  0xc(%ebp)
0xf0405f14:  pushl  0x8(%ebp)
0xf0405f17:  call   0xf0405e84

----------------
IN: karch_set_gdt
0xf0405e84:  push   %ebp
0xf0405e85:  mov    %esp,%ebp
0xf0405e87:  mov    0xc(%ebp),%eax
0xf0405e8a:  mov    %eax,%edx
0xf0405e8c:  mov    0x8(%ebp),%eax
0xf0405e8f:  mov    %dx,0x2(%eax)
0xf0405e93:  mov    0xc(%ebp),%eax
0xf0405e96:  shr    $0x10,%eax
0xf0405e99:  mov    %eax,%edx
0xf0405e9b:  mov    0x8(%ebp),%eax
0xf0405e9e:  mov    %dl,0x4(%eax)
0xf0405ea1:  mov    0xc(%ebp),%eax
0xf0405ea4:  shr    $0x18,%eax
0xf0405ea7:  mov    %eax,%edx
0xf0405ea9:  mov    0x8(%ebp),%eax
0xf0405eac:  mov    %dl,0x7(%eax)
0xf0405eaf:  subl   $0x1,0x10(%ebp)
0xf0405eb3:  cmpl   $0xfffff,0x10(%ebp)
0xf0405eba:  jbe    0xf0405edd

----------------
IN: karch_set_gdt
0xf0405ebc:  mov    0x10(%ebp),%eax
0xf0405ebf:  shr    $0x10,%eax
0xf0405ec2:  mov    %eax,%edx
0xf0405ec4:  mov    0x8(%ebp),%eax
0xf0405ec7:  mov    %dx,(%eax)
0xf0405eca:  mov    0x10(%ebp),%eax
0xf0405ecd:  shr    $0xc,%eax
0xf0405ed0:  or     $0xffffff80,%eax
0xf0405ed3:  mov    %eax,%edx
0xf0405ed5:  mov    0x8(%ebp),%eax
0xf0405ed8:  mov    %dl,0x6(%eax)
0xf0405edb:  jmp    0xf0405ef6

----------------
IN: karch_set_gdt
0xf0405ef6:  mov    0x8(%ebp),%eax
0xf0405ef9:  movzbl 0x6(%eax),%eax
0xf0405efd:  or     $0x40,%eax
0xf0405f00:  mov    %eax,%edx
0xf0405f02:  mov    0x8(%ebp),%eax
0xf0405f05:  mov    %dl,0x6(%eax)
0xf0405f08:  nop    
0xf0405f09:  pop    %ebp
0xf0405f0a:  ret    

----------------
IN: karch_set_gdt_data
0xf0405f1c:  add    $0xc,%esp
0xf0405f1f:  mov    0x14(%ebp),%eax
0xf0405f22:  shr    $0x5,%eax
0xf0405f25:  or     $0xffffff93,%eax
0xf0405f28:  mov    %eax,%edx
0xf0405f2a:  mov    0x8(%ebp),%eax
0xf0405f2d:  mov    %dl,0x5(%eax)
0xf0405f30:  nop    
0xf0405f31:  leave  
0xf0405f32:  ret    

----------------
IN: karch_init_gdt
0xf0405de1:  add    $0x10,%esp
0xf0405de4:  movb   $0x82,0xf041f525
0xf0405deb:  push   $0x0
0xf0405ded:  push   $0xffffffff
0xf0405def:  push   $0x0
0xf0405df1:  push   $0xf041f500
0xf0405df6:  call   0xf0405f33

----------------
IN: karch_set_gdt_code
0xf0405f33:  push   %ebp
0xf0405f34:  mov    %esp,%ebp
0xf0405f36:  pushl  0x10(%ebp)
0xf0405f39:  pushl  0xc(%ebp)
0xf0405f3c:  pushl  0x8(%ebp)
0xf0405f3f:  call   0xf0405e84

----------------
IN: karch_set_gdt_code
0xf0405f44:  add    $0xc,%esp
0xf0405f47:  mov    0x14(%ebp),%eax
0xf0405f4a:  shr    $0x5,%eax
0xf0405f4d:  or     $0xffffff9a,%eax
0xf0405f50:  mov    %eax,%edx
0xf0405f52:  mov    0x8(%ebp),%eax
0xf0405f55:  mov    %dl,0x5(%eax)
0xf0405f58:  nop    
0xf0405f59:  leave  
0xf0405f5a:  ret    

----------------
IN: karch_init_gdt
0xf0405dfb:  add    $0x10,%esp
0xf0405dfe:  push   $0x0
0xf0405e00:  push   $0xffffffff
0xf0405e02:  push   $0x0
0xf0405e04:  push   $0xf041f508
0xf0405e09:  call   0xf0405f0b

----------------
IN: karch_init_gdt
0xf0405e0e:  add    $0x10,%esp
0xf0405e11:  push   $0x3
0xf0405e13:  push   $0xffffffff
0xf0405e15:  push   $0x0
0xf0405e17:  push   $0xf041f500
0xf0405e1c:  call   0xf0405f33

----------------
IN: karch_init_gdt
0xf0405e21:  add    $0x10,%esp
0xf0405e24:  push   $0x3
0xf0405e26:  push   $0xffffffff
0xf0405e28:  push   $0x0
0xf0405e2a:  push   $0xf041f508
0xf0405e2f:  call   0xf0405f0b

----------------
IN: karch_init_gdt
0xf0405e34:  add    $0x10,%esp
0xf0405e37:  nop    
0xf0405e38:  leave  
0xf0405e39:  ret    

----------------
IN: karch_early_init
0xf040509a:  call   0xf0406973

----------------
IN: karch_init_tss
0xf0406973:  push   %ebp

----------------
IN: karch_init_tss
0xf0406974:  mov    %esp,%ebp

----------------
IN: karch_init_tss
0xf0406976:  sub    $0x8,%esp

----------------
IN: karch_init_tss
0xf0406979:  movb   $0x0,0xf041fe50

----------------
IN: karch_init_tss
0xf0406980:  sub    $0xc,%esp

----------------
IN: karch_init_tss
0xf0406983:  push   $0x11

----------------
IN: karch_init_tss
0xf0406985:  call   0xf040548d

----------------
IN: kcpuinfo
0xf040548d:  push   %ebp
0xf040548e:  mov    %esp,%ebp
0xf0405490:  sub    $0x48,%esp
0xf0405493:  cmpl   $0x0,0x8(%ebp)
0xf0405497:  jne    0xf04054a3

----------------
IN: kcpuinfo
0xf04054a3:  movl   $0x0,-0x24(%ebp)
0xf04054aa:  movl   $0x0,-0x34(%ebp)
0xf04054b1:  movl   $0x0,-0x38(%ebp)
0xf04054b8:  movl   $0x0,-0x3c(%ebp)
0xf04054bf:  movl   $0x0,-0x40(%ebp)
0xf04054c6:  lea    -0x2c(%ebp),%eax
0xf04054c9:  push   %eax
0xf04054ca:  lea    -0x30(%ebp),%eax
0xf04054cd:  push   %eax
0xf04054ce:  lea    -0x28(%ebp),%eax
0xf04054d1:  push   %eax
0xf04054d2:  lea    -0x24(%ebp),%eax
0xf04054d5:  push   %eax
0xf04054d6:  call   0xf040576b

----------------
IN: 
0xf040576b:  push   %ebp
0xf040576c:  push   %ebx
0xf040576d:  mov    0xc(%esp),%ebp
0xf0405771:  mov    0x0(%ebp),%eax
0xf0405774:  mov    0x10(%esp),%ebp
0xf0405778:  mov    0x0(%ebp),%ebx
0xf040577b:  mov    0x14(%esp),%ebp
0xf040577f:  mov    0x0(%ebp),%ecx
0xf0405782:  mov    0x18(%esp),%ebp
0xf0405786:  mov    0x0(%ebp),%edx
0xf0405789:  cpuid  
0xf040578b:  mov    0xc(%esp),%ebp
0xf040578f:  mov    %eax,0x0(%ebp)
0xf0405792:  mov    0x10(%esp),%ebp
0xf0405796:  mov    %ebx,0x0(%ebp)
0xf0405799:  mov    0x14(%esp),%ebp
0xf040579d:  mov    %ecx,0x0(%ebp)
0xf04057a0:  mov    0x18(%esp),%ebp
0xf04057a4:  mov    %edx,0x0(%ebp)
0xf04057a7:  pop    %ebx
0xf04057a8:  pop    %ebp
0xf04057a9:  ret    

----------------
IN: kcpuinfo
0xf04054db:  add    $0x10,%esp
0xf04054de:  mov    -0x24(%ebp),%eax
0xf04054e1:  test   %eax,%eax
0xf04054e3:  jne    0xf04054ef

----------------
IN: kcpuinfo
0xf04054ef:  mov    0xf040d000,%eax
0xf04054f4:  mov    (%eax),%eax
0xf04054f6:  mov    %eax,-0x14(%ebp)
0xf04054f9:  mov    0xf040d004,%eax
0xf04054fe:  mov    (%eax),%eax
0xf0405500:  mov    %eax,-0x18(%ebp)
0xf0405503:  mov    0xf040d000,%eax
0xf0405508:  mov    (%eax),%edx
0xf040550a:  mov    -0x30(%ebp),%eax
0xf040550d:  cmp    %eax,%edx
0xf040550f:  sete   %al
0xf0405512:  mov    %al,-0x19(%ebp)
0xf0405515:  mov    0xf040d004,%eax
0xf040551a:  mov    (%eax),%edx
0xf040551c:  mov    -0x30(%ebp),%eax
0xf040551f:  cmp    %eax,%edx
0xf0405521:  sete   %al
0xf0405524:  mov    %al,-0x1a(%ebp)
0xf0405527:  movl   $0x1,-0x24(%ebp)
0xf040552e:  lea    -0x2c(%ebp),%eax
0xf0405531:  push   %eax
0xf0405532:  lea    -0x30(%ebp),%eax
0xf0405535:  push   %eax
0xf0405536:  lea    -0x28(%ebp),%eax
0xf0405539:  push   %eax
0xf040553a:  lea    -0x24(%ebp),%eax
0xf040553d:  push   %eax
0xf040553e:  call   0xf040576b

----------------
IN: kcpuinfo
0xf0405543:  add    $0x10,%esp
0xf0405546:  mov    -0x24(%ebp),%eax
0xf0405549:  and    $0xf,%eax
0xf040554c:  mov    %eax,-0x20(%ebp)
0xf040554f:  mov    -0x24(%ebp),%eax
0xf0405552:  shr    $0x4,%eax
0xf0405555:  and    $0xf,%eax
0xf0405558:  mov    %eax,-0xc(%ebp)
0xf040555b:  cmpl   $0xf,-0xc(%ebp)
0xf040555f:  je     0xf0405567

----------------
IN: kcpuinfo
0xf0405561:  cmpl   $0x6,-0xc(%ebp)
0xf0405565:  jne    0xf0405576

----------------
IN: kcpuinfo
0xf0405567:  mov    -0x24(%ebp),%eax
0xf040556a:  shr    $0x10,%eax
0xf040556d:  shl    $0x4,%eax
0xf0405570:  movzbl %al,%eax
0xf0405573:  add    %eax,-0xc(%ebp)
0xf0405576:  mov    -0x24(%ebp),%eax
0xf0405579:  shr    $0x8,%eax
0xf040557c:  and    $0xf,%eax
0xf040557f:  mov    %eax,-0x10(%ebp)
0xf0405582:  cmpl   $0xf,-0x10(%ebp)
0xf0405586:  jne    0xf0405594

----------------
IN: kcpuinfo
0xf0405594:  cmpb   $0x0,-0x1a(%ebp)
0xf0405598:  je     0xf04055b9

----------------
IN: kcpuinfo
0xf04055b9:  cmpl   $0x12,0x8(%ebp)
0xf04055bd:  ja     0xf0405712

----------------
IN: kcpuinfo
0xf04055c3:  mov    0x8(%ebp),%eax
0xf04055c6:  shl    $0x2,%eax
0xf04055c9:  add    $0xf040b090,%eax
0xf04055ce:  mov    (%eax),%eax
0xf04055d0:  jmp    *%eax

----------------
IN: kcpuinfo
0xf04056ab:  cmpb   $0x0,-0x19(%ebp)
0xf04056af:  jne    0xf04056b8

----------------
IN: kcpuinfo
0xf04056b1:  mov    $0x0,%eax
0xf04056b6:  jmp    0xf0405717

----------------
IN: kcpuinfo
0xf0405717:  leave  
0xf0405718:  ret    

----------------
IN: karch_init_tss
0xf040698a:  add    $0x10,%esp

----------------
IN: karch_init_tss
0xf040698d:  test   %eax,%eax

----------------
IN: karch_init_tss
0xf040698f:  setne  %al

----------------
IN: karch_init_tss
0xf0406992:  movzbl %al,%eax

----------------
IN: karch_init_tss
0xf0406995:  mov    %eax,%edx

----------------
IN: karch_init_tss
0xf0406997:  movzbl 0xf041fe50,%eax

----------------
IN: karch_init_tss
0xf040699e:  or     %edx,%eax

----------------
IN: karch_init_tss
0xf04069a0:  mov    %al,0xf041fe50

----------------
IN: karch_init_tss
0xf04069a5:  sub    $0xc,%esp

----------------
IN: karch_init_tss
0xf04069a8:  push   $0x12

----------------
IN: karch_init_tss
0xf04069aa:  call   0xf040548d

----------------
IN: kcpuinfo
0xf04056eb:  cmpb   $0x0,-0x1a(%ebp)
0xf04056ef:  jne    0xf04056f8

----------------
IN: kcpuinfo
0xf04056f1:  mov    $0x0,%eax
0xf04056f6:  jmp    0xf0405717

----------------
IN: karch_init_tss
0xf04069af:  add    $0x10,%esp

----------------
IN: karch_init_tss
0xf04069b2:  test   %eax,%eax

----------------
IN: karch_init_tss
0xf04069b4:  je     0xf04069bd

----------------
IN: karch_init_tss
0xf04069bd:  mov    $0x0,%eax

----------------
IN: karch_init_tss
0xf04069c2:  mov    %eax,%edx

----------------
IN: karch_init_tss
0xf04069c4:  movzbl 0xf041fe50,%eax

----------------
IN: karch_init_tss
0xf04069cb:  or     %edx,%eax

----------------
IN: karch_init_tss
0xf04069cd:  mov    %al,0xf041fe50

----------------
IN: karch_init_tss
0xf04069d2:  sub    $0xc,%esp

----------------
IN: karch_init_tss
0xf04069d5:  push   $0x0

----------------
IN: karch_init_tss
0xf04069d7:  call   0xf040520b

----------------
IN: karch_stacktop_for
0xf040520b:  push   %ebp
0xf040520c:  mov    %esp,%ebp
0xf040520e:  sub    $0x14,%esp
0xf0405211:  mov    0x8(%ebp),%eax
0xf0405214:  mov    %al,-0x14(%ebp)
0xf0405217:  cmpb   $0xf,-0x14(%ebp)
0xf040521b:  jbe    0xf0405224

----------------
IN: karch_stacktop_for
0xf0405224:  movl   $0xf041e800,-0x4(%ebp)
0xf040522b:  movzbl -0x14(%ebp),%eax
0xf040522f:  shl    $0xc,%eax
0xf0405232:  neg    %eax
0xf0405234:  mov    %eax,%edx
0xf0405236:  mov    -0x4(%ebp),%eax
0xf0405239:  add    %edx,%eax
0xf040523b:  leave  
0xf040523c:  ret    

----------------
IN: karch_init_tss
0xf04069dc:  add    $0x10,%esp

----------------
IN: karch_init_tss
0xf04069df:  sub    $0x8,%esp

----------------
IN: karch_init_tss
0xf04069e2:  push   %eax

----------------
IN: karch_init_tss
0xf04069e3:  push   $0x0

----------------
IN: karch_init_tss
0xf04069e5:  call   0xf04069f0

----------------
IN: karch_setup_tss
0xf04069f0:  push   %ebp

----------------
IN: karch_setup_tss
0xf04069f1:  mov    %esp,%ebp

----------------
IN: karch_setup_tss
0xf04069f3:  sub    $0x38,%esp

----------------
IN: karch_setup_tss
0xf04069f6:  mov    0x8(%ebp),%eax

----------------
IN: karch_setup_tss
0xf04069f9:  mov    %al,-0x2c(%ebp)

----------------
IN: karch_setup_tss
0xf04069fc:  movzbl -0x2c(%ebp),%eax

----------------
IN: karch_setup_tss
0xf0406a00:  sub    $0xc,%esp

----------------
IN: karch_setup_tss
0xf0406a03:  push   %eax

----------------
IN: karch_setup_tss
0xf0406a04:  call   0xf0405249

----------------
IN: karch_get_cpu
0xf0405249:  push   %ebp
0xf040524a:  mov    %esp,%ebp
0xf040524c:  sub    $0x4,%esp
0xf040524f:  mov    0x8(%ebp),%eax
0xf0405252:  mov    %al,-0x4(%ebp)
0xf0405255:  movzbl 0xf041f430,%eax
0xf040525c:  cmp    %al,-0x4(%ebp)
0xf040525f:  jb     0xf0405268

----------------
IN: karch_get_cpu
0xf0405268:  movzbl -0x4(%ebp),%edx
0xf040526c:  mov    %edx,%eax
0xf040526e:  shl    $0x3,%eax
0xf0405271:  add    %edx,%eax
0xf0405273:  shl    $0x4,%eax
0xf0405276:  add    $0xf041eb30,%eax
0xf040527b:  leave  
0xf040527c:  ret    

----------------
IN: karch_setup_tss
0xf0406a09:  add    $0x10,%esp

----------------
IN: karch_setup_tss
0xf0406a0c:  mov    %eax,-0xc(%ebp)

----------------
IN: karch_setup_tss
0xf0406a0f:  mov    -0xc(%ebp),%eax

----------------
IN: karch_setup_tss
0xf0406a12:  mov    %eax,-0x10(%ebp)

----------------
IN: karch_setup_tss
0xf0406a15:  movzbl -0x2c(%ebp),%eax

----------------
IN: karch_setup_tss
0xf0406a19:  add    $0x6,%eax

----------------
IN: karch_setup_tss
0xf0406a1c:  movzbl %al,%eax

----------------
IN: karch_setup_tss
0xf0406a1f:  sub    $0xc,%esp

----------------
IN: karch_setup_tss
0xf0406a22:  push   %eax

----------------
IN: karch_setup_tss
0xf0406a23:  call   0xf0405e5d

----------------
IN: karch_get_gdt
0xf0405e5d:  push   %ebp
0xf0405e5e:  mov    %esp,%ebp
0xf0405e60:  sub    $0x4,%esp
0xf0405e63:  mov    0x8(%ebp),%eax
0xf0405e66:  mov    %al,-0x4(%ebp)
0xf0405e69:  cmpb   $0x15,-0x4(%ebp)
0xf0405e6d:  jbe    0xf0405e76

----------------
IN: karch_get_gdt
0xf0405e76:  movzbl -0x4(%ebp),%eax
0xf0405e7a:  shl    $0x3,%eax
0xf0405e7d:  add    $0xf041f4f8,%eax
0xf0405e82:  leave  
0xf0405e83:  ret    

----------------
IN: karch_setup_tss
0xf0406a28:  add    $0x10,%esp

----------------
IN: karch_setup_tss
0xf0406a2b:  mov    %eax,-0x14(%ebp)

----------------
IN: karch_setup_tss
0xf0406a2e:  cmpl   $0x0,-0x14(%ebp)

----------------
IN: karch_setup_tss
0xf0406a32:  je     0xf0406a3a

----------------
IN: karch_setup_tss
0xf0406a34:  cmpl   $0x0,0xc(%ebp)

----------------
IN: karch_setup_tss
0xf0406a38:  jne    0xf0406a44

----------------
IN: karch_setup_tss
0xf0406a44:  mov    0xc(%ebp),%eax

----------------
IN: karch_setup_tss
0xf0406a47:  sub    $0x8,%eax

----------------
IN: karch_setup_tss
0xf0406a4a:  mov    %eax,-0x18(%ebp)

----------------
IN: karch_setup_tss
0xf0406a4d:  mov    -0x10(%ebp),%eax

----------------
IN: karch_setup_tss
0xf0406a50:  push   $0x0

----------------
IN: karch_setup_tss
0xf0406a52:  push   $0x6c

----------------
IN: karch_setup_tss
0xf0406a54:  push   %eax

----------------
IN: karch_setup_tss
0xf0406a55:  pushl  -0x14(%ebp)

----------------
IN: karch_setup_tss
0xf0406a58:  call   0xf0405f0b

----------------
IN: karch_set_gdt
0xf0405edd:  mov    0x10(%ebp),%eax
0xf0405ee0:  mov    %eax,%edx
0xf0405ee2:  mov    0x8(%ebp),%eax
0xf0405ee5:  mov    %dx,(%eax)
0xf0405ee8:  mov    0x10(%ebp),%eax
0xf0405eeb:  shr    $0x10,%eax
0xf0405eee:  mov    %eax,%edx
0xf0405ef0:  mov    0x8(%ebp),%eax
0xf0405ef3:  mov    %dl,0x6(%eax)
0xf0405ef6:  mov    0x8(%ebp),%eax
0xf0405ef9:  movzbl 0x6(%eax),%eax
0xf0405efd:  or     $0x40,%eax
0xf0405f00:  mov    %eax,%edx
0xf0405f02:  mov    0x8(%ebp),%eax
0xf0405f05:  mov    %dl,0x6(%eax)
0xf0405f08:  nop    
0xf0405f09:  pop    %ebp
0xf0405f0a:  ret    

----------------
IN: karch_setup_tss
0xf0406a5d:  add    $0x10,%esp

----------------
IN: karch_setup_tss
0xf0406a60:  mov    -0x14(%ebp),%eax

----------------
IN: karch_setup_tss
0xf0406a63:  movb   $0x89,0x5(%eax)

----------------
IN: karch_setup_tss
0xf0406a67:  sub    $0x4,%esp

----------------
IN: karch_setup_tss
0xf0406a6a:  push   $0x6c

----------------
IN: karch_setup_tss
0xf0406a6c:  push   $0x0

----------------
IN: karch_setup_tss
0xf0406a6e:  pushl  -0x10(%ebp)

----------------
IN: karch_setup_tss
0xf0406a71:  call   0xf040a3de

----------------
IN: karch_setup_tss
0xf0406a76:  add    $0x10,%esp

----------------
IN: karch_setup_tss
0xf0406a79:  mov    -0x10(%ebp),%eax

----------------
IN: karch_setup_tss
0xf0406a7c:  movl   $0x2,0x8(%eax)

----------------
IN: karch_setup_tss
0xf0406a83:  mov    -0x10(%ebp),%eax

----------------
IN: karch_setup_tss
0xf0406a86:  mov    0x8(%eax),%edx

----------------
IN: karch_setup_tss
0xf0406a89:  mov    -0x10(%ebp),%eax

----------------
IN: karch_setup_tss
0xf0406a8c:  mov    %edx,0x5c(%eax)

----------------
IN: karch_setup_tss
0xf0406a8f:  mov    -0x10(%ebp),%eax

----------------
IN: karch_setup_tss
0xf0406a92:  mov    0x5c(%eax),%edx

----------------
IN: karch_setup_tss
0xf0406a95:  mov    -0x10(%ebp),%eax

----------------
IN: karch_setup_tss
0xf0406a98:  mov    %edx,0x58(%eax)

----------------
IN: karch_setup_tss
0xf0406a9b:  mov    -0x10(%ebp),%eax

----------------
IN: karch_setup_tss
0xf0406a9e:  mov    0x58(%eax),%edx

----------------
IN: karch_setup_tss
0xf0406aa1:  mov    -0x10(%ebp),%eax

----------------
IN: karch_setup_tss
0xf0406aa4:  mov    %edx,0x48(%eax)

----------------
IN: karch_setup_tss
0xf0406aa7:  mov    -0x10(%ebp),%eax

----------------
IN: karch_setup_tss
0xf0406aaa:  mov    0x48(%eax),%edx

----------------
IN: karch_setup_tss
0xf0406aad:  mov    -0x10(%ebp),%eax

----------------
IN: karch_setup_tss
0xf0406ab0:  mov    %edx,0x54(%eax)

----------------
IN: karch_setup_tss
0xf0406ab3:  mov    -0x10(%ebp),%eax

----------------
IN: karch_setup_tss
0xf0406ab6:  movl   $0x1,0x4c(%eax)

----------------
IN: karch_setup_tss
0xf0406abd:  mov    -0x10(%ebp),%eax

----------------
IN: karch_setup_tss
0xf0406ac0:  movl   $0x6c,0x68(%eax)

----------------
IN: karch_setup_tss
0xf0406ac7:  mov    -0xc(%ebp),%eax

----------------
IN: karch_setup_tss
0xf0406aca:  mov    -0x18(%ebp),%edx

----------------
IN: karch_setup_tss
0xf0406acd:  mov    %edx,0x6c(%eax)

----------------
IN: karch_setup_tss
0xf0406ad0:  mov    -0xc(%ebp),%eax

----------------
IN: karch_setup_tss
0xf0406ad3:  mov    0x6c(%eax),%eax

----------------
IN: karch_setup_tss
0xf0406ad6:  mov    %eax,%edx

----------------
IN: karch_setup_tss
0xf0406ad8:  mov    -0x10(%ebp),%eax

----------------
IN: karch_setup_tss
0xf0406adb:  mov    %edx,0x4(%eax)

----------------
IN: karch_setup_tss
0xf0406ade:  mov    -0xc(%ebp),%eax

----------------
IN: karch_setup_tss
0xf0406ae1:  movzwl 0x74(%eax),%eax

----------------
IN: karch_setup_tss
0xf0406ae5:  or     $0x10,%eax

----------------
IN: karch_setup_tss
0xf0406ae8:  mov    %eax,%edx

----------------
IN: karch_setup_tss
0xf0406aea:  mov    -0xc(%ebp),%eax

----------------
IN: karch_setup_tss
0xf0406aed:  mov    %dx,0x74(%eax)

----------------
IN: karch_setup_tss
0xf0406af1:  movzbl -0x2c(%ebp),%edx

----------------
IN: karch_setup_tss
0xf0406af5:  mov    -0x18(%ebp),%eax

----------------
IN: karch_setup_tss
0xf0406af8:  mov    %edx,0x4(%eax)

----------------
IN: karch_setup_tss
0xf0406afb:  mov    -0x18(%ebp),%eax

----------------
IN: karch_setup_tss
0xf0406afe:  movl   $0x0,(%eax)

----------------
IN: karch_setup_tss
0xf0406b04:  movzbl 0xf041fe50,%eax

----------------
IN: karch_setup_tss
0xf0406b0b:  movzbl %al,%eax

----------------
IN: karch_setup_tss
0xf0406b0e:  and    $0x1,%eax

----------------
IN: karch_setup_tss
0xf0406b11:  test   %eax,%eax

----------------
IN: karch_setup_tss
0xf0406b13:  je     0xf0406b56

----------------
IN: karch_setup_tss
0xf0406b56:  movzbl 0xf041fe50,%eax

----------------
IN: karch_setup_tss
0xf0406b5d:  movzbl %al,%eax

----------------
IN: karch_setup_tss
0xf0406b60:  and    $0x2,%eax

----------------
IN: karch_setup_tss
0xf0406b63:  test   %eax,%eax

----------------
IN: karch_setup_tss
0xf0406b65:  je     0xf0406bb7

----------------
IN: karch_setup_tss
0xf0406bb7:  leave  

----------------
IN: karch_setup_tss
0xf0406bb8:  ret    

----------------
IN: karch_init_tss
0xf04069ea:  add    $0x10,%esp

----------------
IN: karch_init_tss
0xf04069ed:  nop    

----------------
IN: karch_init_tss
0xf04069ee:  leave  

----------------
IN: karch_init_tss
0xf04069ef:  ret    

----------------
IN: karch_early_init
0xf040509f:  call   0xf0405e44

----------------
IN: karch_flush_gdt
0xf0405e44:  push   %ebp
0xf0405e45:  mov    %esp,%ebp
0xf0405e47:  sub    $0x8,%esp
0xf0405e4a:  sub    $0xc,%esp
0xf0405e4d:  push   $0xf041f4f0
0xf0405e52:  call   0xf04057d2

----------------
IN: 
0xf04057d2:  push   %ebp
0xf04057d3:  mov    %esp,%ebp
0xf04057d5:  mov    0x8(%ebp),%eax
0xf04057d8:  lgdtl  (%eax)
0xf04057db:  mov    %ebp,%esp
0xf04057dd:  pop    %ebp
0xf04057de:  ret    

----------------
IN: karch_flush_gdt
0xf0405e57:  add    $0x10,%esp
0xf0405e5a:  nop    
0xf0405e5b:  leave  
0xf0405e5c:  ret    

----------------
IN: karch_early_init
0xf04050a4:  call   0xf04066bf

----------------
IN: karch_init_idt
0xf04066bf:  push   %ebp

----------------
IN: karch_init_idt
0xf04066c0:  mov    %esp,%ebp

----------------
IN: karch_init_idt
0xf04066c2:  sub    $0x8,%esp

----------------
IN: karch_init_idt
0xf04066c5:  sub    $0x4,%esp

----------------
IN: karch_init_idt
0xf04066c8:  push   $0x800

----------------
IN: karch_init_idt
0xf04066cd:  push   $0x0

----------------
IN: karch_init_idt
0xf04066cf:  push   $0xf041f650

----------------
IN: karch_init_idt
0xf04066d4:  call   0xf040a3de

----------------
IN: karch_init_idt
0xf04066d9:  add    $0x10,%esp

----------------
IN: karch_init_idt
0xf04066dc:  mov    $0xf041f650,%eax

----------------
IN: karch_init_idt
0xf04066e1:  mov    %eax,0xf041f64a

----------------
IN: karch_init_idt
0xf04066e6:  movw   $0x7ff,0xf041f648

----------------
IN: karch_init_idt
0xf04066ef:  nop    

----------------
IN: karch_init_idt
0xf04066f0:  leave  

----------------
IN: karch_init_idt
0xf04066f1:  ret    

----------------
IN: karch_early_init
0xf04050a9:  call   0xf04062e0

----------------
IN: karch_init_i8259
0xf04062e0:  push   %ebp

----------------
IN: karch_init_i8259
0xf04062e1:  mov    %esp,%ebp

----------------
IN: karch_init_i8259
0xf04062e3:  sub    $0x8,%esp

----------------
IN: karch_init_i8259
0xf04062e6:  sub    $0x4,%esp

----------------
IN: karch_init_i8259
0xf04062e9:  push   $0x40

----------------
IN: karch_init_i8259
0xf04062eb:  push   $0x0

----------------
IN: karch_init_i8259
0xf04062ed:  push   $0xf041f5c0

----------------
IN: karch_init_i8259
0xf04062f2:  call   0xf040a3de

----------------
IN: karch_init_i8259
0xf04062f7:  add    $0x10,%esp

----------------
IN: karch_init_i8259
0xf04062fa:  sub    $0x4,%esp

----------------
IN: karch_init_i8259
0xf04062fd:  push   $0x40

----------------
IN: karch_init_i8259
0xf04062ff:  push   $0x0

----------------
IN: karch_init_i8259
0xf0406301:  push   $0xf041f600

----------------
IN: karch_init_i8259
0xf0406306:  call   0xf040a3de

----------------
IN: karch_init_i8259
0xf040630b:  add    $0x10,%esp

----------------
IN: karch_init_i8259
0xf040630e:  movb   $0x1,0xf041f640

----------------
IN: karch_init_i8259
0xf0406315:  sub    $0x8,%esp

----------------
IN: karch_init_i8259
0xf0406318:  push   $0x50

----------------
IN: karch_init_i8259
0xf040631a:  push   $0xf040b180

----------------
IN: karch_init_i8259
0xf040631f:  call   0xf0406781

----------------
IN: karch_load_idt_gatevec
0xf0406781:  push   %ebp

----------------
IN: karch_load_idt_gatevec
0xf0406782:  mov    %esp,%ebp

----------------
IN: karch_load_idt_gatevec
0xf0406784:  push   %ebx

----------------
IN: karch_load_idt_gatevec
0xf0406785:  sub    $0x14,%esp

----------------
IN: karch_load_idt_gatevec
0xf0406788:  mov    0xc(%ebp),%eax

----------------
IN: karch_load_idt_gatevec
0xf040678b:  mov    %al,-0x18(%ebp)

----------------
IN: karch_load_idt_gatevec
0xf040678e:  jmp    0xf04067cf

----------------
IN: karch_load_idt_gatevec
0xf04067cf:  cmpl   $0x0,0x8(%ebp)

----------------
IN: karch_load_idt_gatevec
0xf04067d3:  je     0xf04067de

----------------
IN: karch_load_idt_gatevec
0xf04067d5:  mov    0x8(%ebp),%eax

----------------
IN: karch_load_idt_gatevec
0xf04067d8:  mov    (%eax),%eax

----------------
IN: karch_load_idt_gatevec
0xf04067da:  test   %eax,%eax

----------------
IN: karch_load_idt_gatevec
0xf04067dc:  jne    0xf0406790

----------------
IN: karch_load_idt_gatevec
0xf0406790:  mov    0x8(%ebp),%eax

----------------
IN: karch_load_idt_gatevec
0xf0406793:  lea    0x8(%eax),%edx

----------------
IN: karch_load_idt_gatevec
0xf0406796:  mov    %edx,0x8(%ebp)

----------------
IN: karch_load_idt_gatevec
0xf0406799:  mov    %eax,-0x8(%ebp)

----------------
IN: karch_load_idt_gatevec
0xf040679c:  mov    -0x8(%ebp),%eax

----------------
IN: karch_load_idt_gatevec
0xf040679f:  movzbl 0x5(%eax),%eax

----------------
IN: karch_load_idt_gatevec
0xf04067a3:  movzbl %al,%eax

----------------
IN: karch_load_idt_gatevec
0xf04067a6:  shl    $0x5,%eax

----------------
IN: karch_load_idt_gatevec
0xf04067a9:  or     $0x8e,%al

----------------
IN: karch_load_idt_gatevec
0xf04067ab:  mov    %eax,%ecx

----------------
IN: karch_load_idt_gatevec
0xf04067ad:  mov    -0x8(%ebp),%eax

----------------
IN: karch_load_idt_gatevec
0xf04067b0:  mov    (%eax),%eax

----------------
IN: karch_load_idt_gatevec
0xf04067b2:  mov    %eax,%edx

----------------
IN: karch_load_idt_gatevec
0xf04067b4:  mov    -0x8(%ebp),%eax

----------------
IN: karch_load_idt_gatevec
0xf04067b7:  movzbl 0x4(%eax),%ebx

----------------
IN: karch_load_idt_gatevec
0xf04067bb:  movzbl -0x18(%ebp),%eax

----------------
IN: karch_load_idt_gatevec
0xf04067bf:  add    %ebx,%eax

----------------
IN: karch_load_idt_gatevec
0xf04067c1:  movzbl %al,%eax

----------------
IN: karch_load_idt_gatevec
0xf04067c4:  push   %ecx

----------------
IN: karch_load_idt_gatevec
0xf04067c5:  push   %edx

----------------
IN: karch_load_idt_gatevec
0xf04067c6:  push   %eax

----------------
IN: karch_load_idt_gatevec
0xf04067c7:  call   0xf0406735

----------------
IN: karch_set_idt
0xf0406735:  push   %ebp

----------------
IN: karch_set_idt
0xf0406736:  mov    %esp,%ebp

----------------
IN: karch_set_idt
0xf0406738:  sub    $0x14,%esp

----------------
IN: karch_set_idt
0xf040673b:  mov    0x8(%ebp),%eax

----------------
IN: karch_set_idt
0xf040673e:  mov    %al,-0x14(%ebp)

----------------
IN: karch_set_idt
0xf0406741:  movzbl -0x14(%ebp),%eax

----------------
IN: karch_set_idt
0xf0406745:  shl    $0x3,%eax

----------------
IN: karch_set_idt
0xf0406748:  add    $0xf041f650,%eax

----------------
IN: karch_set_idt
0xf040674d:  mov    %eax,-0x4(%ebp)

----------------
IN: karch_set_idt
0xf0406750:  mov    0xc(%ebp),%eax

----------------
IN: karch_set_idt
0xf0406753:  mov    %eax,%edx

----------------
IN: karch_set_idt
0xf0406755:  mov    -0x4(%ebp),%eax

----------------
IN: karch_set_idt
0xf0406758:  mov    %dx,(%eax)

----------------
IN: karch_set_idt
0xf040675b:  mov    0xc(%ebp),%eax

----------------
IN: karch_set_idt
0xf040675e:  shr    $0x10,%eax

----------------
IN: karch_set_idt
0xf0406761:  mov    %eax,%edx

----------------
IN: karch_set_idt
0xf0406763:  mov    -0x4(%ebp),%eax

----------------
IN: karch_set_idt
0xf0406766:  mov    %dx,0x6(%eax)

----------------
IN: karch_set_idt
0xf040676a:  mov    -0x4(%ebp),%eax

----------------
IN: karch_set_idt
0xf040676d:  movw   $0x8,0x2(%eax)

----------------
IN: karch_set_idt
0xf0406773:  mov    0x10(%ebp),%eax

----------------
IN: karch_set_idt
0xf0406776:  mov    %eax,%edx

----------------
IN: karch_set_idt
0xf0406778:  mov    -0x4(%ebp),%eax

----------------
IN: karch_set_idt
0xf040677b:  mov    %dl,0x5(%eax)

----------------
IN: karch_set_idt
0xf040677e:  nop    

----------------
IN: karch_set_idt
0xf040677f:  leave  

----------------
IN: karch_set_idt
0xf0406780:  ret    

----------------
IN: karch_load_idt_gatevec
0xf04067cc:  add    $0xc,%esp

----------------
IN: karch_load_idt_gatevec
0xf04067de:  nop    

----------------
IN: karch_load_idt_gatevec
0xf04067df:  mov    -0x4(%ebp),%ebx

----------------
IN: karch_load_idt_gatevec
0xf04067e2:  leave  

----------------
IN: karch_load_idt_gatevec
0xf04067e3:  ret    

----------------
IN: karch_init_i8259
0xf0406324:  add    $0x10,%esp

----------------
IN: karch_init_i8259
0xf0406327:  sub    $0x8,%esp

----------------
IN: karch_init_i8259
0xf040632a:  push   $0x70

----------------
IN: karch_init_i8259
0xf040632c:  push   $0xf040b1e0

----------------
IN: karch_init_i8259
0xf0406331:  call   0xf0406781

----------------
IN: karch_init_i8259
0xf0406336:  add    $0x10,%esp

----------------
IN: karch_init_i8259
0xf0406339:  call   0xf040636e

----------------
IN: karch_program_i8259
0xf040636e:  push   %ebp

----------------
IN: karch_program_i8259
0xf040636f:  mov    %esp,%ebp

----------------
IN: karch_program_i8259
0xf0406371:  sub    $0x8,%esp

----------------
IN: karch_program_i8259
0xf0406374:  sub    $0x8,%esp

----------------
IN: karch_program_i8259
0xf0406377:  push   $0x11

----------------
IN: karch_program_i8259
0xf0406379:  push   $0x20

----------------
IN: karch_program_i8259
0xf040637b:  call   0xf04058bc

----------------
IN: 
0xf04058bc:  push   %ebp
0xf04058bd:  mov    %esp,%ebp
0xf04058bf:  push   %edx
0xf04058c0:  mov    0x8(%ebp),%edx
0xf04058c3:  mov    0xc(%ebp),%al
0xf04058c6:  out    %al,(%dx)
0xf04058c7:  pop    %edx
0xf04058c8:  mov    %ebp,%esp
0xf04058ca:  pop    %ebp
0xf04058cb:  ret    

----------------
IN: karch_program_i8259
0xf0406380:  add    $0x10,%esp

----------------
IN: karch_program_i8259
0xf0406383:  sub    $0x8,%esp

----------------
IN: karch_program_i8259
0xf0406386:  push   $0x50

----------------
IN: karch_program_i8259
0xf0406388:  push   $0x21

----------------
IN: karch_program_i8259
0xf040638a:  call   0xf04058bc

----------------
IN: karch_program_i8259
0xf040638f:  add    $0x10,%esp

----------------
IN: karch_program_i8259
0xf0406392:  sub    $0x8,%esp

----------------
IN: karch_program_i8259
0xf0406395:  push   $0x4

----------------
IN: karch_program_i8259
0xf0406397:  push   $0x21

----------------
IN: karch_program_i8259
0xf0406399:  call   0xf04058bc

----------------
IN: karch_program_i8259
0xf040639e:  add    $0x10,%esp

----------------
IN: karch_program_i8259
0xf04063a1:  sub    $0x8,%esp

----------------
IN: karch_program_i8259
0xf04063a4:  push   $0x5

----------------
IN: karch_program_i8259
0xf04063a6:  push   $0x21

----------------
IN: karch_program_i8259
0xf04063a8:  call   0xf04058bc

----------------
IN: karch_program_i8259
0xf04063ad:  add    $0x10,%esp

----------------
IN: karch_program_i8259
0xf04063b0:  sub    $0x8,%esp

----------------
IN: karch_program_i8259
0xf04063b3:  push   $0xffffffff

----------------
IN: karch_program_i8259
0xf04063b5:  push   $0x21

----------------
IN: karch_program_i8259
0xf04063b7:  call   0xf04058bc

----------------
IN: karch_program_i8259
0xf04063bc:  add    $0x10,%esp

----------------
IN: karch_program_i8259
0xf04063bf:  sub    $0x8,%esp

----------------
IN: karch_program_i8259
0xf04063c2:  push   $0x11

----------------
IN: karch_program_i8259
0xf04063c4:  push   $0xa0

----------------
IN: karch_program_i8259
0xf04063c9:  call   0xf04058bc

----------------
IN: karch_program_i8259
0xf04063ce:  add    $0x10,%esp

----------------
IN: karch_program_i8259
0xf04063d1:  sub    $0x8,%esp

----------------
IN: karch_program_i8259
0xf04063d4:  push   $0x70

----------------
IN: karch_program_i8259
0xf04063d6:  push   $0xa1

----------------
IN: karch_program_i8259
0xf04063db:  call   0xf04058bc

----------------
IN: karch_program_i8259
0xf04063e0:  add    $0x10,%esp

----------------
IN: karch_program_i8259
0xf04063e3:  sub    $0x8,%esp

----------------
IN: karch_program_i8259
0xf04063e6:  push   $0x2

----------------
IN: karch_program_i8259
0xf04063e8:  push   $0xa1

----------------
IN: karch_program_i8259
0xf04063ed:  call   0xf04058bc

----------------
IN: karch_program_i8259
0xf04063f2:  add    $0x10,%esp

----------------
IN: karch_program_i8259
0xf04063f5:  sub    $0x8,%esp

----------------
IN: karch_program_i8259
0xf04063f8:  push   $0x1

----------------
IN: karch_program_i8259
0xf04063fa:  push   $0xa1

----------------
IN: karch_program_i8259
0xf04063ff:  call   0xf04058bc

----------------
IN: karch_program_i8259
0xf0406404:  add    $0x10,%esp

----------------
IN: karch_program_i8259
0xf0406407:  sub    $0x8,%esp

----------------
IN: karch_program_i8259
0xf040640a:  push   $0xffffffff

----------------
IN: karch_program_i8259
0xf040640c:  push   $0xa1

----------------
IN: karch_program_i8259
0xf0406411:  call   0xf04058bc

----------------
IN: karch_program_i8259
0xf0406416:  add    $0x10,%esp

----------------
IN: karch_program_i8259
0xf0406419:  nop    

----------------
IN: karch_program_i8259
0xf040641a:  leave  

----------------
IN: karch_program_i8259
0xf040641b:  ret    

----------------
IN: karch_init_i8259
0xf040633e:  nop    

----------------
IN: karch_init_i8259
0xf040633f:  leave  

----------------
IN: karch_init_i8259
0xf0406340:  ret    

----------------
IN: karch_early_init
0xf04050ae:  call   0xf0405c7e

----------------
IN: karch_init_except
0xf0405c7e:  push   %ebp
0xf0405c7f:  mov    %esp,%ebp
0xf0405c81:  sub    $0x8,%esp
0xf0405c84:  sub    $0x4,%esp
0xf0405c87:  push   $0x4c
0xf0405c89:  push   $0x0
0xf0405c8b:  push   $0xf041f440
0xf0405c90:  call   0xf040a3de

----------------
IN: karch_init_except
0xf0405c95:  add    $0x10,%esp
0xf0405c98:  sub    $0x4,%esp
0xf0405c9b:  push   $0x4c
0xf0405c9d:  push   $0x0
0xf0405c9f:  push   $0xf041f4a0
0xf0405ca4:  call   0xf040a3de

----------------
IN: karch_init_except
0xf0405ca9:  add    $0x10,%esp
0xf0405cac:  sub    $0x8,%esp
0xf0405caf:  push   $0x0
0xf0405cb1:  push   $0xf040b0e0
0xf0405cb6:  call   0xf0406781

----------------
IN: karch_init_except
0xf0405cbb:  add    $0x10,%esp
0xf0405cbe:  nop    
0xf0405cbf:  leave  
0xf0405cc0:  ret    

----------------
IN: karch_early_init
0xf04050b3:  call   0xf040671c

----------------
IN: karch_flush_idt
0xf040671c:  push   %ebp

----------------
IN: karch_flush_idt
0xf040671d:  mov    %esp,%ebp

----------------
IN: karch_flush_idt
0xf040671f:  sub    $0x8,%esp

----------------
IN: karch_flush_idt
0xf0406722:  sub    $0xc,%esp

----------------
IN: karch_flush_idt
0xf0406725:  push   $0xf041f648

----------------
IN: karch_flush_idt
0xf040672a:  call   0xf04057df

----------------
IN: 
0xf04057df:  push   %ebp
0xf04057e0:  mov    %esp,%ebp
0xf04057e2:  mov    0x8(%ebp),%eax
0xf04057e5:  lidtl  (%eax)
0xf04057e8:  mov    %ebp,%esp
0xf04057ea:  pop    %ebp
0xf04057eb:  ret    

----------------
IN: karch_flush_idt
0xf040672f:  add    $0x10,%esp

----------------
IN: karch_flush_idt
0xf0406732:  nop    

----------------
IN: karch_flush_idt
0xf0406733:  leave  

----------------
IN: karch_flush_idt
0xf0406734:  ret    

----------------
IN: karch_early_init
0xf04050b8:  sub    $0xc,%esp
0xf04050bb:  push   $0x28
0xf04050bd:  call   0xf04057ec

----------------
IN: 
0xf04057ec:  push   %ebp
0xf04057ed:  mov    %esp,%ebp
0xf04057ef:  lldt   0x8(%ebp)
0xf04057f3:  mov    %ebp,%esp
0xf04057f5:  pop    %ebp
0xf04057f6:  ret    

----------------
IN: karch_early_init
0xf04050c2:  add    $0x10,%esp
0xf04050c5:  sub    $0xc,%esp
0xf04050c8:  push   $0x30
0xf04050ca:  call   0xf04057f7

----------------
IN: 
0xf04057f7:  push   %ebp
0xf04057f8:  mov    %esp,%ebp
0xf04057fa:  ltr    0x8(%ebp)
0xf04057fe:  mov    %ebp,%esp
0xf0405800:  pop    %ebp
0xf0405801:  ret    

----------------
IN: karch_early_init
0xf04050cf:  add    $0x10,%esp
0xf04050d2:  call   0xf04050ea

----------------
IN: karch_load_segs
0xf04050ea:  push   %ebp
0xf04050eb:  mov    %esp,%ebp
0xf04050ed:  sub    $0x8,%esp
0xf04050f0:  call   0xf040581c

----------------
IN: 
0xf040581c:  push   %ebp
0xf040581d:  mov    %esp,%ebp
0xf040581f:  ljmp   $0x8,$0xf0405826

----------------
IN: 
0xf0405826:  pop    %ebp
0xf0405827:  ret    

----------------
IN: karch_load_segs
0xf04050f5:  sub    $0xc,%esp
0xf04050f8:  push   $0x10
0xf04050fa:  call   0xf0405828

----------------
IN: 
0xf0405828:  push   %ebp
0xf0405829:  mov    %esp,%ebp
0xf040582b:  mov    0x8(%ebp),%eax
0xf040582e:  mov    %ds,%ax
0xf0405831:  jmp    0xf0405833

----------------
IN: 
0xf0405833:  pop    %ebp
0xf0405834:  ret    

----------------
IN: karch_load_segs
0xf04050ff:  add    $0x10,%esp
0xf0405102:  sub    $0xc,%esp
0xf0405105:  push   $0x10
0xf0405107:  call   0xf0405835

----------------
IN: 
0xf0405835:  push   %ebp
0xf0405836:  mov    %esp,%ebp
0xf0405838:  mov    0x8(%ebp),%eax
0xf040583b:  mov    %es,%ax
0xf040583e:  jmp    0xf0405840

----------------
IN: 
0xf0405840:  pop    %ebp
0xf0405841:  ret    

----------------
IN: karch_load_segs
0xf040510c:  add    $0x10,%esp
0xf040510f:  sub    $0xc,%esp
0xf0405112:  push   $0x10
0xf0405114:  call   0xf0405842

----------------
IN: 
0xf0405842:  push   %ebp
0xf0405843:  mov    %esp,%ebp
0xf0405845:  mov    0x8(%ebp),%eax
0xf0405848:  mov    %fs,%ax
0xf040584b:  jmp    0xf040584d

----------------
IN: 
0xf040584d:  pop    %ebp
0xf040584e:  ret    

----------------
IN: karch_load_segs
0xf0405119:  add    $0x10,%esp
0xf040511c:  sub    $0xc,%esp
0xf040511f:  push   $0x10
0xf0405121:  call   0xf040584f

----------------
IN: 
0xf040584f:  push   %ebp
0xf0405850:  mov    %esp,%ebp
0xf0405852:  mov    0x8(%ebp),%eax
0xf0405855:  mov    %gs,%ax
0xf0405858:  jmp    0xf040585a

----------------
IN: 
0xf040585a:  pop    %ebp
0xf040585b:  ret    

----------------
IN: karch_load_segs
0xf0405126:  add    $0x10,%esp
0xf0405129:  sub    $0xc,%esp
0xf040512c:  push   $0x10
0xf040512e:  call   0xf040585c

----------------
IN: 
0xf040585c:  push   %ebp
0xf040585d:  mov    %esp,%ebp
0xf040585f:  mov    0x8(%ebp),%eax
0xf0405862:  mov    %ss,%ax
0xf0405865:  jmp    0xf0405867

----------------
IN: 
0xf0405867:  pop    %ebp
0xf0405868:  ret    

----------------
IN: karch_load_segs
0xf0405133:  add    $0x10,%esp
0xf0405136:  nop    
0xf0405137:  leave  
0xf0405138:  ret    

----------------
IN: karch_early_init
0xf04050d7:  sub    $0xc,%esp
0xf04050da:  push   $0xf041e800
0xf04050df:  call   0xf04067e4

----------------
IN: karch_init_page
0xf04067e4:  push   %ebp

----------------
IN: karch_init_page
0xf04067e5:  mov    %esp,%ebp

----------------
IN: karch_init_page
0xf04067e7:  sub    $0x8,%esp

----------------
IN: karch_init_page
0xf04067ea:  sub    $0xc,%esp

----------------
IN: karch_init_page
0xf04067ed:  pushl  0x8(%ebp)

----------------
IN: karch_init_page
0xf04067f0:  call   0xf040681e

----------------
IN: karch_page_identity
0xf040681e:  push   %ebp

----------------
IN: karch_page_identity
0xf040681f:  mov    %esp,%ebp

----------------
IN: karch_page_identity
0xf0406821:  sub    $0x10,%esp

----------------
IN: karch_page_identity
0xf0406824:  movl   $0x0,-0x4(%ebp)

----------------
IN: karch_page_identity
0xf040682b:  jmp    0xf0406875

----------------
IN: karch_page_identity
0xf0406875:  cmpl   $0x3ff,-0x4(%ebp)

----------------
IN: karch_page_identity
0xf040687c:  jbe    0xf040682d

----------------
IN: karch_page_identity
0xf040682d:  movl   $0x87,-0x8(%ebp)

----------------
IN: karch_page_identity
0xf0406834:  mov    -0x4(%ebp),%eax

----------------
IN: karch_page_identity
0xf0406837:  shl    $0x16,%eax

----------------
IN: karch_page_identity
0xf040683a:  mov    %eax,-0xc(%ebp)

----------------
IN: karch_page_identity
0xf040683d:  mov    0x8(%ebp),%eax

----------------
IN: karch_page_identity
0xf0406840:  mov    (%eax),%eax

----------------
IN: karch_page_identity
0xf0406842:  and    $0xffc00000,%eax

----------------
IN: karch_page_identity
0xf0406847:  mov    -0xc(%ebp),%edx

----------------
IN: karch_page_identity
0xf040684a:  and    $0xffc00000,%edx

----------------
IN: karch_page_identity
0xf0406850:  cmp    %eax,%edx

----------------
IN: karch_page_identity
0xf0406852:  jb     0xf0406858

----------------
IN: karch_page_identity
0xf0406858:  mov    0x8(%ebp),%eax

----------------
IN: karch_page_identity
0xf040685b:  mov    0x324(%eax),%eax

----------------
IN: karch_page_identity
0xf0406861:  mov    -0x4(%ebp),%edx

----------------
IN: karch_page_identity
0xf0406864:  shl    $0x2,%edx

----------------
IN: karch_page_identity
0xf0406867:  add    %eax,%edx

----------------
IN: karch_page_identity
0xf0406869:  mov    -0xc(%ebp),%eax

----------------
IN: karch_page_identity
0xf040686c:  or     -0x8(%ebp),%eax

----------------
IN: karch_page_identity
0xf040686f:  mov    %eax,(%edx)

----------------
IN: karch_page_identity
0xf0406871:  addl   $0x1,-0x4(%ebp)

----------------
IN: karch_page_identity
0xf0406854:  orl    $0x18,-0x8(%ebp)

----------------
IN: karch_page_identity
0xf040687e:  Address 0xf040687e is out of bounds.


----------------
IN: karch_page_identity
0xf040687f:  Address 0xf040687f is out of bounds.


----------------
IN: karch_page_identity
0xf0406880:  Address 0xf0406880 is out of bounds.


----------------
IN: karch_page_identity
0xf0406881:  Address 0xf0406881 is out of bounds.


----------------
IN: karch_init_page
0xf04067f5:  Address 0xf04067f5 is out of bounds.


----------------
IN: karch_init_page
0xf04067f8:  Address 0xf04067f8 is out of bounds.


----------------
IN: karch_init_page
0xf04067fb:  Address 0xf04067fb is out of bounds.


----------------
IN: karch_init_page
0xf04067fe:  Address 0xf04067fe is out of bounds.


----------------
IN: karch_page_remap_kernel
0xf0406882:  Address 0xf0406882 is out of bounds.


----------------
IN: karch_page_remap_kernel
0xf0406883:  Address 0xf0406883 is out of bounds.


----------------
IN: karch_page_remap_kernel
0xf0406885:  Address 0xf0406885 is out of bounds.


----------------
IN: karch_page_remap_kernel
0xf0406888:  Address 0xf0406888 is out of bounds.


----------------
IN: karch_page_remap_kernel
0xf040688f:  Address 0xf040688f is out of bounds.


----------------
IN: karch_page_remap_kernel
0xf0406896:  Address 0xf0406896 is out of bounds.


----------------
IN: karch_page_remap_kernel
0xf040689b:  Address 0xf040689b is out of bounds.


----------------
IN: karch_page_remap_kernel
0xf040689e:  Address 0xf040689e is out of bounds.


----------------
IN: karch_page_remap_kernel
0xf04068a1:  Address 0xf04068a1 is out of bounds.


----------------
IN: karch_page_remap_kernel
0xf04068ce:  Address 0xf04068ce is out of bounds.


----------------
IN: karch_page_remap_kernel
0xf04068d3:  Address 0xf04068d3 is out of bounds.


----------------
IN: karch_page_remap_kernel
0xf04068d6:  Address 0xf04068d6 is out of bounds.


----------------
IN: karch_page_remap_kernel
0xf04068a3:  Address 0xf04068a3 is out of bounds.


----------------
IN: karch_page_remap_kernel
0xf04068a6:  Address 0xf04068a6 is out of bounds.


----------------
IN: karch_page_remap_kernel
0xf04068ac:  Address 0xf04068ac is out of bounds.


----------------
IN: karch_page_remap_kernel
0xf04068af:  Address 0xf04068af is out of bounds.


----------------
IN: karch_page_remap_kernel
0xf04068b2:  Address 0xf04068b2 is out of bounds.


----------------
IN: karch_page_remap_kernel
0xf04068b4:  Address 0xf04068b4 is out of bounds.


----------------
IN: karch_page_remap_kernel
0xf04068b7:  Address 0xf04068b7 is out of bounds.


----------------
IN: karch_page_remap_kernel
0xf04068ba:  Address 0xf04068ba is out of bounds.


----------------
IN: karch_page_remap_kernel
0xf04068bc:  addl   $0x400000,-0x4(%ebp)

----------------
IN: karch_page_remap_kernel
0xf04068c3:  addl   $0x400000,-0x8(%ebp)

----------------
IN: karch_page_remap_kernel
0xf04068ca:  addl   $0x1,-0xc(%ebp)

----------------
IN: karch_page_remap_kernel
0xf04068d8:  mov    0x8(%ebp),%eax

----------------
IN: karch_page_remap_kernel
0xf04068db:  mov    -0xc(%ebp),%edx

----------------
IN: karch_page_remap_kernel
0xf04068de:  mov    %edx,0x328(%eax)

----------------
IN: karch_page_remap_kernel
0xf04068e4:  nop    

----------------
IN: karch_page_remap_kernel
0xf04068e5:  leave  

----------------
IN: karch_page_remap_kernel
0xf04068e6:  ret    

----------------
IN: karch_init_page
0xf0406803:  add    $0x10,%esp

----------------
IN: karch_init_page
0xf0406806:  mov    0x8(%ebp),%eax

----------------
IN: karch_init_page
0xf0406809:  mov    0x324(%eax),%eax

----------------
IN: karch_init_page
0xf040680f:  sub    $0xc,%esp

----------------
IN: karch_init_page
0xf0406812:  push   %eax

----------------
IN: karch_init_page
0xf0406813:  call   0xf040574d

----------------
IN: 
0xf040574d:  push   %ebp
0xf040574e:  mov    %esp,%ebp
0xf0405750:  mov    0x8(%ebp),%eax
0xf0405753:  mov    %eax,%cr3

----------------
IN: 
0xf0405756:  jmp    0xf0405758

----------------
IN: 
0xf0405758:  mov    %ebp,%esp
0xf040575a:  pop    %ebp
0xf040575b:  ret    

----------------
IN: karch_init_page
0xf0406818:  add    $0x10,%esp

----------------
IN: karch_init_page
0xf040681b:  nop    

----------------
IN: karch_init_page
0xf040681c:  leave  

----------------
IN: karch_init_page
0xf040681d:  ret    

----------------
IN: karch_early_init
0xf04050e4:  add    $0x10,%esp
0xf04050e7:  nop    
0xf04050e8:  leave  
0xf04050e9:  ret    

----------------
IN: karch_init
0xf040502f:  movb   $0x0,0xf041eb2c
0xf0405036:  call   0xf0406bb9

----------------
IN: karch_init_acpi
0xf0406bb9:  push   %ebp

----------------
IN: karch_init_acpi
0xf0406bba:  mov    %esp,%ebp

----------------
IN: karch_init_acpi
0xf0406bbc:  sub    $0x18,%esp

----------------
IN: karch_init_acpi
0xf0406bbf:  movw   $0x0,0xf041fe60

----------------
IN: karch_init_acpi
0xf0406bc8:  movw   $0x0,0xf041fe62

----------------
IN: karch_init_acpi
0xf0406bd1:  movw   $0x0,0xf041fe64

----------------
IN: karch_init_acpi
0xf0406bda:  movw   $0x0,0xf041fe66

----------------
IN: karch_init_acpi
0xf0406be3:  sub    $0xc,%esp

----------------
IN: karch_init_acpi
0xf0406be6:  lea    -0xd(%ebp),%eax

----------------
IN: karch_init_acpi
0xf0406be9:  push   %eax

----------------
IN: karch_init_acpi
0xf0406bea:  call   0xf0407033

----------------
IN: karch_acpi_find_rsdp
0xf0407033:  push   %ebp
0xf0407034:  mov    %esp,%ebp
0xf0407036:  sub    $0x18,%esp
0xf0407039:  movw   $0x0,-0xe(%ebp)
0xf040703f:  movl   $0x0,-0xc(%ebp)
0xf0407046:  sub    $0x4,%esp
0xf0407049:  push   $0x2
0xf040704b:  lea    -0xe(%ebp),%eax
0xf040704e:  push   %eax
0xf040704f:  push   $0x40e
0xf0407054:  call   0xf040a466

----------------
IN: kmemcpy
0xf040a4a8:  mov    -0x10(%ebp),%edx
0xf040a4ab:  lea    0x1(%edx),%eax
0xf040a4ae:  mov    %eax,-0x10(%ebp)
0xf040a4b1:  mov    -0xc(%ebp),%eax
0xf040a4b4:  lea    0x1(%eax),%ecx
0xf040a4b7:  mov    %ecx,-0xc(%ebp)
0xf040a4ba:  movzbl (%edx),%edx
0xf040a4bd:  mov    %dl,(%eax)
0xf040a4bf:  subl   $0x1,0x10(%ebp)
0xf040a4c3:  cmpl   $0x0,0x10(%ebp)
0xf040a4c7:  jne    0xf040a4a8

----------------
IN: karch_acpi_find_rsdp
0xf0407059:  add    $0x10,%esp
0xf040705c:  movzwl -0xe(%ebp),%eax
0xf0407060:  test   %ax,%ax
0xf0407063:  je     0xf04070a3

----------------
IN: karch_acpi_find_rsdp
0xf04070a3:  sub    $0x4,%esp
0xf04070a6:  push   $0xfffff
0xf04070ab:  push   $0xe0000
0xf04070b0:  pushl  0x8(%ebp)
0xf04070b3:  call   0xf0406fb9

----------------
IN: karch_acpi_find_rsdp_r
0xf0406fb9:  push   %ebp

----------------
IN: karch_acpi_find_rsdp_r
0xf0406fba:  mov    %esp,%ebp

----------------
IN: karch_acpi_find_rsdp_r
0xf0406fbc:  sub    $0x18,%esp

----------------
IN: karch_acpi_find_rsdp_r
0xf0406fbf:  mov    0xc(%ebp),%eax

----------------
IN: karch_acpi_find_rsdp_r
0xf0406fc2:  cmp    %eax,0x10(%ebp)

----------------
IN: karch_acpi_find_rsdp_r
0xf0406fc5:  jb     0xf0406fd2

----------------
IN: karch_acpi_find_rsdp_r
0xf0406fc7:  mov    0x10(%ebp),%eax

----------------
IN: karch_acpi_find_rsdp_r
0xf0406fca:  sub    0xc(%ebp),%eax

----------------
IN: karch_acpi_find_rsdp_r
0xf0406fcd:  cmp    $0x7,%eax

----------------
IN: karch_acpi_find_rsdp_r
0xf0406fd0:  ja     0xf0406fd9

----------------
IN: karch_acpi_find_rsdp_r
0xf0406fd9:  mov    0x10(%ebp),%eax

----------------
IN: karch_acpi_find_rsdp_r
0xf0406fdc:  sub    $0x8,%eax

----------------
IN: karch_acpi_find_rsdp_r
0xf0406fdf:  mov    %eax,-0x10(%ebp)

----------------
IN: karch_acpi_find_rsdp_r
0xf0406fe2:  mov    0xc(%ebp),%eax

----------------
IN: karch_acpi_find_rsdp_r
0xf0406fe5:  mov    %eax,-0xc(%ebp)

----------------
IN: karch_acpi_find_rsdp_r
0xf0406fe8:  jmp    0xf0407024

----------------
IN: karch_acpi_find_rsdp_r
0xf0407024:  mov    -0xc(%ebp),%eax
0xf0407027:  cmp    %eax,-0x10(%ebp)
0xf040702a:  jae    0xf0406fea

----------------
IN: karch_acpi_find_rsdp_r
0xf0406fea:  mov    -0xc(%ebp),%eax

----------------
IN: karch_acpi_find_rsdp_r
0xf0406fed:  mov    %eax,-0x14(%ebp)

----------------
IN: karch_acpi_find_rsdp_r
0xf0406ff0:  sub    $0xc,%esp

----------------
IN: karch_acpi_find_rsdp_r
0xf0406ff3:  pushl  -0x14(%ebp)

----------------
IN: karch_acpi_find_rsdp_r
0xf0406ff6:  call   0xf0406f3f

----------------
IN: karch_acpi_test
0xf0406f3f:  push   %ebp

----------------
IN: karch_acpi_test
0xf0406f40:  mov    %esp,%ebp

----------------
IN: karch_acpi_test
0xf0406f42:  sub    $0x8,%esp

----------------
IN: karch_acpi_test
0xf0406f45:  cmpl   $0x0,0x8(%ebp)

----------------
IN: karch_acpi_test
0xf0406f49:  je     0xf0406f65

----------------
IN: karch_acpi_test
0xf0406f4b:  mov    0x8(%ebp),%eax

----------------
IN: karch_acpi_test
0xf0406f4e:  sub    $0x4,%esp

----------------
IN: karch_acpi_test
0xf0406f51:  push   $0x8

----------------
IN: karch_acpi_test
0xf0406f53:  push   $0xf040b22d

----------------
IN: karch_acpi_test
0xf0406f58:  push   %eax

----------------
IN: karch_acpi_test
0xf0406f59:  call   0xf040a558

----------------
IN: kmemcmp
0xf040a558:  push   %ebp
0xf040a559:  mov    %esp,%ebp
0xf040a55b:  sub    $0x30,%esp
0xf040a55e:  mov    0x8(%ebp),%eax
0xf040a561:  mov    %eax,-0x4(%ebp)
0xf040a564:  mov    0xc(%ebp),%eax
0xf040a567:  mov    %eax,-0x8(%ebp)
0xf040a56a:  movl   $0x0,-0x14(%ebp)
0xf040a571:  jmp    0xf040a5a2

----------------
IN: kmemcmp
0xf040a5a2:  cmpl   $0x3,0x10(%ebp)
0xf040a5a6:  ja     0xf040a573

----------------
IN: kmemcmp
0xf040a573:  mov    -0x4(%ebp),%eax
0xf040a576:  lea    0x4(%eax),%edx
0xf040a579:  mov    %edx,-0x4(%ebp)
0xf040a57c:  mov    (%eax),%eax
0xf040a57e:  mov    %eax,-0x18(%ebp)
0xf040a581:  mov    -0x8(%ebp),%eax
0xf040a584:  lea    0x4(%eax),%edx
0xf040a587:  mov    %edx,-0x8(%ebp)
0xf040a58a:  mov    (%eax),%eax
0xf040a58c:  mov    %eax,-0x1c(%ebp)
0xf040a58f:  mov    -0x18(%ebp),%eax
0xf040a592:  sub    -0x1c(%ebp),%eax
0xf040a595:  mov    %eax,-0x14(%ebp)
0xf040a598:  cmpl   $0x0,-0x14(%ebp)
0xf040a59c:  jne    0xf040a5aa

----------------
IN: kmemcmp
0xf040a5aa:  nop    
0xf040a5ab:  mov    -0x4(%ebp),%eax
0xf040a5ae:  mov    %eax,-0xc(%ebp)
0xf040a5b1:  mov    -0x8(%ebp),%eax
0xf040a5b4:  mov    %eax,-0x10(%ebp)
0xf040a5b7:  jmp    0xf040a5f5

----------------
IN: kmemcmp
0xf040a5f5:  cmpl   $0x0,0x10(%ebp)
0xf040a5f9:  jne    0xf040a5b9

----------------
IN: kmemcmp
0xf040a5b9:  mov    -0xc(%ebp),%eax
0xf040a5bc:  lea    0x1(%eax),%edx
0xf040a5bf:  mov    %edx,-0xc(%ebp)
0xf040a5c2:  movzbl (%eax),%eax
0xf040a5c5:  movzbl %al,%eax
0xf040a5c8:  mov    %eax,-0x20(%ebp)
0xf040a5cb:  mov    -0x10(%ebp),%eax
0xf040a5ce:  lea    0x1(%eax),%edx
0xf040a5d1:  mov    %edx,-0x10(%ebp)
0xf040a5d4:  movzbl (%eax),%eax
0xf040a5d7:  movzbl %al,%eax
0xf040a5da:  mov    %eax,-0x24(%ebp)
0xf040a5dd:  mov    -0x20(%ebp),%eax
0xf040a5e0:  sub    -0x24(%ebp),%eax
0xf040a5e3:  mov    %eax,-0x14(%ebp)
0xf040a5e6:  cmpl   $0x0,-0x14(%ebp)
0xf040a5ea:  je     0xf040a5f1

----------------
IN: kmemcmp
0xf040a5ec:  mov    -0x14(%ebp),%eax
0xf040a5ef:  jmp    0xf040a600

----------------
IN: kmemcmp
0xf040a600:  leave  
0xf040a601:  ret    

----------------
IN: karch_acpi_test
0xf0406f5e:  add    $0x10,%esp

----------------
IN: karch_acpi_test
0xf0406f61:  test   %eax,%eax

----------------
IN: karch_acpi_test
0xf0406f63:  je     0xf0406f6c

----------------
IN: karch_acpi_test
0xf0406f65:  mov    $0x0,%eax

----------------
IN: karch_acpi_test
0xf0406f6a:  jmp    0xf0406fb7

----------------
IN: karch_acpi_test
0xf0406fb7:  leave  

----------------
IN: karch_acpi_test
0xf0406fb8:  ret    

----------------
IN: karch_acpi_find_rsdp_r
0xf0406ffb:  add    $0x10,%esp

----------------
IN: karch_acpi_find_rsdp_r
0xf0406ffe:  test   %al,%al

----------------
IN: karch_acpi_find_rsdp_r
0xf0407000:  je     0xf0407020

----------------
IN: karch_acpi_find_rsdp_r
0xf0407020:  addl   $0x1,-0xc(%ebp)
0xf0407024:  mov    -0xc(%ebp),%eax
0xf0407027:  cmp    %eax,-0x10(%ebp)
0xf040702a:  jae    0xf0406fea

----------------
IN: kmemcmp
0xf040a5f1:  subl   $0x1,0x10(%ebp)
0xf040a5f5:  cmpl   $0x0,0x10(%ebp)
0xf040a5f9:  jne    0xf040a5b9

----------------
IN: kmemcmp
0xf040a59e:  subl   $0x4,0x10(%ebp)
0xf040a5a2:  cmpl   $0x3,0x10(%ebp)
0xf040a5a6:  ja     0xf040a573

----------------
IN: kmemcmp
0xf040a5a8:  jmp    0xf040a5ab

----------------
IN: kmemcmp
0xf040a5ab:  mov    -0x4(%ebp),%eax
0xf040a5ae:  mov    %eax,-0xc(%ebp)
0xf040a5b1:  mov    -0x8(%ebp),%eax
0xf040a5b4:  mov    %eax,-0x10(%ebp)
0xf040a5b7:  jmp    0xf040a5f5

----------------
IN: kmemcmp
0xf040a5fb:  mov    $0x0,%eax
0xf040a600:  leave  
0xf040a601:  ret    

----------------
IN: karch_acpi_test
0xf0406f6c:  sub    $0x8,%esp

----------------
IN: karch_acpi_test
0xf0406f6f:  push   $0x14

----------------
IN: karch_acpi_test
0xf0406f71:  pushl  0x8(%ebp)

----------------
IN: karch_acpi_test
0xf0406f74:  call   0xf0406f0b

----------------
IN: karch_acpi_checksum
0xf0406f0b:  push   %ebp

----------------
IN: karch_acpi_checksum
0xf0406f0c:  mov    %esp,%ebp

----------------
IN: karch_acpi_checksum
0xf0406f0e:  sub    $0x10,%esp

----------------
IN: karch_acpi_checksum
0xf0406f11:  movb   $0x0,-0x1(%ebp)

----------------
IN: karch_acpi_checksum
0xf0406f15:  mov    0x8(%ebp),%eax

----------------
IN: karch_acpi_checksum
0xf0406f18:  mov    %eax,-0x8(%ebp)

----------------
IN: karch_acpi_checksum
0xf0406f1b:  jmp    0xf0406f2c

----------------
IN: karch_acpi_checksum
0xf0406f2c:  mov    0xc(%ebp),%eax

----------------
IN: karch_acpi_checksum
0xf0406f2f:  lea    -0x1(%eax),%edx

----------------
IN: karch_acpi_checksum
0xf0406f32:  mov    %edx,0xc(%ebp)

----------------
IN: karch_acpi_checksum
0xf0406f35:  test   %eax,%eax

----------------
IN: karch_acpi_checksum
0xf0406f37:  jne    0xf0406f1d

----------------
IN: karch_acpi_checksum
0xf0406f1d:  mov    -0x8(%ebp),%eax

----------------
IN: karch_acpi_checksum
0xf0406f20:  lea    0x1(%eax),%edx

----------------
IN: karch_acpi_checksum
0xf0406f23:  mov    %edx,-0x8(%ebp)

----------------
IN: karch_acpi_checksum
0xf0406f26:  movzbl (%eax),%eax

----------------
IN: karch_acpi_checksum
0xf0406f29:  add    %al,-0x1(%ebp)

----------------
IN: karch_acpi_checksum
0xf0406f39:  movzbl -0x1(%ebp),%eax

----------------
IN: karch_acpi_checksum
0xf0406f3d:  leave  

----------------
IN: karch_acpi_checksum
0xf0406f3e:  ret    

----------------
IN: karch_acpi_test
0xf0406f79:  add    $0x10,%esp

----------------
IN: karch_acpi_test
0xf0406f7c:  test   %al,%al

----------------
IN: karch_acpi_test
0xf0406f7e:  je     0xf0406f87

----------------
IN: karch_acpi_test
0xf0406f87:  mov    0x8(%ebp),%eax

----------------
IN: karch_acpi_test
0xf0406f8a:  movzbl 0xf(%eax),%eax

----------------
IN: karch_acpi_test
0xf0406f8e:  cmp    $0x1,%al

----------------
IN: karch_acpi_test
0xf0406f90:  jbe    0xf0406fb2

----------------
IN: karch_acpi_test
0xf0406fb2:  mov    $0x1,%eax

----------------
IN: karch_acpi_find_rsdp_r
0xf0407002:  cmpl   $0x0,0x8(%ebp)
0xf0407006:  je     0xf040701b

----------------
IN: karch_acpi_find_rsdp_r
0xf0407008:  mov    -0x14(%ebp),%eax
0xf040700b:  movzbl 0xf(%eax),%eax
0xf040700f:  test   %al,%al
0xf0407011:  setne  %al
0xf0407014:  mov    %eax,%edx
0xf0407016:  mov    0x8(%ebp),%eax
0xf0407019:  mov    %dl,(%eax)
0xf040701b:  mov    -0x14(%ebp),%eax
0xf040701e:  jmp    0xf0407031

----------------
IN: karch_acpi_find_rsdp_r
0xf0407031:  leave  
0xf0407032:  ret    

----------------
IN: karch_acpi_find_rsdp
0xf04070b8:  add    $0x10,%esp
0xf04070bb:  leave  
0xf04070bc:  ret    

----------------
IN: karch_init_acpi
0xf0406bef:  add    $0x10,%esp

----------------
IN: karch_init_acpi
0xf0406bf2:  mov    %eax,-0xc(%ebp)

----------------
IN: karch_init_acpi
0xf0406bf5:  cmpl   $0x0,-0xc(%ebp)

----------------
IN: karch_init_acpi
0xf0406bf9:  jne    0xf0406c16

----------------
IN: karch_init_acpi
0xf0406c16:  movzbl -0xd(%ebp),%eax

----------------
IN: karch_init_acpi
0xf0406c1a:  test   %al,%al

----------------
IN: karch_init_acpi
0xf0406c1c:  jne    0xf0406c35

----------------
IN: karch_init_acpi
0xf0406c1e:  mov    -0xc(%ebp),%eax

----------------
IN: karch_init_acpi
0xf0406c21:  mov    0x10(%eax),%eax

----------------
IN: karch_init_acpi
0xf0406c24:  mov    %eax,0xf041fe54

----------------
IN: karch_init_acpi
0xf0406c29:  movl   $0x4,0xf041fe58

----------------
IN: karch_init_acpi
0xf0406c33:  jmp    0xf0406c4a

----------------
IN: karch_init_acpi
0xf0406c4a:  call   0xf04070bd

----------------
IN: karch_acpi_check_rsdt
0xf04070bd:  push   %ebp
0xf04070be:  mov    %esp,%ebp
0xf04070c0:  sub    $0x18,%esp
0xf04070c3:  mov    0xf041fe54,%eax
0xf04070c8:  mov    %eax,-0xc(%ebp)
0xf04070cb:  mov    0xf041fe58,%eax
0xf04070d0:  cmp    $0x4,%eax
0xf04070d3:  jne    0xf04070ef

----------------
IN: karch_acpi_check_rsdt
0xf04070d5:  mov    -0xc(%ebp),%eax
0xf04070d8:  sub    $0x4,%esp
0xf04070db:  push   $0x4
0xf04070dd:  push   $0xf040b236
0xf04070e2:  push   %eax
0xf04070e3:  call   0xf040a558

----------------
IN: karch_acpi_check_rsdt
0xf04070e8:  add    $0x10,%esp
0xf04070eb:  test   %eax,%eax
0xf04070ed:  je     0xf0407113

----------------
IN: karch_acpi_check_rsdt
0xf0407113:  mov    $0x1,%eax
0xf0407118:  jmp    0xf040711f

----------------
IN: karch_acpi_check_rsdt
0xf040711f:  leave  
0xf0407120:  ret    

----------------
IN: karch_init_acpi
0xf0406c4f:  test   %al,%al

----------------
IN: karch_init_acpi
0xf0406c51:  jne    0xf0406c6e

----------------
IN: karch_init_acpi
0xf0406c6e:  call   0xf0406c7a

----------------
IN: karch_acpi_prepare_params
0xf0406c7a:  push   %ebp

----------------
IN: karch_acpi_prepare_params
0xf0406c7b:  mov    %esp,%ebp

----------------
IN: karch_acpi_prepare_params
0xf0406c7d:  sub    $0x28,%esp

----------------
IN: karch_acpi_prepare_params
0xf0406c80:  call   0xf04071ff

----------------
IN: karch_acpi_find_fadt
0xf04071ff:  push   %ebp
0xf0407200:  mov    %esp,%ebp
0xf0407202:  sub    $0x8,%esp
0xf0407205:  sub    $0xc,%esp
0xf0407208:  push   $0xf040b245
0xf040720d:  call   0xf04071bb

----------------
IN: karch_acpi_find_entry
0xf04071bb:  push   %ebp
0xf04071bc:  mov    %esp,%ebp
0xf04071be:  sub    $0x8,%esp
0xf04071c1:  mov    0xf041fe54,%eax
0xf04071c6:  test   %eax,%eax
0xf04071c8:  jne    0xf04071d1

----------------
IN: karch_acpi_find_entry
0xf04071d1:  mov    0xf041fe54,%eax
0xf04071d6:  sub    $0x8,%esp
0xf04071d9:  pushl  0x8(%ebp)
0xf04071dc:  push   %eax
0xf04071dd:  call   0xf0407121

----------------
IN: karch_acpi_find_entry_r
0xf0407121:  push   %ebp
0xf0407122:  mov    %esp,%ebp
0xf0407124:  sub    $0x28,%esp
0xf0407127:  mov    0x8(%ebp),%eax
0xf040712a:  add    $0x24,%eax
0xf040712d:  mov    %eax,-0x14(%ebp)
0xf0407130:  mov    0x8(%ebp),%eax
0xf0407133:  mov    0x4(%eax),%eax
0xf0407136:  sub    $0x24,%eax
0xf0407139:  mov    0xf041fe58,%ecx
0xf040713f:  mov    $0x0,%edx
0xf0407144:  div    %ecx
0xf0407146:  mov    %eax,-0x18(%ebp)
0xf0407149:  movl   $0x0,-0xc(%ebp)
0xf0407150:  jmp    0xf04071ac

----------------
IN: karch_acpi_find_entry_r
0xf04071ac:  mov    -0xc(%ebp),%eax
0xf04071af:  cmp    -0x18(%ebp),%eax
0xf04071b2:  jb     0xf0407152

----------------
IN: karch_acpi_find_entry_r
0xf0407152:  mov    0xf041fe58,%eax
0xf0407157:  imul   -0xc(%ebp),%eax
0xf040715b:  mov    %eax,%edx
0xf040715d:  mov    -0x14(%ebp),%eax
0xf0407160:  add    %edx,%eax
0xf0407162:  mov    %eax,-0x1c(%ebp)
0xf0407165:  movl   $0x0,-0x10(%ebp)
0xf040716c:  mov    0xf041fe58,%eax
0xf0407171:  cmp    $0x4,%eax
0xf0407174:  jne    0xf0407180

----------------
IN: karch_acpi_find_entry_r
0xf0407176:  mov    -0x1c(%ebp),%eax
0xf0407179:  mov    (%eax),%eax
0xf040717b:  mov    %eax,-0x10(%ebp)
0xf040717e:  jmp    0xf040718b

----------------
IN: karch_acpi_find_entry_r
0xf040718b:  mov    -0x10(%ebp),%eax
0xf040718e:  sub    $0x4,%esp
0xf0407191:  push   $0x4
0xf0407193:  pushl  0xc(%ebp)
0xf0407196:  push   %eax
0xf0407197:  call   0xf040a558

----------------
IN: karch_acpi_find_entry_r
0xf040719c:  add    $0x10,%esp
0xf040719f:  test   %eax,%eax
0xf04071a1:  jne    0xf04071a8

----------------
IN: karch_acpi_find_entry_r
0xf04071a3:  mov    -0x10(%ebp),%eax
0xf04071a6:  jmp    0xf04071b9

----------------
IN: karch_acpi_find_entry_r
0xf04071b9:  leave  
0xf04071ba:  ret    

----------------
IN: karch_acpi_find_entry
0xf04071e2:  add    $0x10,%esp
0xf04071e5:  leave  
0xf04071e6:  ret    

----------------
IN: karch_acpi_find_fadt
0xf0407212:  add    $0x10,%esp
0xf0407215:  leave  
0xf0407216:  ret    

----------------
IN: karch_acpi_prepare_params
0xf0406c85:  mov    %eax,-0x10(%ebp)

----------------
IN: karch_acpi_prepare_params
0xf0406c88:  cmpl   $0x0,-0x10(%ebp)

----------------
IN: karch_acpi_prepare_params
0xf0406c8c:  je     0xf0406dfe

----------------
IN: karch_acpi_prepare_params
0xf0406c92:  mov    -0x10(%ebp),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406c95:  mov    0x28(%eax),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406c98:  mov    %eax,-0x14(%ebp)

----------------
IN: karch_acpi_prepare_params
0xf0406c9b:  cmpl   $0x0,-0x14(%ebp)

----------------
IN: karch_acpi_prepare_params
0xf0406c9f:  je     0xf0406e01

----------------
IN: karch_acpi_prepare_params
0xf0406ca5:  mov    -0x14(%ebp),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406ca8:  add    $0x24,%eax

----------------
IN: karch_acpi_prepare_params
0xf0406cab:  mov    %eax,-0xc(%ebp)

----------------
IN: karch_acpi_prepare_params
0xf0406cae:  mov    -0x14(%ebp),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406cb1:  mov    0x4(%eax),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406cb4:  lea    -0x4(%eax),%edx

----------------
IN: karch_acpi_prepare_params
0xf0406cb7:  mov    -0xc(%ebp),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406cba:  add    %edx,%eax

----------------
IN: karch_acpi_prepare_params
0xf0406cbc:  mov    %eax,-0x18(%ebp)

----------------
IN: karch_acpi_prepare_params
0xf0406cbf:  mov    -0xc(%ebp),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406cc2:  mov    %eax,-0x1c(%ebp)

----------------
IN: karch_acpi_prepare_params
0xf0406cc5:  jmp    0xf0406ccb

----------------
IN: karch_acpi_prepare_params
0xf0406ccb:  mov    -0xc(%ebp),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406cce:  cmp    -0x18(%ebp),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406cd1:  jae    0xf0406cec

----------------
IN: karch_acpi_prepare_params
0xf0406cd3:  sub    $0x4,%esp

----------------
IN: karch_acpi_prepare_params
0xf0406cd6:  push   $0x4

----------------
IN: karch_acpi_prepare_params
0xf0406cd8:  push   $0xf040b228

----------------
IN: karch_acpi_prepare_params
0xf0406cdd:  pushl  -0xc(%ebp)

----------------
IN: karch_acpi_prepare_params
0xf0406ce0:  call   0xf040a558

----------------
IN: karch_acpi_prepare_params
0xf0406ce5:  add    $0x10,%esp

----------------
IN: karch_acpi_prepare_params
0xf0406ce8:  test   %eax,%eax

----------------
IN: karch_acpi_prepare_params
0xf0406cea:  jne    0xf0406cc7

----------------
IN: karch_acpi_prepare_params
0xf0406cc7:  addl   $0x1,-0xc(%ebp)

----------------
IN: karch_acpi_prepare_params
0xf0406cec:  mov    -0xc(%ebp),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406cef:  cmp    -0x18(%ebp),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406cf2:  jae    0xf0406e04

----------------
IN: karch_acpi_prepare_params
0xf0406cf8:  mov    -0xc(%ebp),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406cfb:  cmp    -0x1c(%ebp),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406cfe:  je     0xf0406e04

----------------
IN: karch_acpi_prepare_params
0xf0406d04:  mov    -0xc(%ebp),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406d07:  add    $0x4,%eax

----------------
IN: karch_acpi_prepare_params
0xf0406d0a:  movzbl (%eax),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406d0d:  cmp    $0x12,%al

----------------
IN: karch_acpi_prepare_params
0xf0406d0f:  jne    0xf0406e07

----------------
IN: karch_acpi_prepare_params
0xf0406d15:  mov    -0x1c(%ebp),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406d18:  add    $0x2,%eax

----------------
IN: karch_acpi_prepare_params
0xf0406d1b:  test   %eax,%eax

----------------
IN: karch_acpi_prepare_params
0xf0406d1d:  jne    0xf0406d39

----------------
IN: karch_acpi_prepare_params
0xf0406d39:  mov    -0xc(%ebp),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406d3c:  sub    $0x1,%eax

----------------
IN: karch_acpi_prepare_params
0xf0406d3f:  movzbl (%eax),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406d42:  cmp    $0x8,%al

----------------
IN: karch_acpi_prepare_params
0xf0406d44:  jne    0xf0406e0a

----------------
IN: karch_acpi_prepare_params
0xf0406d4a:  addl   $0x5,-0xc(%ebp)

----------------
IN: karch_acpi_prepare_params
0xf0406d4e:  mov    -0xc(%ebp),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406d51:  cmp    -0x18(%ebp),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406d54:  jae    0xf0406e0d

----------------
IN: karch_acpi_prepare_params
0xf0406d5a:  mov    -0xc(%ebp),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406d5d:  movzbl (%eax),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406d60:  shr    $0x6,%al

----------------
IN: karch_acpi_prepare_params
0xf0406d63:  movzbl %al,%eax

----------------
IN: karch_acpi_prepare_params
0xf0406d66:  add    $0x2,%eax

----------------
IN: karch_acpi_prepare_params
0xf0406d69:  add    %eax,-0xc(%ebp)

----------------
IN: karch_acpi_prepare_params
0xf0406d6c:  mov    -0xc(%ebp),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406d6f:  cmp    -0x18(%ebp),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406d72:  jae    0xf0406e10

----------------
IN: karch_acpi_prepare_params
0xf0406d78:  mov    -0xc(%ebp),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406d7b:  movzbl (%eax),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406d7e:  cmp    $0xa,%al

----------------
IN: karch_acpi_prepare_params
0xf0406d80:  jne    0xf0406d86

----------------
IN: karch_acpi_prepare_params
0xf0406d86:  mov    -0xc(%ebp),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406d89:  lea    0x1(%eax),%edx

----------------
IN: karch_acpi_prepare_params
0xf0406d8c:  mov    %edx,-0xc(%ebp)

----------------
IN: karch_acpi_prepare_params
0xf0406d8f:  movzbl (%eax),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406d92:  movzbl %al,%eax

----------------
IN: karch_acpi_prepare_params
0xf0406d95:  shl    $0xa,%eax

----------------
IN: karch_acpi_prepare_params
0xf0406d98:  mov    %ax,0xf041fe5c

----------------
IN: karch_acpi_prepare_params
0xf0406d9e:  mov    -0xc(%ebp),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406da1:  movzbl (%eax),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406da4:  cmp    $0xa,%al

----------------
IN: karch_acpi_prepare_params
0xf0406da6:  jne    0xf0406dac

----------------
IN: karch_acpi_prepare_params
0xf0406dac:  mov    -0xc(%ebp),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406daf:  lea    0x1(%eax),%edx

----------------
IN: karch_acpi_prepare_params
0xf0406db2:  mov    %edx,-0xc(%ebp)

----------------
IN: karch_acpi_prepare_params
0xf0406db5:  movzbl (%eax),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406db8:  movzbl %al,%eax

----------------
IN: karch_acpi_prepare_params
0xf0406dbb:  shl    $0xa,%eax

----------------
IN: karch_acpi_prepare_params
0xf0406dbe:  mov    %ax,0xf041fe5e

----------------
IN: karch_acpi_prepare_params
0xf0406dc4:  mov    -0x10(%ebp),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406dc7:  mov    0x40(%eax),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406dca:  mov    %ax,0xf041fe60

----------------
IN: karch_acpi_prepare_params
0xf0406dd0:  mov    -0x10(%ebp),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406dd3:  mov    0x44(%eax),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406dd6:  mov    %ax,0xf041fe62

----------------
IN: karch_acpi_prepare_params
0xf0406ddc:  mov    -0x10(%ebp),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406ddf:  movzbl 0x78(%eax),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406de3:  movzbl %al,%eax

----------------
IN: karch_acpi_prepare_params
0xf0406de6:  mov    %ax,0xf041fe64

----------------
IN: karch_acpi_prepare_params
0xf0406dec:  mov    -0x10(%ebp),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406def:  movzbl 0x79(%eax),%eax

----------------
IN: karch_acpi_prepare_params
0xf0406df3:  movzbl %al,%eax

----------------
IN: karch_acpi_prepare_params
0xf0406df6:  mov    %ax,0xf041fe66

----------------
IN: karch_acpi_prepare_params
0xf0406dfc:  jmp    0xf0406e11

----------------
IN: karch_acpi_prepare_params
0xf0406e11:  leave  

----------------
IN: karch_acpi_prepare_params
0xf0406e12:  ret    

----------------
IN: karch_init_acpi
0xf0406c73:  mov    $0x1,%eax

----------------
IN: karch_init_acpi
0xf0406c78:  leave  

----------------
IN: karch_init_acpi
0xf0406c79:  ret    

----------------
IN: karch_init
0xf040503b:  test   %al,%al
0xf040503d:  je     0xf0405048

----------------
IN: karch_init
0xf040503f:  call   0xf04072e4

----------------
IN: karch_init_apic
0xf04072e4:  push   %ebp
0xf04072e5:  mov    %esp,%ebp
0xf04072e7:  sub    $0x8,%esp
0xf04072ea:  sub    $0x4,%esp
0xf04072ed:  push   $0x300
0xf04072f2:  push   $0x0
0xf04072f4:  push   $0xf041fe80
0xf04072f9:  call   0xf040a3de

----------------
IN: karch_init_apic
0xf04072fe:  add    $0x10,%esp
0xf0407301:  sub    $0x4,%esp
0xf0407304:  push   $0x500
0xf0407309:  push   $0x0
0xf040730b:  push   $0xf0420180
0xf0407310:  call   0xf040a3de

----------------
IN: karch_init_apic
0xf0407315:  add    $0x10,%esp
0xf0407318:  sub    $0x4,%esp
0xf040731b:  push   $0x14
0xf040731d:  push   $0x0
0xf040731f:  push   $0xf0420684
0xf0407324:  call   0xf040a3de

----------------
IN: karch_init_apic
0xf0407329:  add    $0x10,%esp
0xf040732c:  sub    $0xc,%esp
0xf040732f:  push   $0xf04206b8
0xf0407334:  call   0xf04068e7

----------------
IN: karch_x86_spinlock_init
0xf04068e7:  push   %ebp

----------------
IN: karch_x86_spinlock_init
0xf04068e8:  mov    %esp,%ebp

----------------
IN: karch_x86_spinlock_init
0xf04068ea:  mov    0x8(%ebp),%eax

----------------
IN: karch_x86_spinlock_init
0xf04068ed:  movl   $0x0,(%eax)

----------------
IN: karch_x86_spinlock_init
0xf04068f3:  nop    

----------------
IN: karch_x86_spinlock_init
0xf04068f4:  pop    %ebp

----------------
IN: karch_x86_spinlock_init
0xf04068f5:  ret    

----------------
IN: karch_init_apic
0xf0407339:  add    $0x10,%esp
0xf040733c:  movb   $0x0,0xf0420681
0xf0407343:  movb   $0x0,0xf0420680
0xf040734a:  sub    $0xc,%esp
0xf040734d:  push   $0x4
0xf040734f:  call   0xf040548d

----------------
IN: kcpuinfo
0xf04055e8:  mov    -0x2c(%ebp),%eax
0xf04055eb:  and    $0x200,%eax
0xf04055f0:  jmp    0xf0405717

----------------
IN: karch_init_apic
0xf0407354:  add    $0x10,%esp
0xf0407357:  test   %eax,%eax
0xf0407359:  jne    0xf0407362

----------------
IN: karch_init_apic
0xf0407362:  call   0xf040742b

----------------
IN: karch_apic_collect
0xf040742b:  push   %ebp
0xf040742c:  mov    %esp,%ebp
0xf040742e:  sub    $0x38,%esp
0xf0407431:  sub    $0x8,%esp
0xf0407434:  push   $0x0
0xf0407436:  lea    -0x2c(%ebp),%eax
0xf0407439:  push   %eax
0xf040743a:  call   0xf0407217

----------------
IN: karch_acpi_madt_iterate
0xf0407217:  push   %ebp
0xf0407218:  mov    %esp,%ebp
0xf040721a:  sub    $0x8,%esp
0xf040721d:  mov    0x8(%ebp),%eax
0xf0407220:  mov    0xc(%ebp),%edx
0xf0407223:  mov    %edx,(%eax)
0xf0407225:  mov    0x8(%ebp),%eax
0xf0407228:  mov    (%eax),%eax
0xf040722a:  test   %eax,%eax
0xf040722c:  jne    0xf040723e

----------------
IN: karch_acpi_madt_iterate
0xf040722e:  call   0xf04071e7

----------------
IN: karch_acpi_find_madt
0xf04071e7:  push   %ebp
0xf04071e8:  mov    %esp,%ebp
0xf04071ea:  sub    $0x8,%esp
0xf04071ed:  sub    $0xc,%esp
0xf04071f0:  push   $0xf040b240
0xf04071f5:  call   0xf04071bb

----------------
IN: karch_acpi_find_entry_r
0xf04071a8:  addl   $0x1,-0xc(%ebp)
0xf04071ac:  mov    -0xc(%ebp),%eax
0xf04071af:  cmp    -0x18(%ebp),%eax
0xf04071b2:  jb     0xf0407152

----------------
IN: karch_acpi_find_madt
0xf04071fa:  add    $0x10,%esp
0xf04071fd:  leave  
0xf04071fe:  ret    

----------------
IN: karch_acpi_madt_iterate
0xf0407233:  mov    %eax,0xc(%ebp)
0xf0407236:  mov    0x8(%ebp),%eax
0xf0407239:  mov    0xc(%ebp),%edx
0xf040723c:  mov    %edx,(%eax)
0xf040723e:  cmpl   $0x0,0xc(%ebp)
0xf0407242:  jne    0xf0407250

----------------
IN: karch_acpi_madt_iterate
0xf0407250:  mov    0xc(%ebp),%eax
0xf0407253:  lea    0x2c(%eax),%edx
0xf0407256:  mov    0x8(%ebp),%eax
0xf0407259:  mov    %edx,0x4(%eax)
0xf040725c:  leave  
0xf040725d:  ret    

----------------
IN: karch_apic_collect
0xf040743f:  add    $0x10,%esp
0xf0407442:  jmp    0xf04074de

----------------
IN: karch_apic_collect
0xf04074de:  sub    $0x8,%esp
0xf04074e1:  lea    -0x30(%ebp),%eax
0xf04074e4:  push   %eax
0xf04074e5:  lea    -0x2c(%ebp),%eax
0xf04074e8:  push   %eax
0xf04074e9:  call   0xf040725e

----------------
IN: karch_acpi_madt_next
0xf040725e:  push   %ebp
0xf040725f:  mov    %esp,%ebp
0xf0407261:  sub    $0x10,%esp
0xf0407264:  cmpl   $0x0,0x8(%ebp)
0xf0407268:  je     0xf0407273

----------------
IN: karch_acpi_madt_next
0xf040726a:  mov    0x8(%ebp),%eax
0xf040726d:  mov    (%eax),%eax
0xf040726f:  test   %eax,%eax
0xf0407271:  jne    0xf040727a

----------------
IN: karch_acpi_madt_next
0xf040727a:  mov    0x8(%ebp),%eax
0xf040727d:  mov    (%eax),%eax
0xf040727f:  mov    %eax,-0x4(%ebp)
0xf0407282:  mov    -0x4(%ebp),%eax
0xf0407285:  mov    0x4(%eax),%eax
0xf0407288:  sub    $0x2c,%eax
0xf040728b:  mov    %eax,-0x8(%ebp)
0xf040728e:  mov    -0x8(%ebp),%eax
0xf0407291:  lea    0x2c(%eax),%edx
0xf0407294:  mov    -0x4(%ebp),%eax
0xf0407297:  add    %edx,%eax
0xf0407299:  mov    %eax,-0xc(%ebp)
0xf040729c:  mov    0x8(%ebp),%eax
0xf040729f:  mov    0x4(%eax),%eax
0xf04072a2:  cmp    -0xc(%ebp),%eax
0xf04072a5:  jb     0xf04072ae

----------------
IN: karch_acpi_madt_next
0xf04072ae:  mov    0x8(%ebp),%eax
0xf04072b1:  mov    0x4(%eax),%eax
0xf04072b4:  mov    %eax,-0x10(%ebp)
0xf04072b7:  cmpl   $0x0,0xc(%ebp)
0xf04072bb:  je     0xf04072c5

----------------
IN: karch_acpi_madt_next
0xf04072bd:  mov    0xc(%ebp),%eax
0xf04072c0:  mov    -0x10(%ebp),%edx
0xf04072c3:  mov    %edx,(%eax)
0xf04072c5:  mov    0x8(%ebp),%eax
0xf04072c8:  mov    0x4(%eax),%edx
0xf04072cb:  mov    -0x10(%ebp),%eax
0xf04072ce:  movzbl 0x1(%eax),%eax
0xf04072d2:  movzbl %al,%eax
0xf04072d5:  add    %eax,%edx
0xf04072d7:  mov    0x8(%ebp),%eax
0xf04072da:  mov    %edx,0x4(%eax)
0xf04072dd:  mov    $0x1,%eax
0xf04072e2:  leave  
0xf04072e3:  ret    

----------------
IN: karch_apic_collect
0xf04074ee:  add    $0x10,%esp
0xf04074f1:  test   %al,%al
0xf04074f3:  jne    0xf0407447

----------------
IN: karch_apic_collect
0xf0407447:  mov    -0x30(%ebp),%eax
0xf040744a:  movzbl (%eax),%eax
0xf040744d:  cmp    $0x1,%al
0xf040744f:  jne    0xf04074dd

----------------
IN: karch_apic_collect
0xf04074dd:  nop    
0xf04074de:  sub    $0x8,%esp
0xf04074e1:  lea    -0x30(%ebp),%eax
0xf04074e4:  push   %eax
0xf04074e5:  lea    -0x2c(%ebp),%eax
0xf04074e8:  push   %eax
0xf04074e9:  call   0xf040725e

----------------
IN: karch_apic_collect
0xf0407455:  mov    -0x30(%ebp),%eax
0xf0407458:  mov    %eax,-0x1c(%ebp)
0xf040745b:  movzbl 0xf0420680,%eax
0xf0407462:  lea    0x1(%eax),%edx
0xf0407465:  mov    %dl,0xf0420680
0xf040746b:  movzbl %al,%edx
0xf040746e:  mov    %edx,%eax
0xf0407470:  add    %eax,%eax
0xf0407472:  add    %edx,%eax
0xf0407474:  shl    $0x3,%eax
0xf0407477:  add    $0xf041fe80,%eax
0xf040747c:  mov    %eax,-0x20(%ebp)
0xf040747f:  mov    -0x1c(%ebp),%eax
0xf0407482:  mov    0x4(%eax),%eax
0xf0407485:  sub    $0x8,%esp
0xf0407488:  push   $0x1
0xf040748a:  push   %eax
0xf040748b:  call   0xf04075b3

----------------
IN: karch_ioapic_read
0xf04075b3:  push   %ebp
0xf04075b4:  mov    %esp,%ebp
0xf04075b6:  mov    0x8(%ebp),%eax
0xf04075b9:  mov    0xc(%ebp),%edx
0xf04075bc:  mov    %edx,(%eax)
0xf04075be:  mov    0x8(%ebp),%eax
0xf04075c1:  add    $0x10,%eax
0xf04075c4:  mov    (%eax),%eax
0xf04075c6:  pop    %ebp
0xf04075c7:  ret    

----------------
IN: karch_apic_collect
0xf0407490:  add    $0x10,%esp
0xf0407493:  mov    %eax,-0x24(%ebp)
0xf0407496:  mov    -0x1c(%ebp),%eax
0xf0407499:  movzbl 0x2(%eax),%eax
0xf040749d:  movzbl %al,%edx
0xf04074a0:  mov    -0x20(%ebp),%eax
0xf04074a3:  mov    %edx,(%eax)
0xf04074a5:  mov    -0x1c(%ebp),%eax
0xf04074a8:  mov    0x4(%eax),%edx
0xf04074ab:  mov    -0x20(%ebp),%eax
0xf04074ae:  mov    %edx,0x4(%eax)
0xf04074b1:  mov    -0x1c(%ebp),%eax
0xf04074b4:  mov    0x4(%eax),%edx
0xf04074b7:  mov    -0x20(%ebp),%eax
0xf04074ba:  mov    %edx,0x8(%eax)
0xf04074bd:  mov    -0x1c(%ebp),%eax
0xf04074c0:  mov    0x8(%eax),%edx
0xf04074c3:  mov    -0x20(%ebp),%eax
0xf04074c6:  mov    %edx,0x14(%eax)
0xf04074c9:  mov    -0x24(%ebp),%eax
0xf04074cc:  shr    $0x10,%eax
0xf04074cf:  movzbl %al,%eax
0xf04074d2:  lea    0x1(%eax),%edx
0xf04074d5:  mov    -0x20(%ebp),%eax
0xf04074d8:  mov    %edx,0x10(%eax)
0xf04074db:  jmp    0xf04074de

----------------
IN: karch_acpi_madt_next
0xf04072a7:  mov    $0x0,%eax
0xf04072ac:  jmp    0xf04072e2

----------------
IN: karch_acpi_madt_next
0xf04072e2:  leave  
0xf04072e3:  ret    

----------------
IN: karch_apic_collect
0xf04074f9:  sub    $0x8,%esp
0xf04074fc:  push   $0x0
0xf04074fe:  lea    -0x2c(%ebp),%eax
0xf0407501:  push   %eax
0xf0407502:  call   0xf0407217

----------------
IN: karch_apic_collect
0xf0407507:  add    $0x10,%esp
0xf040750a:  movb   $0x0,-0x9(%ebp)
0xf040750e:  jmp    0xf0407577

----------------
IN: karch_apic_collect
0xf0407577:  sub    $0x8,%esp
0xf040757a:  lea    -0x30(%ebp),%eax
0xf040757d:  push   %eax
0xf040757e:  lea    -0x2c(%ebp),%eax
0xf0407581:  push   %eax
0xf0407582:  call   0xf040725e

----------------
IN: karch_apic_collect
0xf0407587:  add    $0x10,%esp
0xf040758a:  test   %al,%al
0xf040758c:  jne    0xf0407510

----------------
IN: karch_apic_collect
0xf0407510:  mov    -0x30(%ebp),%eax
0xf0407513:  movzbl (%eax),%eax
0xf0407516:  test   %al,%al
0xf0407518:  jne    0xf0407576

----------------
IN: karch_apic_collect
0xf040751a:  mov    -0x30(%ebp),%eax
0xf040751d:  mov    %eax,-0x10(%ebp)
0xf0407520:  movzbl -0x9(%ebp),%eax
0xf0407524:  lea    0x1(%eax),%edx
0xf0407527:  mov    %dl,-0x9(%ebp)
0xf040752a:  mov    %al,-0x11(%ebp)
0xf040752d:  movzbl -0x9(%ebp),%eax
0xf0407531:  sub    $0xc,%esp
0xf0407534:  push   %eax
0xf0407535:  call   0xf040527d

----------------
IN: karch_set_count_cpu
0xf040527d:  push   %ebp
0xf040527e:  mov    %esp,%ebp
0xf0405280:  sub    $0x4,%esp
0xf0405283:  mov    0x8(%ebp),%eax
0xf0405286:  mov    %al,-0x4(%ebp)
0xf0405289:  cmpb   $0xf,-0x4(%ebp)
0xf040528d:  jbe    0xf0405296

----------------
IN: karch_set_count_cpu
0xf0405296:  movzbl -0x4(%ebp),%eax
0xf040529a:  mov    %al,0xf041f430
0xf040529f:  mov    $0x1,%eax
0xf04052a4:  leave  
0xf04052a5:  ret    

----------------
IN: karch_apic_collect
0xf040753a:  add    $0x10,%esp
0xf040753d:  test   %eax,%eax
0xf040753f:  je     0xf0407590

----------------
IN: karch_apic_collect
0xf0407541:  movzbl -0x11(%ebp),%eax
0xf0407545:  sub    $0xc,%esp
0xf0407548:  push   %eax
0xf0407549:  call   0xf0405249

----------------
IN: karch_apic_collect
0xf040754e:  add    $0x10,%esp
0xf0407551:  mov    %eax,-0x18(%ebp)
0xf0407554:  mov    -0x18(%ebp),%eax
0xf0407557:  movzwl 0x74(%eax),%eax
0xf040755b:  or     $0x2,%eax
0xf040755e:  mov    %eax,%edx
0xf0407560:  mov    -0x18(%ebp),%eax
0xf0407563:  mov    %dx,0x74(%eax)
0xf0407567:  mov    -0x10(%ebp),%eax
0xf040756a:  movzbl 0x3(%eax),%edx
0xf040756e:  mov    -0x18(%ebp),%eax
0xf0407571:  mov    %dl,0x77(%eax)
0xf0407574:  jmp    0xf0407577

----------------
IN: karch_apic_collect
0xf0407576:  nop    
0xf0407577:  sub    $0x8,%esp
0xf040757a:  lea    -0x30(%ebp),%eax
0xf040757d:  push   %eax
0xf040757e:  lea    -0x2c(%ebp),%eax
0xf0407581:  push   %eax
0xf0407582:  call   0xf040725e

----------------
IN: karch_apic_collect
0xf040758e:  jmp    0xf0407591

----------------
IN: karch_apic_collect
0xf0407591:  nop    
0xf0407592:  leave  
0xf0407593:  ret    

----------------
IN: karch_init_apic
0xf0407367:  movzbl 0xf0420680,%eax
0xf040736e:  test   %al,%al
0xf0407370:  jne    0xf0407380

----------------
IN: karch_init_apic
0xf0407380:  movb   $0x1,0xf0420681
0xf0407387:  movl   $0xfee00000,0xf0420684
0xf0407391:  movl   $0xfee00000,0xf0420688
0xf040739b:  mov    0xf0420684,%eax
0xf04073a0:  add    $0xb0,%eax
0xf04073a5:  mov    %eax,0xf042068c
0xf04073aa:  movl   $0x0,0xf0420690
0xf04073b4:  movl   $0x0,0xf0420694
0xf04073be:  mov    $0x1,%eax
0xf04073c3:  leave  
0xf04073c4:  ret    

----------------
IN: karch_init
0xf0405044:  test   %al,%al
0xf0405046:  jne    0xf0405056

----------------
IN: karch_init
0xf0405056:  call   0xf0408f6a

----------------
IN: karch_init_smp
0xf0408f6a:  push   %ebp
0xf0408f6b:  mov    %esp,%ebp
0xf0408f6d:  sub    $0x18,%esp
0xf0408f70:  sub    $0x4,%esp
0xf0408f73:  push   $0xff
0xf0408f78:  push   $0x0
0xf0408f7a:  push   $0xf04206e0
0xf0408f7f:  call   0xf040a3de

----------------
IN: karch_init_smp
0xf0408f84:  add    $0x10,%esp
0xf0408f87:  movb   $0x0,0xf04206c4
0xf0408f8e:  call   0xf040741f

----------------
IN: karch_apic_supported
0xf040741f:  push   %ebp
0xf0407420:  mov    %esp,%ebp
0xf0407422:  movzbl 0xf0420681,%eax
0xf0407429:  pop    %ebp
0xf040742a:  ret    

----------------
IN: karch_init_smp
0xf0408f93:  test   %al,%al
0xf0408f95:  jne    0xf0408fa1

----------------
IN: karch_init_smp
0xf0408fa1:  sub    $0xc,%esp
0xf0408fa4:  push   $0xf040b4b8
0xf0408fa9:  call   0xf0405185

----------------
IN: karch_emergency_print
0xf0405185:  push   %ebp
0xf0405186:  mov    %esp,%ebp
0xf0405188:  sub    $0x10,%esp
0xf040518b:  movl   $0xb8000,-0x4(%ebp)
0xf0405192:  mov    0x8(%ebp),%eax
0xf0405195:  mov    %eax,-0x8(%ebp)
0xf0405198:  jmp    0xf04051bb

----------------
IN: karch_emergency_print
0xf04051bb:  mov    -0x8(%ebp),%eax
0xf04051be:  movzbl (%eax),%eax
0xf04051c1:  test   %al,%al
0xf04051c3:  jne    0xf040519a

----------------
IN: karch_emergency_print
0xf040519a:  mov    -0x8(%ebp),%eax
0xf040519d:  lea    0x1(%eax),%edx
0xf04051a0:  mov    %edx,-0x8(%ebp)
0xf04051a3:  movzbl (%eax),%eax
0xf04051a6:  cbtw   
0xf04051a8:  or     $0xf,%ah
0xf04051ab:  mov    %eax,%ecx
0xf04051ad:  mov    -0x4(%ebp),%eax
0xf04051b0:  lea    0x2(%eax),%edx
0xf04051b3:  mov    %edx,-0x4(%ebp)
0xf04051b6:  mov    %ecx,%edx
0xf04051b8:  mov    %dx,(%eax)
0xf04051bb:  mov    -0x8(%ebp),%eax
0xf04051be:  movzbl (%eax),%eax
0xf04051c1:  test   %al,%al
0xf04051c3:  jne    0xf040519a

----------------
IN: karch_emergency_print
0xf04051c5:  mov    -0x4(%ebp),%eax
0xf04051c8:  lea    0x2(%eax),%edx
0xf04051cb:  mov    %edx,-0x4(%ebp)
0xf04051ce:  movw   $0xf2e,(%eax)
0xf04051d3:  mov    -0x4(%ebp),%eax
0xf04051d6:  lea    0x2(%eax),%edx
0xf04051d9:  mov    %edx,-0x4(%ebp)
0xf04051dc:  movw   $0xf00,(%eax)
0xf04051e1:  nop    
0xf04051e2:  leave  
0xf04051e3:  ret    

----------------
IN: karch_init_smp
0xf0408fae:  add    $0x10,%esp
0xf0408fb1:  call   0xf040913b

----------------
IN: karch_smp_map_apic_id
0xf040913b:  push   %ebp
0xf040913c:  mov    %esp,%ebp
0xf040913e:  sub    $0x28,%esp
0xf0409141:  sub    $0x8,%esp
0xf0409144:  push   $0x0
0xf0409146:  lea    -0x20(%ebp),%eax
0xf0409149:  push   %eax
0xf040914a:  call   0xf0407217

----------------
IN: karch_smp_map_apic_id
0xf040914f:  add    $0x10,%esp
0xf0409152:  movb   $0x0,-0x9(%ebp)
0xf0409156:  jmp    0xf04091a5

----------------
IN: karch_smp_map_apic_id
0xf04091a5:  sub    $0x8,%esp
0xf04091a8:  lea    -0x24(%ebp),%eax
0xf04091ab:  push   %eax
0xf04091ac:  lea    -0x20(%ebp),%eax
0xf04091af:  push   %eax
0xf04091b0:  call   0xf040725e

----------------
IN: karch_smp_map_apic_id
0xf04091b5:  add    $0x10,%esp
0xf04091b8:  test   %al,%al
0xf04091ba:  jne    0xf0409158

----------------
IN: karch_smp_map_apic_id
0xf0409158:  mov    -0x24(%ebp),%eax
0xf040915b:  movzbl (%eax),%eax
0xf040915e:  test   %al,%al
0xf0409160:  jne    0xf04091a4

----------------
IN: karch_smp_map_apic_id
0xf0409162:  mov    -0x24(%ebp),%eax
0xf0409165:  mov    %eax,-0x10(%ebp)
0xf0409168:  movzbl -0x9(%ebp),%eax
0xf040916c:  lea    0x1(%eax),%edx
0xf040916f:  mov    %dl,-0x9(%ebp)
0xf0409172:  mov    %al,-0x11(%ebp)
0xf0409175:  movzbl -0x11(%ebp),%eax
0xf0409179:  sub    $0xc,%esp
0xf040917c:  push   %eax
0xf040917d:  call   0xf0405249

----------------
IN: karch_smp_map_apic_id
0xf0409182:  add    $0x10,%esp
0xf0409185:  mov    %eax,-0x18(%ebp)
0xf0409188:  cmpl   $0x0,-0x18(%ebp)
0xf040918c:  je     0xf04091be

----------------
IN: karch_smp_map_apic_id
0xf040918e:  mov    -0x10(%ebp),%eax
0xf0409191:  movzbl 0x3(%eax),%eax
0xf0409195:  movzbl %al,%eax
0xf0409198:  movzbl -0x11(%ebp),%edx
0xf040919c:  mov    %dl,-0xfbdf920(%eax)
0xf04091a2:  jmp    0xf04091a5

----------------
IN: karch_smp_map_apic_id
0xf04091a4:  nop    
0xf04091a5:  sub    $0x8,%esp
0xf04091a8:  lea    -0x24(%ebp),%eax
0xf04091ab:  push   %eax
0xf04091ac:  lea    -0x20(%ebp),%eax
0xf04091af:  push   %eax
0xf04091b0:  call   0xf040725e

----------------
IN: karch_smp_map_apic_id
0xf04091bc:  jmp    0xf04091bf

----------------
IN: karch_smp_map_apic_id
0xf04091bf:  nop    
0xf04091c0:  leave  
0xf04091c1:  ret    

----------------
IN: karch_init_smp
0xf0408fb6:  call   0xf040523d

----------------
IN: karch_count_cpu
0xf040523d:  push   %ebp
0xf040523e:  mov    %esp,%ebp
0xf0405240:  movzbl 0xf041f430,%eax
0xf0405247:  pop    %ebp
0xf0405248:  ret    

----------------
IN: karch_init_smp
0xf0408fbb:  mov    %al,-0xa(%ebp)
0xf0408fbe:  movb   $0x0,-0x9(%ebp)
0xf0408fc2:  jmp    0xf0408fe9

----------------
IN: karch_init_smp
0xf0408fe9:  movzbl -0x9(%ebp),%eax
0xf0408fed:  cmp    -0xa(%ebp),%al
0xf0408ff0:  jb     0xf0408fc4

----------------
IN: karch_init_smp
0xf0408fc4:  movzbl -0x9(%ebp),%eax
0xf0408fc8:  sub    $0xc,%esp
0xf0408fcb:  push   %eax
0xf0408fcc:  call   0xf040520b

----------------
IN: karch_init_smp
0xf0408fd1:  add    $0x10,%esp
0xf0408fd4:  movzbl -0x9(%ebp),%edx
0xf0408fd8:  sub    $0x8,%esp
0xf0408fdb:  push   %eax
0xf0408fdc:  push   %edx
0xf0408fdd:  call   0xf04069f0

----------------
IN: karch_init_smp
0xf0408fe2:  add    $0x10,%esp
0xf0408fe5:  addb   $0x1,-0x9(%ebp)
0xf0408fe9:  movzbl -0x9(%ebp),%eax
0xf0408fed:  cmp    -0xa(%ebp),%al
0xf0408ff0:  jb     0xf0408fc4

----------------
IN: karch_init_smp
0xf0408ff2:  call   0xf0407594

----------------
IN: karch_lapic_id
0xf0407594:  push   %ebp
0xf0407595:  mov    %esp,%ebp
0xf0407597:  sub    $0x8,%esp
0xf040759a:  mov    0xf0420684,%eax
0xf040759f:  add    $0x20,%eax
0xf04075a2:  sub    $0xc,%esp
0xf04075a5:  push   %eax
0xf04075a6:  call   0xf0407661

----------------
IN: karch_lapic_read
0xf0407661:  push   %ebp
0xf0407662:  mov    %esp,%ebp
0xf0407664:  mov    0x8(%ebp),%eax
0xf0407667:  mov    (%eax),%eax
0xf0407669:  pop    %ebp
0xf040766a:  ret    

----------------
IN: karch_lapic_id
0xf04075ab:  add    $0x10,%esp
0xf04075ae:  shr    $0x18,%eax
0xf04075b1:  leave  
0xf04075b2:  ret    

----------------
IN: karch_init_smp
0xf0408ff7:  mov    %al,-0xb(%ebp)
0xf0408ffa:  movzbl -0xb(%ebp),%eax
0xf0408ffe:  movzbl -0xfbdf920(%eax),%eax
0xf0409005:  mov    %al,-0xc(%ebp)
0xf0409008:  movzbl -0xb(%ebp),%edx
0xf040900c:  movzbl -0xc(%ebp),%eax
0xf0409010:  sub    $0x8,%esp
0xf0409013:  push   %edx
0xf0409014:  push   %eax
0xf0409015:  call   0xf04073c5

----------------
IN: karch_apic_set_bsp
0xf04073c5:  push   %ebp
0xf04073c6:  mov    %esp,%ebp
0xf04073c8:  sub    $0x28,%esp
0xf04073cb:  mov    0x8(%ebp),%edx
0xf04073ce:  mov    0xc(%ebp),%eax
0xf04073d1:  mov    %dl,-0x1c(%ebp)
0xf04073d4:  mov    %al,-0x20(%ebp)
0xf04073d7:  movzbl -0x1c(%ebp),%eax
0xf04073db:  mov    %eax,0xf0420690
0xf04073e0:  movzbl -0x20(%ebp),%eax
0xf04073e4:  mov    %eax,0xf0420694
0xf04073e9:  movzbl -0x1c(%ebp),%eax
0xf04073ed:  sub    $0xc,%esp
0xf04073f0:  push   %eax
0xf04073f1:  call   0xf0405249

----------------
IN: karch_apic_set_bsp
0xf04073f6:  add    $0x10,%esp
0xf04073f9:  mov    %eax,-0xc(%ebp)
0xf04073fc:  cmpl   $0x0,-0xc(%ebp)
0xf0407400:  je     0xf040741c

----------------
IN: karch_apic_set_bsp
0xf0407402:  mov    -0xc(%ebp),%eax
0xf0407405:  movb   $0x1,0x76(%eax)
0xf0407409:  mov    -0xc(%ebp),%eax
0xf040740c:  movzwl 0x74(%eax),%eax
0xf0407410:  or     $0x1,%eax
0xf0407413:  mov    %eax,%edx
0xf0407415:  mov    -0xc(%ebp),%eax
0xf0407418:  mov    %dx,0x74(%eax)
0xf040741c:  nop    
0xf040741d:  leave  
0xf040741e:  ret    

----------------
IN: karch_init_smp
0xf040901a:  add    $0x10,%esp
0xf040901d:  movb   $0x1,0xf04206c4
0xf0409024:  movzbl -0xc(%ebp),%eax
0xf0409028:  sub    $0xc,%esp
0xf040902b:  push   %eax
0xf040902c:  call   0xf0407707

----------------
IN: karch_lapic_enable
0xf0407707:  push   %ebp
0xf0407708:  mov    %esp,%ebp
0xf040770a:  sub    $0x28,%esp
0xf040770d:  mov    0x8(%ebp),%eax
0xf0407710:  mov    %al,-0x1c(%ebp)
0xf0407713:  mov    0xf0420684,%eax
0xf0407718:  test   %eax,%eax
0xf040771a:  jne    0xf0407726

----------------
IN: karch_lapic_enable
0xf0407726:  sub    $0xc,%esp
0xf0407729:  push   $0x5
0xf040772b:  call   0xf040548d

----------------
IN: kcpuinfo
0xf04055f5:  mov    -0x2c(%ebp),%eax
0xf04055f8:  and    $0x10,%eax
0xf04055fb:  jmp    0xf0405717

----------------
IN: karch_lapic_enable
0xf0407730:  add    $0x10,%esp
0xf0407733:  test   %eax,%eax
0xf0407735:  jne    0xf0407741

----------------
IN: karch_lapic_enable
0xf0407741:  movzbl -0x1c(%ebp),%eax
0xf0407745:  sub    $0xc,%esp
0xf0407748:  push   %eax
0xf0407749:  call   0xf0405249

----------------
IN: karch_lapic_enable
0xf040774e:  add    $0x10,%esp
0xf0407751:  test   %eax,%eax
0xf0407753:  jne    0xf040775f

----------------
IN: karch_lapic_enable
0xf040775f:  call   0xf04076cb

----------------
IN: karch_lapic_enable_msr
0xf04076cb:  push   %ebp
0xf04076cc:  mov    %esp,%ebp
0xf04076ce:  sub    $0x18,%esp
0xf04076d1:  sub    $0x4,%esp
0xf04076d4:  lea    -0x10(%ebp),%eax
0xf04076d7:  push   %eax
0xf04076d8:  lea    -0xc(%ebp),%eax
0xf04076db:  push   %eax
0xf04076dc:  push   $0x1b
0xf04076de:  call   0xf04057aa

----------------
IN: 
0xf04057aa:  push   %ebp
0xf04057ab:  mov    %esp,%ebp
0xf04057ad:  mov    0x8(%ebp),%ecx
0xf04057b0:  rdmsr  
0xf04057b2:  mov    0xc(%ebp),%ecx
0xf04057b5:  mov    %edx,(%ecx)
0xf04057b7:  mov    0x10(%ebp),%ecx
0xf04057ba:  mov    %eax,(%ecx)
0xf04057bc:  mov    %ebp,%esp
0xf04057be:  pop    %ebp
0xf04057bf:  ret    

----------------
IN: karch_lapic_enable_msr
0xf04076e3:  add    $0x10,%esp
0xf04076e6:  mov    -0x10(%ebp),%eax
0xf04076e9:  or     $0x8,%ah
0xf04076ec:  mov    %eax,-0x10(%ebp)
0xf04076ef:  mov    -0x10(%ebp),%edx
0xf04076f2:  mov    -0xc(%ebp),%eax
0xf04076f5:  sub    $0x4,%esp
0xf04076f8:  push   %edx
0xf04076f9:  push   %eax
0xf04076fa:  push   $0x1b
0xf04076fc:  call   0xf04057c0

----------------
IN: 
0xf04057c0:  push   %ebp
0xf04057c1:  mov    %esp,%ebp
0xf04057c3:  mov    0xc(%ebp),%edx
0xf04057c6:  mov    0x10(%ebp),%eax
0xf04057c9:  mov    0x8(%ebp),%ecx
0xf04057cc:  wrmsr  

----------------
IN: 
0xf04057ce:  mov    %ebp,%esp
0xf04057d0:  pop    %ebp
0xf04057d1:  ret    

----------------
IN: karch_lapic_enable_msr
0xf0407701:  add    $0x10,%esp
0xf0407704:  nop    
0xf0407705:  leave  
0xf0407706:  ret    

----------------
IN: karch_lapic_enable
0xf0407764:  mov    0xf0420684,%eax
0xf0407769:  sub    $0xffffff80,%eax
0xf040776c:  sub    $0x8,%esp
0xf040776f:  push   $0x0
0xf0407771:  push   %eax
0xf0407772:  call   0xf040766b

----------------
IN: karch_lapic_write
0xf040766b:  push   %ebp
0xf040766c:  mov    %esp,%ebp
0xf040766e:  mov    0x8(%ebp),%eax
0xf0407671:  mov    0xc(%ebp),%edx
0xf0407674:  mov    %edx,(%eax)
0xf0407676:  nop    
0xf0407677:  pop    %ebp
0xf0407678:  ret    

----------------
IN: karch_lapic_enable
0xf0407777:  add    $0x10,%esp
0xf040777a:  call   0xf0407679

----------------
IN: karch_lapic_error
0xf0407679:  push   %ebp
0xf040767a:  mov    %esp,%ebp
0xf040767c:  mov    0xf0420684,%eax
0xf0407681:  add    $0x280,%eax
0xf0407686:  push   $0x0
0xf0407688:  push   %eax
0xf0407689:  call   0xf040766b

----------------
IN: karch_lapic_error
0xf040768e:  add    $0x8,%esp
0xf0407691:  mov    0xf0420684,%eax
0xf0407696:  add    $0x280,%eax
0xf040769b:  push   %eax
0xf040769c:  call   0xf0407661

----------------
IN: karch_lapic_error
0xf04076a1:  add    $0x4,%esp
0xf04076a4:  leave  
0xf04076a5:  ret    

----------------
IN: karch_lapic_enable
0xf040777f:  mov    %eax,-0xc(%ebp)
0xf0407782:  mov    0xf0420684,%eax
0xf0407787:  add    $0xf0,%eax
0xf040778c:  sub    $0xc,%esp
0xf040778f:  push   %eax
0xf0407790:  call   0xf0407661

----------------
IN: karch_lapic_enable
0xf0407795:  add    $0x10,%esp
0xf0407798:  mov    %eax,-0xc(%ebp)
0xf040779b:  orl    $0x1ff,-0xc(%ebp)
0xf04077a2:  andl   $0xfffffdff,-0xc(%ebp)
0xf04077a9:  mov    0xf0420684,%eax
0xf04077ae:  add    $0xf0,%eax
0xf04077b3:  sub    $0x8,%esp
0xf04077b6:  pushl  -0xc(%ebp)
0xf04077b9:  push   %eax
0xf04077ba:  call   0xf040766b

----------------
IN: karch_lapic_enable
0xf04077bf:  add    $0x10,%esp
0xf04077c2:  mov    0xf0420684,%eax
0xf04077c7:  add    $0xf0,%eax
0xf04077cc:  sub    $0xc,%esp
0xf04077cf:  push   %eax
0xf04077d0:  call   0xf0407661

----------------
IN: karch_lapic_enable
0xf04077d5:  add    $0x10,%esp
0xf04077d8:  call   0xf04076a6

----------------
IN: karch_lapic_eoi
0xf04076a6:  push   %ebp
0xf04076a7:  mov    %esp,%ebp
0xf04076a9:  mov    0xf042068c,%eax
0xf04076ae:  test   %eax,%eax
0xf04076b0:  jne    0xf04076b9

----------------
IN: karch_lapic_eoi
0xf04076b9:  mov    0xf042068c,%eax
0xf04076be:  movl   $0x0,(%eax)
0xf04076c4:  mov    $0x1,%eax
0xf04076c9:  pop    %ebp
0xf04076ca:  ret    

----------------
IN: karch_lapic_enable
0xf04077dd:  mov    0xf0420684,%eax
0xf04077e2:  add    $0xd0,%eax
0xf04077e7:  sub    $0xc,%esp
0xf04077ea:  push   %eax
0xf04077eb:  call   0xf0407661

----------------
IN: karch_lapic_enable
0xf04077f0:  add    $0x10,%esp
0xf04077f3:  and    $0xffffff,%eax
0xf04077f8:  mov    %eax,-0xc(%ebp)
0xf04077fb:  movzbl -0x1c(%ebp),%eax
0xf04077ff:  shl    $0x18,%eax
0xf0407802:  or     %eax,-0xc(%ebp)
0xf0407805:  mov    0xf0420684,%eax
0xf040780a:  add    $0xd0,%eax
0xf040780f:  sub    $0x8,%esp
0xf0407812:  pushl  -0xc(%ebp)
0xf0407815:  push   %eax
0xf0407816:  call   0xf040766b

----------------
IN: karch_lapic_enable
0xf040781b:  add    $0x10,%esp
0xf040781e:  mov    0xf0420684,%eax
0xf0407823:  add    $0xe0,%eax
0xf0407828:  sub    $0xc,%esp
0xf040782b:  push   %eax
0xf040782c:  call   0xf0407661

----------------
IN: karch_lapic_enable
0xf0407831:  add    $0x10,%esp
0xf0407834:  or     $0xf0000000,%eax
0xf0407839:  mov    %eax,-0xc(%ebp)
0xf040783c:  mov    0xf0420684,%eax
0xf0407841:  add    $0xe0,%eax
0xf0407846:  sub    $0x8,%esp
0xf0407849:  pushl  -0xc(%ebp)
0xf040784c:  push   %eax
0xf040784d:  call   0xf040766b

----------------
IN: karch_lapic_enable
0xf0407852:  add    $0x10,%esp
0xf0407855:  mov    0xf0420684,%eax
0xf040785a:  add    $0x370,%eax
0xf040785f:  sub    $0xc,%esp
0xf0407862:  push   %eax
0xf0407863:  call   0xf0407661

----------------
IN: karch_lapic_enable
0xf0407868:  add    $0x10,%esp
0xf040786b:  mov    $0x0,%al
0xf040786d:  mov    %eax,-0xc(%ebp)
0xf0407870:  mov    0xf0420684,%eax
0xf0407875:  add    $0x370,%eax
0xf040787a:  sub    $0x8,%esp
0xf040787d:  pushl  -0xc(%ebp)
0xf0407880:  push   %eax
0xf0407881:  call   0xf040766b

----------------
IN: karch_lapic_enable
0xf0407886:  add    $0x10,%esp
0xf0407889:  mov    0xf0420684,%eax
0xf040788e:  add    $0x30,%eax
0xf0407891:  sub    $0xc,%esp
0xf0407894:  push   %eax
0xf0407895:  call   0xf0407661

----------------
IN: karch_lapic_enable
0xf040789a:  add    $0x10,%esp
0xf040789d:  shr    $0x10,%eax
0xf04078a0:  mov    %al,-0xd(%ebp)
0xf04078a3:  cmpb   $0x3,-0xd(%ebp)
0xf04078a7:  jbe    0xf04078e3

----------------
IN: karch_lapic_enable
0xf04078a9:  mov    0xf0420684,%eax
0xf04078ae:  add    $0x330,%eax
0xf04078b3:  sub    $0xc,%esp
0xf04078b6:  push   %eax
0xf04078b7:  call   0xf0407661

----------------
IN: karch_lapic_enable
0xf04078bc:  add    $0x10,%esp
0xf04078bf:  mov    %eax,-0xc(%ebp)
0xf04078c2:  mov    -0xc(%ebp),%eax
0xf04078c5:  or     $0x10000,%eax
0xf04078ca:  mov    %eax,%edx
0xf04078cc:  mov    0xf0420684,%eax
0xf04078d1:  add    $0x330,%eax
0xf04078d6:  sub    $0x8,%esp
0xf04078d9:  push   %edx
0xf04078da:  push   %eax
0xf04078db:  call   0xf040766b

----------------
IN: karch_lapic_enable
0xf04078e0:  add    $0x10,%esp
0xf04078e3:  cmpb   $0x4,-0xd(%ebp)
0xf04078e7:  jbe    0xf0407923

----------------
IN: karch_lapic_enable
0xf04078e9:  mov    0xf0420684,%eax
0xf04078ee:  add    $0x340,%eax
0xf04078f3:  sub    $0xc,%esp
0xf04078f6:  push   %eax
0xf04078f7:  call   0xf0407661

----------------
IN: karch_lapic_enable
0xf04078fc:  add    $0x10,%esp
0xf04078ff:  mov    %eax,-0xc(%ebp)
0xf0407902:  mov    -0xc(%ebp),%eax
0xf0407905:  or     $0x10000,%eax
0xf040790a:  mov    %eax,%edx
0xf040790c:  mov    0xf0420684,%eax
0xf0407911:  add    $0x340,%eax
0xf0407916:  sub    $0x8,%esp
0xf0407919:  push   %edx
0xf040791a:  push   %eax
0xf040791b:  call   0xf040766b

----------------
IN: karch_lapic_enable
0xf0407920:  add    $0x10,%esp
0xf0407923:  mov    0xf0420684,%eax
0xf0407928:  sub    $0xffffff80,%eax
0xf040792b:  sub    $0xc,%esp
0xf040792e:  push   %eax
0xf040792f:  call   0xf0407661

----------------
IN: karch_lapic_enable
0xf0407934:  add    $0x10,%esp
0xf0407937:  mov    %eax,-0xc(%ebp)
0xf040793a:  mov    -0xc(%ebp),%eax
0xf040793d:  mov    $0x0,%al
0xf040793f:  mov    %eax,%edx
0xf0407941:  mov    0xf0420684,%eax
0xf0407946:  sub    $0xffffff80,%eax
0xf0407949:  sub    $0x8,%esp
0xf040794c:  push   %edx
0xf040794d:  push   %eax
0xf040794e:  call   0xf040766b

----------------
IN: karch_lapic_enable
0xf0407953:  add    $0x10,%esp
0xf0407956:  mov    0xf0420684,%eax
0xf040795b:  add    $0xf0,%eax
0xf0407960:  sub    $0xc,%esp
0xf0407963:  push   %eax
0xf0407964:  call   0xf0407661

----------------
IN: karch_lapic_enable
0xf0407969:  add    $0x10,%esp
0xf040796c:  call   0xf04076a6

----------------
IN: karch_lapic_enable
0xf0407971:  movzbl -0x1c(%ebp),%eax
0xf0407975:  sub    $0xc,%esp
0xf0407978:  push   %eax
0xf0407979:  call   0xf04079ce

----------------
IN: karch_lapic_calibrate_clocks
0xf04079ce:  push   %ebp
0xf04079cf:  mov    %esp,%ebp
0xf04079d1:  push   %ebx
0xf04079d2:  sub    $0x44,%esp
0xf04079d5:  mov    0x8(%ebp),%eax
0xf04079d8:  mov    %al,-0x3c(%ebp)
0xf04079db:  movl   $0xffffffff,-0xc(%ebp)
0xf04079e2:  movzbl -0x3c(%ebp),%eax
0xf04079e6:  sub    $0xc,%esp
0xf04079e9:  push   %eax
0xf04079ea:  call   0xf0405249

----------------
IN: karch_lapic_calibrate_clocks
0xf04079ef:  add    $0x10,%esp
0xf04079f2:  mov    %eax,-0x10(%ebp)
0xf04079f5:  cmpl   $0x0,-0x10(%ebp)
0xf04079f9:  je     0xf0407c5a

----------------
IN: karch_lapic_calibrate_clocks
0xf04079ff:  sub    $0xc,%esp
0xf0407a02:  push   $0xf04206b8
0xf0407a07:  call   0xf0406926

----------------
IN: karch_x86_spinlock_lock
0xf0406926:  push   %ebp

----------------
IN: karch_x86_spinlock_lock
0xf0406927:  mov    %esp,%ebp

----------------
IN: karch_x86_spinlock_lock
0xf0406929:  sub    $0x8,%esp

----------------
IN: karch_x86_spinlock_lock
0xf040692c:  nop    

----------------
IN: karch_x86_spinlock_lock
0xf040692d:  sub    $0xc,%esp

----------------
IN: karch_x86_spinlock_lock
0xf0406930:  pushl  0x8(%ebp)

----------------
IN: karch_x86_spinlock_lock
0xf0406933:  call   0xf04068f6

----------------
IN: karch_x86_spinlock_trylock
0xf04068f6:  push   %ebp

----------------
IN: karch_x86_spinlock_trylock
0xf04068f7:  mov    %esp,%ebp

----------------
IN: karch_x86_spinlock_trylock
0xf04068f9:  sub    $0x18,%esp

----------------
IN: karch_x86_spinlock_trylock
0xf04068fc:  mov    0x8(%ebp),%eax

----------------
IN: karch_x86_spinlock_trylock
0xf04068ff:  mov    %eax,-0xc(%ebp)

----------------
IN: karch_x86_spinlock_trylock
0xf0406902:  sub    $0x4,%esp

----------------
IN: karch_x86_spinlock_trylock
0xf0406905:  push   $0x1

----------------
IN: karch_x86_spinlock_trylock
0xf0406907:  push   $0x0

----------------
IN: karch_x86_spinlock_trylock
0xf0406909:  pushl  -0xc(%ebp)

----------------
IN: karch_x86_spinlock_trylock
0xf040690c:  call   0xf04058ee

----------------
IN: 
0xf04058ee:  push   %ebp
0xf04058ef:  mov    %esp,%ebp
0xf04058f1:  push   %edi
0xf04058f2:  push   %edx
0xf04058f3:  mov    0xc(%ebp),%eax
0xf04058f6:  mov    0x8(%ebp),%edi
0xf04058f9:  mov    0x10(%ebp),%edx
0xf04058fc:  cmpxchg %edx,(%edi)
0xf04058ff:  pop    %edx
0xf0405900:  pop    %edi
0xf0405901:  mov    %ebp,%esp
0xf0405903:  pop    %ebp
0xf0405904:  ret    

----------------
IN: karch_x86_spinlock_trylock
0xf0406911:  add    $0x10,%esp

----------------
IN: karch_x86_spinlock_trylock
0xf0406914:  test   %eax,%eax

----------------
IN: karch_x86_spinlock_trylock
0xf0406916:  jne    0xf040691f

----------------
IN: karch_x86_spinlock_trylock
0xf0406918:  mov    $0x0,%eax

----------------
IN: karch_x86_spinlock_trylock
0xf040691d:  jmp    0xf0406924

----------------
IN: karch_x86_spinlock_trylock
0xf0406924:  leave  

----------------
IN: karch_x86_spinlock_trylock
0xf0406925:  ret    

----------------
IN: karch_x86_spinlock_lock
0xf0406938:  add    $0x10,%esp

----------------
IN: karch_x86_spinlock_lock
0xf040693b:  test   %al,%al

----------------
IN: karch_x86_spinlock_lock
0xf040693d:  je     0xf040692d

----------------
IN: karch_x86_spinlock_trylock
0xf040691f:  mov    $0x1,%eax

----------------
IN: karch_x86_spinlock_lock
0xf040693f:  nop    

----------------
IN: karch_x86_spinlock_lock
0xf0406940:  nop    

----------------
IN: karch_x86_spinlock_lock
0xf0406941:  leave  

----------------
IN: karch_x86_spinlock_lock
0xf0406942:  ret    

----------------
IN: karch_lapic_calibrate_clocks
0xf0407a0c:  add    $0x10,%esp
0xf0407a0f:  mov    0xf0420684,%eax
0xf0407a14:  add    $0x380,%eax
0xf0407a19:  sub    $0x8,%esp
0xf0407a1c:  pushl  -0xc(%ebp)
0xf0407a1f:  push   %eax
0xf0407a20:  call   0xf040766b

----------------
IN: karch_lapic_calibrate_clocks
0xf0407a25:  add    $0x10,%esp
0xf0407a28:  movl   $0x0,-0xc(%ebp)
0xf0407a2f:  mov    0xf0420684,%eax
0xf0407a34:  add    $0x390,%eax
0xf0407a39:  sub    $0x8,%esp
0xf0407a3c:  pushl  -0xc(%ebp)
0xf0407a3f:  push   %eax
0xf0407a40:  call   0xf040766b

----------------
IN: karch_lapic_calibrate_clocks
0xf0407a45:  add    $0x10,%esp
0xf0407a48:  mov    0xf0420684,%eax
0xf0407a4d:  add    $0x3e0,%eax
0xf0407a52:  sub    $0xc,%esp
0xf0407a55:  push   %eax
0xf0407a56:  call   0xf0407661

----------------
IN: karch_lapic_calibrate_clocks
0xf0407a5b:  add    $0x10,%esp
0xf0407a5e:  and    $0xfffffff4,%eax
0xf0407a61:  mov    %eax,-0x14(%ebp)
0xf0407a64:  movl   $0xb,-0x14(%ebp)
0xf0407a6b:  mov    0xf0420684,%eax
0xf0407a70:  add    $0x3e0,%eax
0xf0407a75:  sub    $0x8,%esp
0xf0407a78:  pushl  -0x14(%ebp)
0xf0407a7b:  push   %eax
0xf0407a7c:  call   0xf040766b

----------------
IN: karch_lapic_calibrate_clocks
0xf0407a81:  add    $0x10,%esp
0xf0407a84:  mov    0xf0420684,%eax
0xf0407a89:  add    $0x320,%eax
0xf0407a8e:  sub    $0xc,%esp
0xf0407a91:  push   %eax
0xf0407a92:  call   0xf0407661

----------------
IN: karch_lapic_calibrate_clocks
0xf0407a97:  add    $0x10,%esp
0xf0407a9a:  mov    %eax,-0x14(%ebp)
0xf0407a9d:  orl    $0x10000,-0x14(%ebp)
0xf0407aa4:  mov    0xf0420684,%eax
0xf0407aa9:  add    $0x320,%eax
0xf0407aae:  sub    $0x8,%esp
0xf0407ab1:  pushl  -0x14(%ebp)
0xf0407ab4:  push   %eax
0xf0407ab5:  call   0xf040766b

----------------
IN: karch_lapic_calibrate_clocks
0xf0407aba:  add    $0x10,%esp
0xf0407abd:  sub    $0x4,%esp
0xf0407ac0:  lea    -0x34(%ebp),%eax
0xf0407ac3:  push   %eax
0xf0407ac4:  lea    -0x2c(%ebp),%eax
0xf0407ac7:  push   %eax
0xf0407ac8:  push   $0x0
0xf0407aca:  call   0xf040659d

----------------
IN: karch_get_hwint_i8259
0xf040659d:  push   %ebp

----------------
IN: karch_get_hwint_i8259
0xf040659e:  mov    %esp,%ebp

----------------
IN: karch_get_hwint_i8259
0xf04065a0:  sub    $0x4,%esp

----------------
IN: karch_get_hwint_i8259
0xf04065a3:  mov    0x8(%ebp),%eax

----------------
IN: karch_get_hwint_i8259
0xf04065a6:  mov    %al,-0x4(%ebp)

----------------
IN: karch_get_hwint_i8259
0xf04065a9:  cmpb   $0xf,-0x4(%ebp)

----------------
IN: karch_get_hwint_i8259
0xf04065ad:  jbe    0xf04065b6

----------------
IN: karch_get_hwint_i8259
0xf04065b6:  cmpl   $0x0,0xc(%ebp)

----------------
IN: karch_get_hwint_i8259
0xf04065ba:  je     0xf04065cc

----------------
IN: karch_get_hwint_i8259
0xf04065bc:  movzbl -0x4(%ebp),%eax

----------------
IN: karch_get_hwint_i8259
0xf04065c0:  mov    -0xfbe0a40(,%eax,4),%edx

----------------
IN: karch_get_hwint_i8259
0xf04065c7:  mov    0xc(%ebp),%eax

----------------
IN: karch_get_hwint_i8259
0xf04065ca:  mov    %edx,(%eax)

----------------
IN: karch_get_hwint_i8259
0xf04065cc:  cmpl   $0x0,0x10(%ebp)

----------------
IN: karch_get_hwint_i8259
0xf04065d0:  je     0xf04065e2

----------------
IN: karch_get_hwint_i8259
0xf04065d2:  movzbl -0x4(%ebp),%eax

----------------
IN: karch_get_hwint_i8259
0xf04065d6:  mov    -0xfbe0a00(,%eax,4),%edx

----------------
IN: karch_get_hwint_i8259
0xf04065dd:  mov    0x10(%ebp),%eax

----------------
IN: karch_get_hwint_i8259
0xf04065e0:  mov    %edx,(%eax)

----------------
IN: karch_get_hwint_i8259
0xf04065e2:  mov    $0x1,%eax

----------------
IN: karch_get_hwint_i8259
0xf04065e7:  leave  

----------------
IN: karch_get_hwint_i8259
0xf04065e8:  ret    

----------------
IN: karch_lapic_calibrate_clocks
0xf0407acf:  add    $0x10,%esp
0xf0407ad2:  sub    $0x4,%esp
0xf0407ad5:  lea    -0x38(%ebp),%eax
0xf0407ad8:  push   %eax
0xf0407ad9:  lea    -0x30(%ebp),%eax
0xf0407adc:  push   %eax
0xf0407add:  push   $0x7
0xf0407adf:  call   0xf040659d

----------------
IN: karch_lapic_calibrate_clocks
0xf0407ae4:  add    $0x10,%esp
0xf0407ae7:  sub    $0x4,%esp
0xf0407aea:  push   $0x0
0xf0407aec:  push   $0xf0407c60
0xf0407af1:  push   $0x0
0xf0407af3:  call   0xf04065e9

----------------
IN: karch_set_hwint_i8259
0xf04065e9:  push   %ebp

----------------
IN: karch_set_hwint_i8259
0xf04065ea:  mov    %esp,%ebp

----------------
IN: karch_set_hwint_i8259
0xf04065ec:  sub    $0x4,%esp

----------------
IN: karch_set_hwint_i8259
0xf04065ef:  mov    0x8(%ebp),%eax

----------------
IN: karch_set_hwint_i8259
0xf04065f2:  mov    %al,-0x4(%ebp)

----------------
IN: karch_set_hwint_i8259
0xf04065f5:  cmpb   $0xf,-0x4(%ebp)

----------------
IN: karch_set_hwint_i8259
0xf04065f9:  jbe    0xf0406602

----------------
IN: karch_set_hwint_i8259
0xf0406602:  movzbl -0x4(%ebp),%eax

----------------
IN: karch_set_hwint_i8259
0xf0406606:  mov    0xc(%ebp),%edx

----------------
IN: karch_set_hwint_i8259
0xf0406609:  mov    %edx,-0xfbe0a40(,%eax,4)

----------------
IN: karch_set_hwint_i8259
0xf0406610:  movzbl -0x4(%ebp),%eax

----------------
IN: karch_set_hwint_i8259
0xf0406614:  mov    0x10(%ebp),%edx

----------------
IN: karch_set_hwint_i8259
0xf0406617:  mov    %edx,-0xfbe0a00(,%eax,4)

----------------
IN: karch_set_hwint_i8259
0xf040661e:  mov    $0x1,%eax

----------------
IN: karch_set_hwint_i8259
0xf0406623:  leave  

----------------
IN: karch_set_hwint_i8259
0xf0406624:  ret    

----------------
IN: karch_lapic_calibrate_clocks
0xf0407af8:  add    $0x10,%esp
0xf0407afb:  sub    $0x4,%esp
0xf0407afe:  push   $0x0
0xf0407b00:  push   $0xf0407c60
0xf0407b05:  push   $0x7
0xf0407b07:  call   0xf04065e9

----------------
IN: karch_lapic_calibrate_clocks
0xf0407b0c:  add    $0x10,%esp
0xf0407b0f:  sub    $0xc,%esp
0xf0407b12:  push   $0x3e8
0xf0407b17:  call   0xf0405f5b

----------------
IN: karch_init_i8253
0xf0405f5b:  push   %ebp
0xf0405f5c:  mov    %esp,%ebp
0xf0405f5e:  sub    $0x8,%esp
0xf0405f61:  sub    $0x8,%esp
0xf0405f64:  push   $0x36
0xf0405f66:  push   $0x43
0xf0405f68:  call   0xf04058bc

----------------
IN: karch_init_i8253
0xf0405f6d:  add    $0x10,%esp
0xf0405f70:  cmpl   $0x0,0x8(%ebp)
0xf0405f74:  jne    0xf0405f96

----------------
IN: karch_init_i8253
0xf0405f96:  mov    $0x1234de,%eax
0xf0405f9b:  mov    $0x0,%edx
0xf0405fa0:  divl   0x8(%ebp)
0xf0405fa3:  mov    %eax,0x8(%ebp)
0xf0405fa6:  mov    0x8(%ebp),%eax
0xf0405fa9:  movzbl %al,%eax
0xf0405fac:  sub    $0x8,%esp
0xf0405faf:  push   %eax
0xf0405fb0:  push   $0x40
0xf0405fb2:  call   0xf04058bc

----------------
IN: karch_init_i8253
0xf0405fb7:  add    $0x10,%esp
0xf0405fba:  mov    0x8(%ebp),%eax
0xf0405fbd:  shr    $0x8,%eax
0xf0405fc0:  movzbl %al,%eax
0xf0405fc3:  sub    $0x8,%esp
0xf0405fc6:  push   %eax
0xf0405fc7:  push   $0x40
0xf0405fc9:  call   0xf04058bc

----------------
IN: karch_init_i8253
0xf0405fce:  add    $0x10,%esp
0xf0405fd1:  leave  
0xf0405fd2:  ret    

----------------
IN: karch_lapic_calibrate_clocks
0xf0407b1c:  add    $0x10,%esp
0xf0407b1f:  sub    $0xc,%esp
0xf0407b22:  push   $0x0
0xf0407b24:  call   0xf040641c

----------------
IN: karch_unmask_i8259
0xf040641c:  push   %ebp

----------------
IN: karch_unmask_i8259
0xf040641d:  mov    %esp,%ebp

----------------
IN: karch_unmask_i8259
0xf040641f:  push   %ebx

----------------
IN: karch_unmask_i8259
0xf0406420:  sub    $0x24,%esp

----------------
IN: karch_unmask_i8259
0xf0406423:  mov    0x8(%ebp),%eax

----------------
IN: karch_unmask_i8259
0xf0406426:  mov    %al,-0x1c(%ebp)

----------------
IN: karch_unmask_i8259
0xf0406429:  cmpb   $0x7,-0x1c(%ebp)

----------------
IN: karch_unmask_i8259
0xf040642d:  ja     0xf0406436

----------------
IN: karch_unmask_i8259
0xf040642f:  mov    $0x21,%eax

----------------
IN: karch_unmask_i8259
0xf0406434:  jmp    0xf040643b

----------------
IN: karch_unmask_i8259
0xf040643b:  mov    %al,-0x9(%ebp)

----------------
IN: karch_unmask_i8259
0xf040643e:  movzbl -0x9(%ebp),%eax

----------------
IN: karch_unmask_i8259
0xf0406442:  sub    $0xc,%esp

----------------
IN: karch_unmask_i8259
0xf0406445:  push   %eax

----------------
IN: karch_unmask_i8259
0xf0406446:  call   0xf0405885

----------------
IN: 
0xf0405885:  push   %ebp
0xf0405886:  mov    %esp,%ebp
0xf0405888:  push   %edx
0xf0405889:  mov    0x8(%ebp),%edx
0xf040588c:  mov    $0x0,%eax
0xf0405891:  in     (%dx),%al
0xf0405892:  pop    %edx
0xf0405893:  mov    %ebp,%esp
0xf0405895:  pop    %ebp
0xf0405896:  ret    

----------------
IN: karch_unmask_i8259
0xf040644b:  add    $0x10,%esp

----------------
IN: karch_unmask_i8259
0xf040644e:  mov    %al,-0xa(%ebp)

----------------
IN: karch_unmask_i8259
0xf0406451:  movzbl -0xa(%ebp),%eax

----------------
IN: karch_unmask_i8259
0xf0406455:  movzbl -0x1c(%ebp),%edx

----------------
IN: karch_unmask_i8259
0xf0406459:  and    $0x7,%edx

----------------
IN: karch_unmask_i8259
0xf040645c:  mov    $0x1,%ebx

----------------
IN: karch_unmask_i8259
0xf0406461:  mov    %edx,%ecx

----------------
IN: karch_unmask_i8259
0xf0406463:  shl    %cl,%ebx

----------------
IN: karch_unmask_i8259
0xf0406465:  mov    %ebx,%edx

----------------
IN: karch_unmask_i8259
0xf0406467:  not    %edx

----------------
IN: karch_unmask_i8259
0xf0406469:  and    %edx,%eax

----------------
IN: karch_unmask_i8259
0xf040646b:  mov    %eax,%edx

----------------
IN: karch_unmask_i8259
0xf040646d:  movzbl -0x9(%ebp),%eax

----------------
IN: karch_unmask_i8259
0xf0406471:  sub    $0x8,%esp

----------------
IN: karch_unmask_i8259
0xf0406474:  push   %edx

----------------
IN: karch_unmask_i8259
0xf0406475:  push   %eax

----------------
IN: karch_unmask_i8259
0xf0406476:  call   0xf04058bc

----------------
IN: karch_unmask_i8259
0xf040647b:  add    $0x10,%esp

----------------
IN: karch_unmask_i8259
0xf040647e:  cmpb   $0x7,-0x1c(%ebp)

----------------
IN: karch_unmask_i8259
0xf0406482:  jbe    0xf0406497

----------------
IN: karch_unmask_i8259
0xf0406497:  nop    

----------------
IN: karch_unmask_i8259
0xf0406498:  mov    -0x4(%ebp),%ebx

----------------
IN: karch_unmask_i8259
0xf040649b:  leave  

----------------
IN: karch_unmask_i8259
0xf040649c:  ret    

----------------
IN: karch_lapic_calibrate_clocks
0xf0407b29:  add    $0x10,%esp
0xf0407b2c:  movl   $0x0,0xf0420698
0xf0407b36:  call   0xf0405880

----------------
IN: 
0xf0405880:  sti    

----------------
IN: 
0xf0405881:  ret    

Servicing hardware INT=0x50
----------------
IN: 
0xf0405ff0:  push   %ebp
0xf0405ff1:  push   %ebx
0xf0405ff2:  push   %eax
0xf0405ff3:  mov    %esp,%ebp
0xf0405ff5:  cmpl   $0x8,0x10(%ebp)
0xf0405ff9:  je     0xf0406018

----------------
IN: 
0xf0406018:  mov    $0x1,%ebx

----------------
IN: 
0xf040601d:  jmp    0xf0406000

----------------
IN: 
0xf0406000:  mov    %ebp,%eax

----------------
IN: 
0xf0406002:  sub    $0xc,%eax

----------------
IN: 
0xf0406005:  push   %eax

----------------
IN: 
0xf0406006:  push   %ebx

----------------
IN: 
0xf0406007:  mov    $0x0,%eax

----------------
IN: 
0xf040600c:  push   %eax

----------------
IN: 
0xf040600d:  call   0xf0406625

----------------
IN: karch_i8259_hwint
0xf0406625:  push   %ebp

----------------
IN: karch_i8259_hwint
0xf0406626:  mov    %esp,%ebp

----------------
IN: karch_i8259_hwint
0xf0406628:  sub    $0x18,%esp

----------------
IN: karch_i8259_hwint
0xf040662b:  mov    0x8(%ebp),%eax

----------------
IN: karch_i8259_hwint
0xf040662e:  mov    -0xfbe0a40(,%eax,4),%eax

----------------
IN: karch_i8259_hwint
0xf0406635:  test   %eax,%eax

----------------
IN: karch_i8259_hwint
0xf0406637:  je     0xf040666e

----------------
IN: karch_i8259_hwint
0xf0406639:  mov    0x8(%ebp),%eax

----------------
IN: karch_i8259_hwint
0xf040663c:  mov    %eax,-0x18(%ebp)

----------------
IN: karch_i8259_hwint
0xf040663f:  mov    0xc(%ebp),%eax

----------------
IN: karch_i8259_hwint
0xf0406642:  mov    %eax,-0x14(%ebp)

----------------
IN: karch_i8259_hwint
0xf0406645:  mov    0x10(%ebp),%eax

----------------
IN: karch_i8259_hwint
0xf0406648:  mov    %eax,-0x10(%ebp)

----------------
IN: karch_i8259_hwint
0xf040664b:  mov    0x8(%ebp),%eax

----------------
IN: karch_i8259_hwint
0xf040664e:  mov    -0xfbe0a00(,%eax,4),%eax

----------------
IN: karch_i8259_hwint
0xf0406655:  mov    %eax,-0xc(%ebp)

----------------
IN: karch_i8259_hwint
0xf0406658:  mov    0x8(%ebp),%eax

----------------
IN: karch_i8259_hwint
0xf040665b:  mov    -0xfbe0a40(,%eax,4),%eax

----------------
IN: karch_i8259_hwint
0xf0406662:  sub    $0xc,%esp

----------------
IN: karch_i8259_hwint
0xf0406665:  lea    -0x18(%ebp),%edx

----------------
IN: karch_i8259_hwint
0xf0406668:  push   %edx

----------------
IN: karch_i8259_hwint
0xf0406669:  call   *%eax

----------------
IN: karch_lapic_i8259_handler
0xf0407c60:  push   %ebp
0xf0407c61:  mov    %esp,%ebp
0xf0407c63:  sub    $0x18,%esp
0xf0407c66:  mov    0x8(%ebp),%eax
0xf0407c69:  mov    (%eax),%eax
0xf0407c6b:  test   %eax,%eax
0xf0407c6d:  jne    0xf0407ce7

----------------
IN: karch_lapic_i8259_handler
0xf0407c6f:  mov    0xf0420698,%eax
0xf0407c74:  add    $0x1,%eax
0xf0407c77:  mov    %eax,0xf0420698
0xf0407c7c:  sub    $0xc,%esp
0xf0407c7f:  lea    -0x18(%ebp),%eax
0xf0407c82:  push   %eax
0xf0407c83:  call   0xf0407988

----------------
IN: karch_lapic_read_tsc64
0xf0407988:  push   %ebp
0xf0407989:  mov    %esp,%ebp
0xf040798b:  push   %ebx
0xf040798c:  sub    $0x14,%esp
0xf040798f:  sub    $0x8,%esp
0xf0407992:  lea    -0xc(%ebp),%eax
0xf0407995:  push   %eax
0xf0407996:  lea    -0x10(%ebp),%eax
0xf0407999:  push   %eax
0xf040799a:  call   0xf0405905

----------------
IN: 
0xf0405905:  push   %edx
0xf0405906:  push   %eax
0xf0405907:  rdtsc  
0xf0405909:  push   %ebp
0xf040590a:  mov    0x10(%esp),%ebp
0xf040590e:  mov    %edx,0x0(%ebp)
0xf0405911:  mov    0x14(%esp),%ebp
0xf0405915:  mov    %eax,0x0(%ebp)
0xf0405918:  pop    %ebp
0xf0405919:  pop    %eax
0xf040591a:  pop    %edx
0xf040591b:  ret    

----------------
IN: karch_lapic_read_tsc64
0xf040799f:  add    $0x10,%esp
0xf04079a2:  cmpl   $0x0,0x8(%ebp)
0xf04079a6:  je     0xf04079c8

----------------
IN: karch_lapic_read_tsc64
0xf04079a8:  mov    -0x10(%ebp),%eax
0xf04079ab:  mov    $0x0,%edx
0xf04079b0:  mov    %eax,%edx
0xf04079b2:  xor    %eax,%eax
0xf04079b4:  mov    -0xc(%ebp),%ecx
0xf04079b7:  mov    $0x0,%ebx
0xf04079bc:  or     %ecx,%eax
0xf04079be:  or     %ebx,%edx
0xf04079c0:  mov    0x8(%ebp),%ecx
0xf04079c3:  mov    %eax,(%ecx)
0xf04079c5:  mov    %edx,0x4(%ecx)
0xf04079c8:  nop    
0xf04079c9:  mov    -0x4(%ebp),%ebx
0xf04079cc:  leave  
0xf04079cd:  ret    

----------------
IN: karch_lapic_i8259_handler
0xf0407c88:  add    $0x10,%esp
0xf0407c8b:  mov    0xf0420684,%eax
0xf0407c90:  add    $0x390,%eax
0xf0407c95:  sub    $0xc,%esp
0xf0407c98:  push   %eax
0xf0407c99:  call   0xf0407661

----------------
IN: karch_lapic_i8259_handler
0xf0407c9e:  add    $0x10,%esp
0xf0407ca1:  mov    %eax,-0xc(%ebp)
0xf0407ca4:  mov    0xf0420698,%eax
0xf0407ca9:  cmp    $0x63,%eax
0xf0407cac:  ja     0xf0407cc9

----------------
IN: karch_lapic_i8259_handler
0xf0407cae:  mov    -0xc(%ebp),%eax
0xf0407cb1:  mov    %eax,0xf042069c
0xf0407cb6:  mov    -0x18(%ebp),%eax
0xf0407cb9:  mov    -0x14(%ebp),%edx
0xf0407cbc:  mov    %eax,0xf04206a8
0xf0407cc1:  mov    %edx,0xf04206ac
0xf0407cc7:  jmp    0xf0407ce7

----------------
IN: karch_lapic_i8259_handler
0xf0407ce7:  nop    
0xf0407ce8:  leave  
0xf0407ce9:  ret    

----------------
IN: karch_i8259_hwint
0xf040666b:  add    $0x10,%esp

----------------
IN: karch_i8259_hwint
0xf040666e:  sub    $0xc,%esp

----------------
IN: karch_i8259_hwint
0xf0406671:  pushl  0x8(%ebp)

----------------
IN: karch_i8259_hwint
0xf0406674:  call   0xf040655c

----------------
IN: karch_i8259_eoi
0xf040655c:  push   %ebp

----------------
IN: karch_i8259_eoi
0xf040655d:  mov    %esp,%ebp

----------------
IN: karch_i8259_eoi
0xf040655f:  sub    $0x8,%esp

----------------
IN: karch_i8259_eoi
0xf0406562:  cmpl   $0x7,0x8(%ebp)

----------------
IN: karch_i8259_eoi
0xf0406566:  ja     0xf0406579

----------------
IN: karch_i8259_eoi
0xf0406568:  sub    $0x8,%esp

----------------
IN: karch_i8259_eoi
0xf040656b:  push   $0x20

----------------
IN: karch_i8259_eoi
0xf040656d:  push   $0x20

----------------
IN: karch_i8259_eoi
0xf040656f:  call   0xf04058bc

----------------
IN: karch_i8259_eoi
0xf0406574:  add    $0x10,%esp

----------------
IN: karch_i8259_eoi
0xf0406577:  jmp    0xf040659a

----------------
IN: karch_i8259_eoi
0xf040659a:  nop    

----------------
IN: karch_i8259_eoi
0xf040659b:  leave  

----------------
IN: karch_i8259_eoi
0xf040659c:  ret    

----------------
IN: karch_i8259_hwint
0xf0406679:  add    $0x10,%esp

----------------
IN: karch_i8259_hwint
0xf040667c:  nop    

----------------
IN: karch_i8259_hwint
0xf040667d:  leave  

----------------
IN: karch_i8259_hwint
0xf040667e:  ret    

----------------
IN: 
0xf0406012:  mov    %ebp,%esp

----------------
IN: 
0xf0406014:  pop    %eax

----------------
IN: 
0xf0406015:  pop    %ebx

----------------
IN: 
0xf0406016:  pop    %ebp

----------------
IN: 
0xf0406017:  iret   

Servicing hardware INT=0x50
----------------
IN: karch_lapic_calibrate_clocks
0xf0407b3b:  jmp    0xf0407b42

----------------
IN: karch_lapic_calibrate_clocks
0xf0407b42:  mov    0xf0420698,%eax
0xf0407b47:  cmp    $0x63,%eax
0xf0407b4a:  jbe    0xf0407b3d

----------------
IN: karch_lapic_calibrate_clocks
0xf0407b3d:  call   0xf0405880

Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
Servicing hardware INT=0x50
----------------
IN: karch_lapic_i8259_handler
0xf0407cc9:  mov    -0xc(%ebp),%eax
0xf0407ccc:  mov    %eax,0xf04206a0
0xf0407cd1:  mov    -0x18(%ebp),%eax
0xf0407cd4:  mov    -0x14(%ebp),%edx
0xf0407cd7:  mov    %eax,0xf04206b0
0xf0407cdc:  mov    %edx,0xf04206b4
0xf0407ce2:  call   0xf0405fd3

----------------
IN: karch_deinit_i8253
0xf0405fd3:  push   %ebp
0xf0405fd4:  mov    %esp,%ebp
0xf0405fd6:  sub    $0x8,%esp
0xf0405fd9:  sub    $0xc,%esp
0xf0405fdc:  push   $0x0
0xf0405fde:  call   0xf0405f5b

----------------
IN: karch_init_i8253
0xf0405f76:  sub    $0x8,%esp
0xf0405f79:  push   $0x0
0xf0405f7b:  push   $0x40
0xf0405f7d:  call   0xf04058bc

----------------
IN: karch_init_i8253
0xf0405f82:  add    $0x10,%esp
0xf0405f85:  sub    $0x8,%esp
0xf0405f88:  push   $0x0
0xf0405f8a:  push   $0x40
0xf0405f8c:  call   0xf04058bc

----------------
IN: karch_init_i8253
0xf0405f91:  add    $0x10,%esp
0xf0405f94:  jmp    0xf0405fd1

----------------
IN: karch_init_i8253
0xf0405fd1:  leave  
0xf0405fd2:  ret    

----------------
IN: karch_deinit_i8253
0xf0405fe3:  add    $0x10,%esp
0xf0405fe6:  nop    
0xf0405fe7:  leave  
0xf0405fe8:  ret    

Servicing hardware INT=0x50
----------------
IN: karch_lapic_calibrate_clocks
0xf0407b4c:  call   0xf040587e

----------------
IN: 
0xf040587e:  cli    
0xf040587f:  ret    

----------------
IN: karch_lapic_calibrate_clocks
0xf0407b51:  mov    -0x34(%ebp),%edx
0xf0407b54:  mov    -0x2c(%ebp),%eax
0xf0407b57:  sub    $0x4,%esp
0xf0407b5a:  push   %edx
0xf0407b5b:  push   %eax
0xf0407b5c:  push   $0x0
0xf0407b5e:  call   0xf04065e9

----------------
IN: karch_lapic_calibrate_clocks
0xf0407b63:  add    $0x10,%esp
0xf0407b66:  mov    -0x38(%ebp),%edx
0xf0407b69:  mov    -0x30(%ebp),%eax
0xf0407b6c:  sub    $0x4,%esp
0xf0407b6f:  push   %edx
0xf0407b70:  push   %eax
0xf0407b71:  push   $0x7
0xf0407b73:  call   0xf04065e9

----------------
IN: karch_lapic_calibrate_clocks
0xf0407b78:  add    $0x10,%esp
0xf0407b7b:  sub    $0xc,%esp
0xf0407b7e:  push   $0x0
0xf0407b80:  call   0xf040649d

----------------
IN: karch_mask_i8259
0xf040649d:  push   %ebp

----------------
IN: karch_mask_i8259
0xf040649e:  mov    %esp,%ebp

----------------
IN: karch_mask_i8259
0xf04064a0:  sub    $0x28,%esp

----------------
IN: karch_mask_i8259
0xf04064a3:  mov    0x8(%ebp),%eax

----------------
IN: karch_mask_i8259
0xf04064a6:  mov    %al,-0x1c(%ebp)

----------------
IN: karch_mask_i8259
0xf04064a9:  cmpb   $0x7,-0x1c(%ebp)

----------------
IN: karch_mask_i8259
0xf04064ad:  ja     0xf04064b6

----------------
IN: karch_mask_i8259
0xf04064af:  mov    $0x21,%eax

----------------
IN: karch_mask_i8259
0xf04064b4:  jmp    0xf04064bb

----------------
IN: karch_mask_i8259
0xf04064bb:  mov    %al,-0x9(%ebp)

----------------
IN: karch_mask_i8259
0xf04064be:  movzbl -0x9(%ebp),%eax

----------------
IN: karch_mask_i8259
0xf04064c2:  sub    $0xc,%esp

----------------
IN: karch_mask_i8259
0xf04064c5:  push   %eax

----------------
IN: karch_mask_i8259
0xf04064c6:  call   0xf0405885

----------------
IN: karch_mask_i8259
0xf04064cb:  add    $0x10,%esp

----------------
IN: karch_mask_i8259
0xf04064ce:  mov    %al,-0xa(%ebp)

----------------
IN: karch_mask_i8259
0xf04064d1:  movzbl -0x1c(%ebp),%eax

----------------
IN: karch_mask_i8259
0xf04064d5:  and    $0x7,%eax

----------------
IN: karch_mask_i8259
0xf04064d8:  mov    $0x1,%edx

----------------
IN: karch_mask_i8259
0xf04064dd:  mov    %eax,%ecx

----------------
IN: karch_mask_i8259
0xf04064df:  shl    %cl,%edx

----------------
IN: karch_mask_i8259
0xf04064e1:  mov    %edx,%eax

----------------
IN: karch_mask_i8259
0xf04064e3:  mov    %eax,%edx

----------------
IN: karch_mask_i8259
0xf04064e5:  movzbl -0xa(%ebp),%eax

----------------
IN: karch_mask_i8259
0xf04064e9:  or     %edx,%eax

----------------
IN: karch_mask_i8259
0xf04064eb:  mov    %al,-0xb(%ebp)

----------------
IN: karch_mask_i8259
0xf04064ee:  movzbl -0xb(%ebp),%edx

----------------
IN: karch_mask_i8259
0xf04064f2:  movzbl -0x9(%ebp),%eax

----------------
IN: karch_mask_i8259
0xf04064f6:  sub    $0x8,%esp

----------------
IN: karch_mask_i8259
0xf04064f9:  push   %edx

----------------
IN: karch_mask_i8259
0xf04064fa:  push   %eax

----------------
IN: karch_mask_i8259
0xf04064fb:  call   0xf04058bc

----------------
IN: karch_mask_i8259
0xf0406500:  add    $0x10,%esp

----------------
IN: karch_mask_i8259
0xf0406503:  cmpb   $0x7,-0x1c(%ebp)

----------------
IN: karch_mask_i8259
0xf0406507:  jbe    0xf040651c

----------------
IN: karch_mask_i8259
0xf040651c:  nop    

----------------
IN: karch_mask_i8259
0xf040651d:  leave  

----------------
IN: karch_mask_i8259
0xf040651e:  ret    

----------------
IN: karch_lapic_calibrate_clocks
0xf0407b85:  add    $0x10,%esp
0xf0407b88:  call   0xf0405fd3

----------------
IN: karch_lapic_calibrate_clocks
0xf0407b8d:  mov    0xf042069c,%edx
0xf0407b93:  mov    0xf04206a0,%eax
0xf0407b98:  sub    %eax,%edx
0xf0407b9a:  mov    %edx,-0x18(%ebp)
0xf0407b9d:  mov    0xf04206b0,%eax
0xf0407ba2:  mov    0xf04206b4,%edx
0xf0407ba8:  mov    0xf04206a8,%ecx
0xf0407bae:  mov    0xf04206ac,%ebx
0xf0407bb4:  sub    %ecx,%eax
0xf0407bb6:  sbb    %ebx,%edx
0xf0407bb8:  mov    %eax,-0x20(%ebp)
0xf0407bbb:  mov    %edx,-0x1c(%ebp)
0xf0407bbe:  sub    $0xc,%esp
0xf0407bc1:  push   $0xf04206b8
0xf0407bc6:  call   0xf0406943

----------------
IN: karch_x86_spinlock_unlock
0xf0406943:  push   %ebp

----------------
IN: karch_x86_spinlock_unlock
0xf0406944:  mov    %esp,%ebp

----------------
IN: karch_x86_spinlock_unlock
0xf0406946:  sub    $0x18,%esp

----------------
IN: karch_x86_spinlock_unlock
0xf0406949:  mov    0x8(%ebp),%eax

----------------
IN: karch_x86_spinlock_unlock
0xf040694c:  mov    %eax,-0xc(%ebp)

----------------
IN: karch_x86_spinlock_unlock
0xf040694f:  sub    $0x4,%esp

----------------
IN: karch_x86_spinlock_unlock
0xf0406952:  push   $0x0

----------------
IN: karch_x86_spinlock_unlock
0xf0406954:  push   $0x1

----------------
IN: karch_x86_spinlock_unlock
0xf0406956:  pushl  -0xc(%ebp)

----------------
IN: karch_x86_spinlock_unlock
0xf0406959:  call   0xf04058ee

----------------
IN: karch_x86_spinlock_unlock
0xf040695e:  add    $0x10,%esp

----------------
IN: karch_x86_spinlock_unlock
0xf0406961:  test   %eax,%eax

----------------
IN: karch_x86_spinlock_unlock
0xf0406963:  jne    0xf040696c

----------------
IN: karch_x86_spinlock_unlock
0xf040696c:  mov    $0x1,%eax

----------------
IN: karch_x86_spinlock_unlock
0xf0406971:  leave  

----------------
IN: karch_x86_spinlock_unlock
0xf0406972:  ret    

----------------
IN: karch_lapic_calibrate_clocks
0xf0407bcb:  add    $0x10,%esp
0xf0407bce:  mov    -0x20(%ebp),%eax
0xf0407bd1:  mov    -0x1c(%ebp),%edx
0xf0407bd4:  push   $0x0
0xf0407bd6:  push   $0x63
0xf0407bd8:  push   %edx
0xf0407bd9:  push   %eax
0xf0407bda:  call   0xf040a364

----------------
IN: __udivdi3
0xf040a364:  push   %ebp
0xf040a365:  mov    %esp,%ebp
0xf040a367:  sub    $0x10,%esp
0xf040a36a:  mov    0x8(%ebp),%eax
0xf040a36d:  mov    %eax,-0x8(%ebp)
0xf040a370:  mov    0xc(%ebp),%eax
0xf040a373:  mov    %eax,-0x4(%ebp)
0xf040a376:  mov    0x10(%ebp),%eax
0xf040a379:  mov    %eax,-0x10(%ebp)
0xf040a37c:  mov    0x14(%ebp),%eax
0xf040a37f:  mov    %eax,-0xc(%ebp)
0xf040a382:  sub    $0x4,%esp
0xf040a385:  push   $0x0
0xf040a387:  pushl  -0xc(%ebp)
0xf040a38a:  pushl  -0x10(%ebp)
0xf040a38d:  pushl  -0x4(%ebp)
0xf040a390:  pushl  -0x8(%ebp)
0xf040a393:  call   0xf0409cf3

----------------
IN: __divmoddi4
0xf0409cf3:  push   %ebp
0xf0409cf4:  mov    %esp,%ebp
0xf0409cf6:  push   %ebx
0xf0409cf7:  sub    $0x34,%esp
0xf0409cfa:  mov    0x8(%ebp),%eax
0xf0409cfd:  mov    %eax,-0x30(%ebp)
0xf0409d00:  mov    0xc(%ebp),%eax
0xf0409d03:  mov    %eax,-0x2c(%ebp)
0xf0409d06:  mov    0x10(%ebp),%eax
0xf0409d09:  mov    %eax,-0x38(%ebp)
0xf0409d0c:  mov    0x14(%ebp),%eax
0xf0409d0f:  mov    %eax,-0x34(%ebp)
0xf0409d12:  mov    -0x38(%ebp),%eax
0xf0409d15:  mov    -0x34(%ebp),%edx
0xf0409d18:  mov    -0x2c(%ebp),%ecx
0xf0409d1b:  cmp    %eax,-0x30(%ebp)
0xf0409d1e:  sbb    %edx,%ecx
0xf0409d20:  jae    0xf0409d45

----------------
IN: __divmoddi4
0xf0409d45:  mov    -0x38(%ebp),%ecx
0xf0409d48:  mov    -0x34(%ebp),%ebx
0xf0409d4b:  mov    %ebx,%eax
0xf0409d4d:  test   %eax,%eax
0xf0409d4f:  jne    0xf0409e07

----------------
IN: __divmoddi4
0xf0409d55:  mov    -0x38(%ebp),%eax
0xf0409d58:  or     -0x34(%ebp),%eax
0xf0409d5b:  jne    0xf0409d80

----------------
IN: __divmoddi4
0xf0409d80:  mov    -0x38(%ebp),%eax
0xf0409d83:  xor    $0x1,%eax
0xf0409d86:  or     -0x34(%ebp),%eax
0xf0409d89:  jne    0xf0409dac

----------------
IN: __divmoddi4
0xf0409dac:  mov    -0x30(%ebp),%ecx
0xf0409daf:  mov    -0x2c(%ebp),%ebx
0xf0409db2:  mov    %ebx,%eax
0xf0409db4:  test   %eax,%eax
0xf0409db6:  jne    0xf0409e07

----------------
IN: __divmoddi4
0xf0409db8:  cmpl   $0x0,0x18(%ebp)
0xf0409dbc:  je     0xf0409de6

----------------
IN: __divmoddi4
0xf0409de6:  mov    -0x30(%ebp),%ecx
0xf0409de9:  mov    -0x2c(%ebp),%ebx
0xf0409dec:  mov    %ecx,%eax
0xf0409dee:  mov    -0x38(%ebp),%ecx
0xf0409df1:  mov    -0x34(%ebp),%ebx
0xf0409df4:  mov    %ecx,%ebx
0xf0409df6:  mov    $0x0,%edx
0xf0409dfb:  div    %ebx
0xf0409dfd:  mov    $0x0,%edx
0xf0409e02:  jmp    0xf0409f53

----------------
IN: __divmoddi4
0xf0409f53:  mov    -0x4(%ebp),%ebx
0xf0409f56:  leave  
0xf0409f57:  ret    

----------------
IN: __udivdi3
0xf040a398:  add    $0x18,%esp
0xf040a39b:  leave  
0xf040a39c:  ret    

----------------
IN: karch_lapic_calibrate_clocks
0xf0407bdf:  add    $0x10,%esp
0xf0407be2:  mov    %eax,%ecx
0xf0407be4:  mov    %edx,%ebx
0xf0407be6:  mov    %ecx,%eax
0xf0407be8:  mov    %ebx,%edx
0xf0407bea:  shld   $0x5,%eax,%edx
0xf0407bee:  shl    $0x5,%eax
0xf0407bf1:  sub    %ecx,%eax
0xf0407bf3:  sbb    %ebx,%edx
0xf0407bf5:  shld   $0x2,%eax,%edx
0xf0407bf9:  shl    $0x2,%eax
0xf0407bfc:  add    %ecx,%eax
0xf0407bfe:  adc    %ebx,%edx
0xf0407c00:  shld   $0x3,%eax,%edx
0xf0407c04:  shl    $0x3,%eax
0xf0407c07:  mov    %eax,-0x28(%ebp)
0xf0407c0a:  mov    %edx,-0x24(%ebp)
0xf0407c0d:  mov    -0x18(%ebp),%eax
0xf0407c10:  imul   $0x3e8,%eax,%eax
0xf0407c16:  mov    $0xa57eb503,%edx
0xf0407c1b:  mul    %edx
0xf0407c1d:  shr    $0x6,%edx
0xf0407c20:  mov    -0x10(%ebp),%eax
0xf0407c23:  mov    %edx,0x7c(%eax)
0xf0407c26:  mov    -0x28(%ebp),%eax
0xf0407c29:  mov    -0x24(%ebp),%edx
0xf0407c2c:  push   $0x0
0xf0407c2e:  push   $0xf4240
0xf0407c33:  push   %edx
0xf0407c34:  push   %eax
0xf0407c35:  call   0xf040a364

----------------
IN: karch_lapic_calibrate_clocks
0xf0407c3a:  add    $0x10,%esp
0xf0407c3d:  mov    %eax,%edx
0xf0407c3f:  mov    -0x10(%ebp),%eax
0xf0407c42:  mov    %edx,0x78(%eax)
0xf0407c45:  mov    -0x10(%ebp),%eax
0xf0407c48:  movzwl 0x74(%eax),%eax
0xf0407c4c:  or     $0xc,%eax
0xf0407c4f:  mov    %eax,%edx
0xf0407c51:  mov    -0x10(%ebp),%eax
0xf0407c54:  mov    %dx,0x74(%eax)
0xf0407c58:  jmp    0xf0407c5b

----------------
IN: karch_lapic_calibrate_clocks
0xf0407c5b:  mov    -0x4(%ebp),%ebx
0xf0407c5e:  leave  
0xf0407c5f:  ret    

----------------
IN: karch_lapic_enable
0xf040797e:  add    $0x10,%esp
0xf0407981:  mov    $0x1,%eax
0xf0407986:  leave  
0xf0407987:  ret    

----------------
IN: karch_init_smp
0xf0409031:  add    $0x10,%esp
0xf0409034:  test   %al,%al
0xf0409036:  jne    0xf0409067

----------------
IN: karch_init_smp
0xf0409067:  movzbl -0xc(%ebp),%eax
0xf040906b:  sub    $0xc,%esp
0xf040906e:  push   %eax
0xf040906f:  call   0xf0405249

----------------
IN: karch_init_smp
0xf0409074:  add    $0x10,%esp
0xf0409077:  mov    %eax,-0x10(%ebp)
0xf040907a:  mov    -0x10(%ebp),%eax
0xf040907d:  movb   $0x1,0x80(%eax)
0xf0409084:  mov    -0x10(%ebp),%eax
0xf0409087:  movzwl 0x74(%eax),%eax
0xf040908b:  or     $0x20,%eax
0xf040908e:  mov    %eax,%edx
0xf0409090:  mov    -0x10(%ebp),%eax
0xf0409093:  mov    %dx,0x74(%eax)
0xf0409097:  movzbl -0xc(%ebp),%eax
0xf040909b:  sub    $0xc,%esp
0xf040909e:  push   %eax
0xf040909f:  call   0xf04090d4

----------------
IN: karch_smp_set_mode
0xf04090d4:  push   %ebp
0xf04090d5:  mov    %esp,%ebp
0xf04090d7:  sub    $0x28,%esp
0xf04090da:  mov    0x8(%ebp),%eax
0xf04090dd:  mov    %al,-0x1c(%ebp)
0xf04090e0:  call   0xf040523d

----------------
IN: karch_smp_set_mode
0xf04090e5:  mov    %al,-0xa(%ebp)
0xf04090e8:  movb   $0x0,-0x9(%ebp)
0xf04090ec:  jmp    0xf040912e

----------------
IN: karch_smp_set_mode
0xf040912e:  movzbl -0x9(%ebp),%eax
0xf0409132:  cmp    -0xa(%ebp),%al
0xf0409135:  jb     0xf04090ee

----------------
IN: karch_smp_set_mode
0xf04090ee:  movzbl -0x9(%ebp),%eax
0xf04090f2:  cmp    -0x1c(%ebp),%al
0xf04090f5:  je     0xf0409129

----------------
IN: karch_smp_set_mode
0xf0409129:  nop    
0xf040912a:  addb   $0x1,-0x9(%ebp)
0xf040912e:  movzbl -0x9(%ebp),%eax
0xf0409132:  cmp    -0xa(%ebp),%al
0xf0409135:  jb     0xf04090ee

----------------
IN: karch_smp_set_mode
0xf04090f7:  movzbl -0x9(%ebp),%eax
0xf04090fb:  sub    $0xc,%esp
0xf04090fe:  push   %eax
0xf04090ff:  call   0xf0405249

----------------
IN: karch_smp_set_mode
0xf0409104:  add    $0x10,%esp
0xf0409107:  mov    %eax,-0x10(%ebp)
0xf040910a:  mov    -0x10(%ebp),%eax
0xf040910d:  movb   $0x2,0x80(%eax)
0xf0409114:  mov    -0x10(%ebp),%eax
0xf0409117:  movzwl 0x74(%eax),%eax
0xf040911b:  or     $0x20,%eax
0xf040911e:  mov    %eax,%edx
0xf0409120:  mov    -0x10(%ebp),%eax
0xf0409123:  mov    %dx,0x74(%eax)
0xf0409127:  jmp    0xf040912a

----------------
IN: karch_smp_set_mode
0xf040912a:  addb   $0x1,-0x9(%ebp)
0xf040912e:  movzbl -0x9(%ebp),%eax
0xf0409132:  cmp    -0xa(%ebp),%al
0xf0409135:  jb     0xf04090ee

----------------
IN: karch_smp_set_mode
0xf0409137:  nop    
0xf0409138:  nop    
0xf0409139:  leave  
0xf040913a:  ret    

----------------
IN: karch_init_smp
0xf04090a4:  add    $0x10,%esp
0xf04090a7:  call   0xf040667f

----------------
IN: karch_i8259_imcr_disable
0xf040667f:  push   %ebp

----------------
IN: karch_i8259_imcr_disable
0xf0406680:  mov    %esp,%ebp

----------------
IN: karch_i8259_imcr_disable
0xf0406682:  sub    $0x8,%esp

----------------
IN: karch_i8259_imcr_disable
0xf0406685:  call   0xf040651f

----------------
IN: karch_disable_i8259
0xf040651f:  push   %ebp

----------------
IN: karch_disable_i8259
0xf0406520:  mov    %esp,%ebp

----------------
IN: karch_disable_i8259
0xf0406522:  sub    $0x8,%esp

----------------
IN: karch_disable_i8259
0xf0406525:  sub    $0x8,%esp

----------------
IN: karch_disable_i8259
0xf0406528:  push   $0xff

----------------
IN: karch_disable_i8259
0xf040652d:  push   $0xa1

----------------
IN: karch_disable_i8259
0xf0406532:  call   0xf04058bc

----------------
IN: karch_disable_i8259
0xf0406537:  add    $0x10,%esp

----------------
IN: karch_disable_i8259
0xf040653a:  sub    $0x8,%esp

----------------
IN: karch_disable_i8259
0xf040653d:  push   $0xff

----------------
IN: karch_disable_i8259
0xf0406542:  push   $0x21

----------------
IN: karch_disable_i8259
0xf0406544:  call   0xf04058bc

----------------
IN: karch_disable_i8259
0xf0406549:  add    $0x10,%esp

----------------
IN: karch_disable_i8259
0xf040654c:  sub    $0xc,%esp

----------------
IN: karch_disable_i8259
0xf040654f:  push   $0x21

----------------
IN: karch_disable_i8259
0xf0406551:  call   0xf0405885

----------------
IN: karch_disable_i8259
0xf0406556:  add    $0x10,%esp

----------------
IN: karch_disable_i8259
0xf0406559:  nop    

----------------
IN: karch_disable_i8259
0xf040655a:  leave  

----------------
IN: karch_disable_i8259
0xf040655b:  ret    

----------------
IN: karch_i8259_imcr_disable
0xf040668a:  nop    

----------------
IN: karch_i8259_imcr_disable
0xf040668b:  leave  

----------------
IN: karch_i8259_imcr_disable
0xf040668c:  ret    

----------------
IN: karch_init_smp
0xf04090ac:  call   0xf0408c0b

----------------
IN: karch_init_apic_idt
0xf0408c0b:  push   %ebp
0xf0408c0c:  mov    %esp,%ebp
0xf0408c0e:  sub    $0x18,%esp
0xf0408c11:  call   0xf0405327

----------------
IN: karch_is_bsp_cpu_current
0xf0405327:  push   %ebp
0xf0405328:  mov    %esp,%ebp
0xf040532a:  sub    $0x18,%esp
0xf040532d:  movzbl 0xf041eb2c,%eax
0xf0405334:  test   %al,%al
0xf0405336:  jne    0xf0405341

----------------
IN: karch_is_bsp_cpu_current
0xf0405338:  call   0xf04091c2

----------------
IN: karch_smp_supported
0xf04091c2:  push   %ebp
0xf04091c3:  mov    %esp,%ebp
0xf04091c5:  movzbl 0xf04206c4,%eax
0xf04091cc:  pop    %ebp
0xf04091cd:  ret    

----------------
IN: karch_is_bsp_cpu_current
0xf040533d:  test   %eax,%eax
0xf040533f:  jne    0xf0405348

----------------
IN: karch_is_bsp_cpu_current
0xf0405348:  call   0xf04091f7

----------------
IN: karch_smp_cpuid_current
0xf04091f7:  push   %ebp
0xf04091f8:  mov    %esp,%ebp
0xf04091fa:  sub    $0x8,%esp
0xf04091fd:  call   0xf040523d

----------------
IN: karch_smp_cpuid_current
0xf0409202:  cmp    $0x1,%al
0xf0409204:  ja     0xf040920d

----------------
IN: karch_smp_cpuid_current
0xf040920d:  call   0xf0407594

----------------
IN: karch_smp_cpuid_current
0xf0409212:  movzbl %al,%eax
0xf0409215:  sub    $0xc,%esp
0xf0409218:  push   %eax
0xf0409219:  call   0xf04091ce

----------------
IN: karch_smp_cpuid
0xf04091ce:  push   %ebp
0xf04091cf:  mov    %esp,%ebp
0xf04091d1:  sub    $0x18,%esp
0xf04091d4:  mov    0x8(%ebp),%eax
0xf04091d7:  mov    %al,-0xc(%ebp)
0xf04091da:  call   0xf040523d

----------------
IN: karch_smp_cpuid
0xf04091df:  cmp    $0x1,%al
0xf04091e1:  ja     0xf04091ea

----------------
IN: karch_smp_cpuid
0xf04091ea:  movzbl -0xc(%ebp),%eax
0xf04091ee:  movzbl -0xfbdf920(%eax),%eax
0xf04091f5:  leave  
0xf04091f6:  ret    

----------------
IN: karch_smp_cpuid_current
0xf040921e:  add    $0x10,%esp
0xf0409221:  leave  
0xf0409222:  ret    

----------------
IN: karch_is_bsp_cpu_current
0xf040534d:  mov    %al,-0x9(%ebp)
0xf0405350:  movzbl -0x9(%ebp),%eax
0xf0405354:  sub    $0xc,%esp
0xf0405357:  push   %eax
0xf0405358:  call   0xf04052a6

----------------
IN: karch_is_bsp_cpu
0xf04052a6:  push   %ebp
0xf04052a7:  mov    %esp,%ebp
0xf04052a9:  sub    $0x18,%esp
0xf04052ac:  mov    0x8(%ebp),%eax
0xf04052af:  mov    %al,-0xc(%ebp)
0xf04052b2:  cmpb   $0xf,-0xc(%ebp)
0xf04052b6:  ja     0xf04052c4

----------------
IN: karch_is_bsp_cpu
0xf04052b8:  movzbl 0xf041f430,%eax
0xf04052bf:  cmp    %al,-0xc(%ebp)
0xf04052c2:  jb     0xf04052cb

----------------
IN: karch_is_bsp_cpu
0xf04052cb:  movzbl 0xf041eb2c,%eax
0xf04052d2:  test   %al,%al
0xf04052d4:  jne    0xf04052df

----------------
IN: karch_is_bsp_cpu
0xf04052d6:  call   0xf04091c2

----------------
IN: karch_is_bsp_cpu
0xf04052db:  test   %eax,%eax
0xf04052dd:  jne    0xf04052e8

----------------
IN: karch_is_bsp_cpu
0xf04052e8:  movzbl -0xc(%ebp),%edx
0xf04052ec:  mov    %edx,%eax
0xf04052ee:  shl    $0x3,%eax
0xf04052f1:  add    %edx,%eax
0xf04052f3:  shl    $0x4,%eax
0xf04052f6:  add    $0xf041eba4,%eax
0xf04052fb:  movzwl (%eax),%eax
0xf04052fe:  movzwl %ax,%eax
0xf0405301:  and    $0x1,%eax
0xf0405304:  test   %eax,%eax
0xf0405306:  je     0xf0405320

----------------
IN: karch_is_bsp_cpu
0xf0405308:  movzbl -0xc(%ebp),%edx
0xf040530c:  mov    %edx,%eax
0xf040530e:  shl    $0x3,%eax
0xf0405311:  add    %edx,%eax
0xf0405313:  shl    $0x4,%eax
0xf0405316:  add    $0xf041eba6,%eax
0xf040531b:  movzbl (%eax),%eax
0xf040531e:  jmp    0xf0405325

----------------
IN: karch_is_bsp_cpu
0xf0405325:  leave  
0xf0405326:  ret    

----------------
IN: karch_is_bsp_cpu_current
0xf040535d:  add    $0x10,%esp
0xf0405360:  leave  
0xf0405361:  ret    

----------------
IN: karch_init_apic_idt
0xf0408c16:  mov    %al,-0x9(%ebp)
0xf0408c19:  sub    $0x8,%esp
0xf0408c1c:  push   $0x50
0xf0408c1e:  push   $0xf040b260
0xf0408c23:  call   0xf0406781

----------------
IN: karch_init_apic_idt
0xf0408c28:  add    $0x10,%esp
0xf0408c2b:  sub    $0x8,%esp
0xf0408c2e:  push   $0x0
0xf0408c30:  push   $0xf040b480
0xf0408c35:  call   0xf0406781

----------------
IN: karch_init_apic_idt
0xf0408c3a:  add    $0x10,%esp
0xf0408c3d:  mov    0xf0420684,%eax
0xf0408c42:  add    $0x370,%eax
0xf0408c47:  sub    $0xc,%esp
0xf0408c4a:  push   %eax
0xf0408c4b:  call   0xf0407661

----------------
IN: karch_init_apic_idt
0xf0408c50:  add    $0x10,%esp
0xf0408c53:  mov    %eax,-0x10(%ebp)
0xf0408c56:  orl    $0xfe,-0x10(%ebp)
0xf0408c5d:  andl   $0xfffeffff,-0x10(%ebp)
0xf0408c64:  mov    0xf0420684,%eax
0xf0408c69:  add    $0x370,%eax
0xf0408c6e:  sub    $0x8,%esp
0xf0408c71:  pushl  -0x10(%ebp)
0xf0408c74:  push   %eax
0xf0408c75:  call   0xf040766b

----------------
IN: karch_init_apic_idt
0xf0408c7a:  add    $0x10,%esp
0xf0408c7d:  mov    0xf0420684,%eax
0xf0408c82:  add    $0x370,%eax
0xf0408c87:  sub    $0xc,%esp
0xf0408c8a:  push   %eax
0xf0408c8b:  call   0xf0407661

----------------
IN: karch_init_apic_idt
0xf0408c90:  add    $0x10,%esp
0xf0408c93:  cmpb   $0x0,-0x9(%ebp)
0xf0408c97:  je     0xf0408cab

----------------
IN: karch_init_apic_idt
0xf0408c99:  sub    $0x8,%esp
0xf0408c9c:  push   $0x0
0xf0408c9e:  push   $0xf040b4a8
0xf0408ca3:  call   0xf0406781

----------------
IN: karch_init_apic_idt
0xf0408ca8:  add    $0x10,%esp
0xf0408cab:  nop    
0xf0408cac:  leave  
0xf0408cad:  ret    

----------------
IN: karch_init_smp
0xf04090b1:  call   0xf040671c

----------------
IN: karch_init_smp
0xf04090b6:  mov    -0x10(%ebp),%eax
0xf04090b9:  mov    0x6c(%eax),%eax
0xf04090bc:  sub    $0x8,%esp
0xf04090bf:  push   $0xf040938c
0xf04090c4:  push   %eax
0xf04090c5:  call   0xf0405869

----------------
IN: 
0xf0405869:  mov    0x8(%esp),%eax
0xf040586d:  mov    0x4(%esp),%ecx
0xf0405871:  mov    $0xf040587a,%ebp
0xf0405876:  mov    %ecx,%esp
0xf0405878:  jmp    *%eax

----------------
IN: karch_smp_start_ap
0xf040938c:  push   %ebp
0xf040938d:  mov    %esp,%ebp
0xf040938f:  sub    $0x28,%esp
0xf0409392:  sub    $0xc,%esp
0xf0409395:  push   $0xf040b4c5
0xf040939a:  call   0xf0405185

----------------
IN: karch_smp_start_ap
0xf040939f:  add    $0x10,%esp
0xf04093a2:  call   0xf040523d

----------------
IN: karch_smp_start_ap
0xf04093a7:  mov    %al,-0x11(%ebp)
0xf04093aa:  call   0xf04091f7

----------------
IN: karch_smp_start_ap
0xf04093af:  mov    %al,-0x12(%ebp)
0xf04093b2:  mov    $0x467,%eax
0xf04093b7:  mov    (%eax),%eax
0xf04093b9:  mov    %eax,0xf04206c0
0xf04093be:  sub    $0x8,%esp
0xf04093c1:  push   $0xf
0xf04093c3:  push   $0x70
0xf04093c5:  call   0xf04058bc

----------------
IN: karch_smp_start_ap
0xf04093ca:  add    $0x10,%esp
0xf04093cd:  sub    $0x8,%esp
0xf04093d0:  push   $0xa
0xf04093d2:  push   $0x71
0xf04093d4:  call   0xf04058bc

----------------
IN: karch_smp_start_ap
0xf04093d9:  add    $0x10,%esp
0xf04093dc:  call   0xf0409250

----------------
IN: karch_smp_prepare_ap_entry
0xf0409250:  push   %ebp
0xf0409251:  mov    %esp,%ebp
0xf0409253:  sub    $0x28,%esp
0xf0409256:  mov    $0xf040c938,%eax
0xf040925b:  mov    $0xf040c000,%edx
0xf0409260:  sub    %edx,%eax
0xf0409262:  mov    %eax,-0xc(%ebp)
0xf0409265:  movl   $0x8000,-0x10(%ebp)
0xf040926c:  call   0xf04066f2

----------------
IN: karch_get_idt_ptr
0xf04066f2:  push   %ebp

----------------
IN: karch_get_idt_ptr
0xf04066f3:  mov    %esp,%ebp

----------------
IN: karch_get_idt_ptr
0xf04066f5:  mov    $0xf041f648,%eax

----------------
IN: karch_get_idt_ptr
0xf04066fa:  pop    %ebp

----------------
IN: karch_get_idt_ptr
0xf04066fb:  ret    

----------------
IN: karch_smp_prepare_ap_entry
0xf0409271:  mov    %eax,-0x14(%ebp)
0xf0409274:  call   0xf0405e3a

----------------
IN: karch_get_gdt_ptr
0xf0405e3a:  push   %ebp
0xf0405e3b:  mov    %esp,%ebp
0xf0405e3d:  mov    $0xf041f4f0,%eax
0xf0405e42:  pop    %ebp
0xf0405e43:  ret    

----------------
IN: karch_smp_prepare_ap_entry
0xf0409279:  mov    %eax,-0x18(%ebp)
0xf040927c:  call   0xf0405085

----------------
IN: karch_get_bootinfo
0xf0405085:  push   %ebp
0xf0405086:  mov    %esp,%ebp
0xf0405088:  mov    $0xf041e800,%eax
0xf040508d:  pop    %ebp
0xf040508e:  ret    

----------------
IN: karch_smp_prepare_ap_entry
0xf0409281:  mov    %eax,-0x1c(%ebp)
0xf0409284:  mov    $0xf040c060,%eax
0xf0409289:  movl   $0x0,(%eax)
0xf040928f:  mov    -0x1c(%ebp),%eax
0xf0409292:  mov    0x324(%eax),%eax
0xf0409298:  mov    $0xf040c064,%edx
0xf040929d:  mov    %eax,(%edx)
0xf040929f:  mov    $0xf040c088,%eax
0xf04092a4:  add    $0x8000,%eax
0xf04092a9:  mov    $0xf040c000,%ecx
0xf04092ae:  mov    $0xf040c068,%edx
0xf04092b3:  sub    %ecx,%eax
0xf04092b5:  mov    %eax,0x2(%edx)
0xf04092b8:  mov    $0xf040c138,%eax
0xf04092bd:  add    $0x8000,%eax
0xf04092c2:  mov    $0xf040c000,%ecx
0xf04092c7:  mov    $0xf040c070,%edx
0xf04092cc:  sub    %ecx,%eax
0xf04092ce:  mov    %eax,0x2(%edx)
0xf04092d1:  mov    $0xf040c068,%edx
0xf04092d6:  mov    -0x18(%ebp),%eax
0xf04092d9:  movzwl (%eax),%eax
0xf04092dc:  mov    %ax,(%edx)
0xf04092df:  mov    $0xf040c070,%edx
0xf04092e4:  mov    -0x14(%ebp),%eax
0xf04092e7:  movzwl (%eax),%eax
0xf04092ea:  mov    %ax,(%edx)
0xf04092ed:  mov    $0xf040c078,%edx
0xf04092f2:  mov    -0x18(%ebp),%eax
0xf04092f5:  mov    (%eax),%ecx
0xf04092f7:  mov    %ecx,(%edx)
0xf04092f9:  movzwl 0x4(%eax),%eax
0xf04092fd:  mov    %ax,0x4(%edx)
0xf0409301:  mov    $0xf040c080,%edx
0xf0409306:  mov    -0x14(%ebp),%eax
0xf0409309:  mov    (%eax),%ecx
0xf040930b:  mov    %ecx,(%edx)
0xf040930d:  movzwl 0x4(%eax),%eax
0xf0409311:  mov    %ax,0x4(%edx)
0xf0409315:  mov    -0x14(%ebp),%eax
0xf0409318:  movzwl (%eax),%eax
0xf040931b:  movzwl %ax,%eax
0xf040931e:  add    $0x1,%eax
0xf0409321:  mov    %eax,%edx
0xf0409323:  mov    -0x14(%ebp),%eax
0xf0409326:  mov    0x2(%eax),%eax
0xf0409329:  sub    $0x4,%esp
0xf040932c:  push   %edx
0xf040932d:  push   %eax
0xf040932e:  push   $0xf040c138
0xf0409333:  call   0xf040a466

----------------
IN: karch_smp_prepare_ap_entry
0xf0409338:  add    $0x10,%esp
0xf040933b:  mov    -0x18(%ebp),%eax
0xf040933e:  movzwl (%eax),%eax
0xf0409341:  movzwl %ax,%eax
0xf0409344:  add    $0x1,%eax
0xf0409347:  mov    %eax,%edx
0xf0409349:  mov    -0x18(%ebp),%eax
0xf040934c:  mov    0x2(%eax),%eax
0xf040934f:  sub    $0x4,%esp
0xf0409352:  push   %edx
0xf0409353:  push   %eax
0xf0409354:  push   $0xf040c088
0xf0409359:  call   0xf040a466

----------------
IN: karch_smp_prepare_ap_entry
0xf040935e:  add    $0x10,%esp
0xf0409361:  mov    $0xf040c938,%eax
0xf0409366:  mov    $0xf040c000,%edx
0xf040936b:  sub    %edx,%eax
0xf040936d:  mov    %eax,-0x20(%ebp)
0xf0409370:  mov    -0x10(%ebp),%eax
0xf0409373:  sub    $0x4,%esp
0xf0409376:  pushl  -0x20(%ebp)
0xf0409379:  push   $0xf040c000
0xf040937e:  push   %eax
0xf040937f:  call   0xf040a466

----------------
IN: karch_smp_prepare_ap_entry
0xf0409384:  add    $0x10,%esp
0xf0409387:  mov    -0x10(%ebp),%eax
0xf040938a:  leave  
0xf040938b:  ret    

----------------
IN: karch_smp_start_ap
0xf04093e1:  mov    %eax,-0x18(%ebp)
0xf04093e4:  cmpl   $0xffffffff,-0x18(%ebp)
0xf04093e8:  jne    0xf04093fd

----------------
IN: karch_smp_start_ap
0xf04093fd:  mov    $0x467,%edx
0xf0409402:  mov    -0x18(%ebp),%eax
0xf0409405:  mov    %eax,(%edx)
0xf0409407:  mov    $0xf040c000,%edx
0xf040940c:  mov    -0x18(%ebp),%eax
0xf040940f:  sub    %edx,%eax
0xf0409411:  mov    $0xf040c060,%edx
0xf0409416:  add    %edx,%eax
0xf0409418:  mov    %eax,-0x1c(%ebp)
0xf040941b:  movb   $0x0,-0x9(%ebp)
0xf040941f:  jmp    0xf04094da

----------------
IN: karch_smp_start_ap
0xf04094da:  movzbl -0x9(%ebp),%eax
0xf04094de:  cmp    -0x11(%ebp),%al
0xf04094e1:  jb     0xf0409424

----------------
IN: karch_smp_start_ap
0xf0409424:  movzbl -0x12(%ebp),%eax
0xf0409428:  cmp    -0x9(%ebp),%al
0xf040942b:  je     0xf04094cf

----------------
IN: karch_smp_start_ap
0xf04094cf:  nop    
0xf04094d0:  jmp    0xf04094d6

----------------
IN: karch_smp_start_ap
0xf04094d6:  addb   $0x1,-0x9(%ebp)
0xf04094da:  movzbl -0x9(%ebp),%eax
0xf04094de:  cmp    -0x11(%ebp),%al
0xf04094e1:  jb     0xf0409424

----------------
IN: karch_smp_start_ap
0xf0409431:  movzbl -0x9(%ebp),%eax
0xf0409435:  mov    %al,-0x1d(%ebp)
0xf0409438:  mov    $0xf040c060,%edx
0xf040943d:  movzbl -0x9(%ebp),%eax
0xf0409441:  mov    %eax,(%edx)
0xf0409443:  mov    -0x1c(%ebp),%edx
0xf0409446:  mov    %eax,(%edx)
0xf0409448:  movw   $0xffff,0xf04206c6
0xf0409451:  call   0xf040591c

----------------
IN: 
0xf040591c:  mfence 
0xf040591f:  ret    

----------------
IN: karch_smp_start_ap
0xf0409456:  movzbl -0x1d(%ebp),%eax
0xf040945a:  sub    $0xc,%esp
0xf040945d:  push   %eax
0xf040945e:  call   0xf0408d0c

----------------
IN: karch_lapic_send_init_ipi
0xf0408d0c:  push   %ebp
0xf0408d0d:  mov    %esp,%ebp
0xf0408d0f:  sub    $0x28,%esp
0xf0408d12:  mov    0x8(%ebp),%eax
0xf0408d15:  mov    %al,-0x1c(%ebp)
0xf0408d18:  movzbl -0x1c(%ebp),%eax
0xf0408d1c:  sub    $0xc,%esp
0xf0408d1f:  push   %eax
0xf0408d20:  call   0xf0405249

----------------
IN: karch_lapic_send_init_ipi
0xf0408d25:  add    $0x10,%esp
0xf0408d28:  mov    %eax,-0xc(%ebp)
0xf0408d2b:  cmpl   $0x0,-0xc(%ebp)
0xf0408d2f:  jne    0xf0408d3b

----------------
IN: karch_lapic_send_init_ipi
0xf0408d3b:  mov    -0xc(%ebp),%eax
0xf0408d3e:  movzbl 0x77(%eax),%eax
0xf0408d42:  mov    %al,-0xd(%ebp)
0xf0408d45:  sub    $0x8,%esp
0xf0408d48:  push   $0xf
0xf0408d4a:  push   $0x70
0xf0408d4c:  call   0xf04058bc

----------------
IN: karch_lapic_send_init_ipi
0xf0408d51:  add    $0x10,%esp
0xf0408d54:  sub    $0x8,%esp
0xf0408d57:  push   $0xa
0xf0408d59:  push   $0x71
0xf0408d5b:  call   0xf04058bc

----------------
IN: karch_lapic_send_init_ipi
0xf0408d60:  add    $0x10,%esp
0xf0408d63:  call   0xf0407679

----------------
IN: karch_lapic_send_init_ipi
0xf0408d68:  movzbl -0xd(%ebp),%eax
0xf0408d6c:  sub    $0x8,%esp
0xf0408d6f:  push   $0x4500
0xf0408d74:  push   %eax
0xf0408d75:  call   0xf0408e10

----------------
IN: karch_lapic_set_ipi
0xf0408e10:  push   %ebp
0xf0408e11:  mov    %esp,%ebp
0xf0408e13:  sub    $0x18,%esp
0xf0408e16:  mov    0xf0420684,%eax
0xf0408e1b:  add    $0x310,%eax
0xf0408e20:  sub    $0xc,%esp
0xf0408e23:  push   %eax
0xf0408e24:  call   0xf0407661

----------------
IN: karch_lapic_set_ipi
0xf0408e29:  add    $0x10,%esp
0xf0408e2c:  mov    %eax,-0xc(%ebp)
0xf0408e2f:  mov    -0xc(%ebp),%eax
0xf0408e32:  and    $0xffffff,%eax
0xf0408e37:  mov    %eax,%edx
0xf0408e39:  mov    0x8(%ebp),%eax
0xf0408e3c:  shl    $0x18,%eax
0xf0408e3f:  or     %eax,%edx
0xf0408e41:  mov    0xf0420684,%eax
0xf0408e46:  add    $0x310,%eax
0xf0408e4b:  sub    $0x8,%esp
0xf0408e4e:  push   %edx
0xf0408e4f:  push   %eax
0xf0408e50:  call   0xf040766b

----------------
IN: karch_lapic_set_ipi
0xf0408e55:  add    $0x10,%esp
0xf0408e58:  mov    0xf0420684,%eax
0xf0408e5d:  add    $0x300,%eax
0xf0408e62:  sub    $0xc,%esp
0xf0408e65:  push   %eax
0xf0408e66:  call   0xf0407661

----------------
IN: karch_lapic_set_ipi
0xf0408e6b:  add    $0x10,%esp
0xf0408e6e:  mov    %eax,-0x10(%ebp)
0xf0408e71:  mov    -0x10(%ebp),%eax
0xf0408e74:  and    $0xfff32000,%eax
0xf0408e79:  or     0xc(%ebp),%eax
0xf0408e7c:  mov    0xf0420684,%edx
0xf0408e82:  add    $0x300,%edx
0xf0408e88:  sub    $0x8,%esp
0xf0408e8b:  push   %eax
0xf0408e8c:  push   %edx
0xf0408e8d:  call   0xf040766b

----------------
IN: karch_lapic_set_ipi
0xf0408e92:  add    $0x10,%esp
0xf0408e95:  sub    $0xc,%esp
0xf0408e98:  push   $0xc8
0xf0408e9d:  call   0xf0407e57

----------------
IN: karch_lapic_udelay
0xf0407e57:  push   %ebp
0xf0407e58:  mov    %esp,%ebp
0xf0407e5a:  sub    $0x8,%esp
0xf0407e5d:  sub    $0xc,%esp
0xf0407e60:  pushl  0x8(%ebp)
0xf0407e63:  call   0xf0407cea

----------------
IN: karch_lapic_oneshot_timer
0xf0407cea:  push   %ebp
0xf0407ceb:  mov    %esp,%ebp
0xf0407ced:  sub    $0x18,%esp
0xf0407cf0:  call   0xf0405362

----------------
IN: karch_get_cpu_current
0xf0405362:  push   %ebp
0xf0405363:  mov    %esp,%ebp
0xf0405365:  sub    $0x8,%esp
0xf0405368:  movzbl 0xf041eb2c,%eax
0xf040536f:  test   %al,%al
0xf0405371:  jne    0xf040537c

----------------
IN: karch_get_cpu_current
0xf0405373:  call   0xf04091c2

----------------
IN: karch_get_cpu_current
0xf0405378:  test   %eax,%eax
0xf040537a:  jne    0xf0405383

----------------
IN: karch_get_cpu_current
0xf0405383:  call   0xf04091f7

----------------
IN: karch_get_cpu_current
0xf0405388:  movzbl %al,%eax
0xf040538b:  sub    $0xc,%esp
0xf040538e:  push   %eax
0xf040538f:  call   0xf0405249

----------------
IN: karch_get_cpu_current
0xf0405394:  add    $0x10,%esp
0xf0405397:  leave  
0xf0405398:  ret    

----------------
IN: karch_lapic_oneshot_timer
0xf0407cf5:  mov    %eax,-0xc(%ebp)
0xf0407cf8:  cmpl   $0x0,-0xc(%ebp)
0xf0407cfc:  jne    0xf0407d05

----------------
IN: karch_lapic_oneshot_timer
0xf0407d05:  mov    -0xc(%ebp),%eax
0xf0407d08:  mov    0x7c(%eax),%eax
0xf0407d0b:  mov    $0x431bde83,%edx
0xf0407d10:  mul    %edx
0xf0407d12:  mov    %edx,%eax
0xf0407d14:  shr    $0x12,%eax
0xf0407d17:  mov    %eax,-0x10(%ebp)
0xf0407d1a:  mov    0x8(%ebp),%eax
0xf0407d1d:  imul   -0x10(%ebp),%eax
0xf0407d21:  mov    0xf0420684,%edx
0xf0407d27:  add    $0x380,%edx
0xf0407d2d:  sub    $0x8,%esp
0xf0407d30:  push   %eax
0xf0407d31:  push   %edx
0xf0407d32:  call   0xf040766b

----------------
IN: karch_lapic_oneshot_timer
0xf0407d37:  add    $0x10,%esp
0xf0407d3a:  mov    0xf0420684,%eax
0xf0407d3f:  add    $0x3e0,%eax
0xf0407d44:  sub    $0x8,%esp
0xf0407d47:  push   $0xb
0xf0407d49:  push   %eax
0xf0407d4a:  call   0xf040766b

----------------
IN: karch_lapic_oneshot_timer
0xf0407d4f:  add    $0x10,%esp
0xf0407d52:  mov    0xf0420684,%eax
0xf0407d57:  add    $0x320,%eax
0xf0407d5c:  sub    $0x8,%esp
0xf0407d5f:  push   $0xf0
0xf0407d64:  push   %eax
0xf0407d65:  call   0xf040766b

----------------
IN: karch_lapic_oneshot_timer
0xf0407d6a:  add    $0x10,%esp
0xf0407d6d:  mov    $0x1,%eax
0xf0407d72:  leave  
0xf0407d73:  ret    

----------------
IN: karch_lapic_udelay
0xf0407e68:  add    $0x10,%esp
0xf0407e6b:  jmp    0xf0407e72

----------------
IN: karch_lapic_udelay
0xf0407e72:  mov    0xf0420684,%eax
0xf0407e77:  add    $0x390,%eax
0xf0407e7c:  sub    $0xc,%esp
0xf0407e7f:  push   %eax
0xf0407e80:  call   0xf0407661

----------------
IN: karch_lapic_udelay
0xf0407e85:  add    $0x10,%esp
0xf0407e88:  test   %eax,%eax
0xf0407e8a:  jne    0xf0407e6d

----------------
IN: karch_lapic_udelay
0xf0407e8c:  nop    
0xf0407e8d:  nop    
0xf0407e8e:  leave  
0xf0407e8f:  ret    

----------------
IN: karch_lapic_set_ipi
0xf0408ea2:  add    $0x10,%esp
0xf0408ea5:  nop    
0xf0408ea6:  leave  
0xf0408ea7:  ret    

----------------
IN: karch_lapic_send_init_ipi
0xf0408d7a:  add    $0x10,%esp
0xf0408d7d:  mov    0xf0420684,%eax
0xf0408d82:  add    $0x300,%eax
0xf0408d87:  sub    $0x4,%esp
0xf0408d8a:  push   $0x3e8
0xf0408d8f:  push   $0x1000
0xf0408d94:  push   %eax
0xf0408d95:  call   0xf0407f16

----------------
IN: karch_lapic_wait_flag_clear
0xf0407f16:  push   %ebp
0xf0407f17:  mov    %esp,%ebp
0xf0407f19:  sub    $0x10,%esp
0xf0407f1c:  pushl  0x8(%ebp)
0xf0407f1f:  call   0xf0407661

----------------
IN: karch_lapic_wait_flag_clear
0xf0407f24:  add    $0x4,%esp
0xf0407f27:  and    0xc(%ebp),%eax
0xf0407f2a:  cmp    %eax,0xc(%ebp)
0xf0407f2d:  jne    0xf0407f57

----------------
IN: karch_lapic_wait_flag_clear
0xf0407f57:  nop    
0xf0407f58:  mov    $0x0,%eax
0xf0407f5d:  leave  
0xf0407f5e:  ret    

----------------
IN: karch_lapic_send_init_ipi
0xf0408d9a:  add    $0x10,%esp
0xf0408d9d:  mov    %eax,-0x14(%ebp)
0xf0408da0:  cmpl   $0x0,-0x14(%ebp)
0xf0408da4:  je     0xf0408dad

----------------
IN: karch_lapic_send_init_ipi
0xf0408dad:  call   0xf0407679

----------------
IN: karch_lapic_send_init_ipi
0xf0408db2:  movzbl -0xd(%ebp),%eax
0xf0408db6:  sub    $0x8,%esp
0xf0408db9:  push   $0x80000
0xf0408dbe:  push   %eax
0xf0408dbf:  call   0xf0408e10

----------------
IN: karch_lapic_send_init_ipi
0xf0408dc4:  add    $0x10,%esp
0xf0408dc7:  mov    0xf0420684,%eax
0xf0408dcc:  add    $0x300,%eax
0xf0408dd1:  sub    $0x4,%esp
0xf0408dd4:  push   $0x3e8
0xf0408dd9:  push   $0x1000
0xf0408dde:  push   %eax
0xf0408ddf:  call   0xf0407f16

----------------
IN: karch_lapic_send_init_ipi
0xf0408de4:  add    $0x10,%esp
0xf0408de7:  mov    %eax,-0x14(%ebp)
0xf0408dea:  cmpl   $0x0,-0x14(%ebp)
0xf0408dee:  je     0xf0408df7

----------------
IN: karch_lapic_send_init_ipi
0xf0408df7:  call   0xf0407679

----------------
IN: karch_lapic_send_init_ipi
0xf0408dfc:  sub    $0xc,%esp
0xf0408dff:  push   $0xa
0xf0408e01:  call   0xf0407e90

----------------
IN: karch_lapic_mdelay
0xf0407e90:  push   %ebp
0xf0407e91:  mov    %esp,%ebp
0xf0407e93:  sub    $0x18,%esp
0xf0407e96:  jmp    0xf0407ec3

----------------
IN: karch_lapic_mdelay
0xf0407ec3:  cmpl   $0x0,0x8(%ebp)
0xf0407ec7:  jne    0xf0407e98

----------------
IN: karch_lapic_mdelay
0xf0407e98:  mov    0x8(%ebp),%eax
0xf0407e9b:  mov    $0x10,%edx
0xf0407ea0:  cmp    %edx,%eax
0xf0407ea2:  cmova  %edx,%eax
0xf0407ea5:  mov    %eax,-0xc(%ebp)
0xf0407ea8:  mov    -0xc(%ebp),%eax
0xf0407eab:  sub    %eax,0x8(%ebp)
0xf0407eae:  mov    -0xc(%ebp),%eax
0xf0407eb1:  imul   $0x3e8,%eax,%eax
0xf0407eb7:  sub    $0xc,%esp
0xf0407eba:  push   %eax
0xf0407ebb:  call   0xf0407e57

----------------
IN: karch_lapic_udelay
0xf0407e6d:  call   0xf0405920

----------------
IN: 
0xf0405920:  pause  

----------------
IN: 
0xf0405922:  ret    

----------------
IN: karch_lapic_mdelay
0xf0407ec0:  add    $0x10,%esp
0xf0407ec3:  cmpl   $0x0,0x8(%ebp)
0xf0407ec7:  jne    0xf0407e98

----------------
IN: karch_lapic_mdelay
0xf0407ec9:  nop    
0xf0407eca:  nop    
0xf0407ecb:  leave  
0xf0407ecc:  ret    

----------------
IN: karch_lapic_send_init_ipi
0xf0408e06:  add    $0x10,%esp
0xf0408e09:  mov    $0x1,%eax
0xf0408e0e:  leave  
0xf0408e0f:  ret    

----------------
IN: karch_smp_start_ap
0xf0409463:  add    $0x10,%esp
0xf0409466:  test   %al,%al
0xf0409468:  je     0xf04094d2

----------------
IN: karch_smp_start_ap
0xf040946a:  movzbl -0x1d(%ebp),%eax
0xf040946e:  sub    $0x8,%esp
0xf0409471:  pushl  -0x18(%ebp)
0xf0409474:  push   %eax
0xf0409475:  call   0xf0408ea8

----------------
IN: karch_lapic_send_startup_ipi
0xf0408ea8:  push   %ebp
0xf0408ea9:  mov    %esp,%ebp
0xf0408eab:  sub    $0x28,%esp
0xf0408eae:  mov    0x8(%ebp),%eax
0xf0408eb1:  mov    %al,-0x1c(%ebp)
0xf0408eb4:  movzbl -0x1c(%ebp),%eax
0xf0408eb8:  sub    $0xc,%esp
0xf0408ebb:  push   %eax
0xf0408ebc:  call   0xf0405249

----------------
IN: karch_lapic_send_startup_ipi
0xf0408ec1:  add    $0x10,%esp
0xf0408ec4:  mov    %eax,-0x10(%ebp)
0xf0408ec7:  cmpl   $0x0,-0x10(%ebp)
0xf0408ecb:  jne    0xf0408ed4

----------------
IN: karch_lapic_send_startup_ipi
0xf0408ed4:  mov    0xc(%ebp),%eax
0xf0408ed7:  shr    $0xc,%eax
0xf0408eda:  and    $0xff,%eax
0xf0408edf:  mov    %eax,-0x14(%ebp)
0xf0408ee2:  movb   $0x0,-0x9(%ebp)
0xf0408ee6:  jmp    0xf0408f40

----------------
IN: karch_lapic_send_startup_ipi
0xf0408f40:  cmpb   $0x1,-0x9(%ebp)
0xf0408f44:  jbe    0xf0408ee8

----------------
IN: karch_lapic_send_startup_ipi
0xf0408ee8:  call   0xf0407679

----------------
IN: karch_lapic_send_startup_ipi
0xf0408eed:  mov    -0x14(%ebp),%eax
0xf0408ef0:  or     $0x46,%ah
0xf0408ef3:  mov    %eax,%edx
0xf0408ef5:  mov    -0x10(%ebp),%eax
0xf0408ef8:  movzbl 0x77(%eax),%eax
0xf0408efc:  movzbl %al,%eax
0xf0408eff:  sub    $0x8,%esp
0xf0408f02:  push   %edx
0xf0408f03:  push   %eax
0xf0408f04:  call   0xf0408e10

----------------
IN: karch_lapic_send_startup_ipi
0xf0408f09:  add    $0x10,%esp
0xf0408f0c:  mov    0xf0420684,%eax
0xf0408f11:  add    $0x300,%eax
0xf0408f16:  sub    $0x4,%esp
0xf0408f19:  push   $0x3e8
0xf0408f1e:  push   $0x1000
0xf0408f23:  push   %eax
0xf0408f24:  call   0xf0407f16

----------------
IN: karch_lapic_send_startup_ipi
0xf0408f29:  add    $0x10,%esp
0xf0408f2c:  mov    %eax,-0x18(%ebp)
0xf0408f2f:  cmpl   $0x0,-0x18(%ebp)
0xf0408f33:  je     0xf0408f3c

CPU Reset (CPU 1)
EAX=000f49ee EBX=00000000 ECX=00000000 EDX=00000001
ESI=00000000 EDI=00000000 EBP=00000000 ESP=00006c5c
EIP=000fd0ac EFL=00000002 [-------] CPL=0 II=0 A20=1 SMM=0 HLT=0
ES =0010 00000000 ffffffff 00cf9300 DPL=0 DS   [-WA]
CS =0008 00000000 ffffffff 00cf9b00 DPL=0 CS32 [-RA]
SS =0010 00000000 ffffffff 00cf9300 DPL=0 DS   [-WA]
DS =0010 00000000 ffffffff 00cf9300 DPL=0 DS   [-WA]
FS =0010 00000000 ffffffff 00cf9300 DPL=0 DS   [-WA]
GS =0010 00000000 ffffffff 00cf9300 DPL=0 DS   [-WA]
LDT=0000 00000000 0000ffff 00008200 DPL=0 LDT
TR =0000 00000000 0000ffff 00008b00 DPL=0 TSS32-busy
GDT=     000f6180 00000037
IDT=     000f61be 00000000
CR0=00000011 CR2=00000000 CR3=00000000 CR4=00000000
DR0=00000000 DR1=00000000 DR2=00000000 DR3=00000000 
DR6=ffff0ff0 DR7=00000400
CCS=00000000 CCD=00000004 CCO=EFLAGS
EFER=0000000000000000
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=0000000000000000 0000000000000000 XMM01=0000000000000000 0000000000000000
XMM02=0000000000000000 0000000000000000 XMM03=0000000000000000 0000000000000000
XMM04=0000000000000000 0000000000000000 XMM05=0000000000000000 0000000000000000
XMM06=0000000000000000 0000000000000000 XMM07=0000000000000000 0000000000000000
----------------
IN: 
0x00008000:  cli    
0x00008001:  mov    %cs,%ax
0x00008003:  mov    %ax,%ds
0x00008005:  nop    
0x00008006:  mov    $0x68,%ax
0x00008009:  nop    
0x0000800a:  mov    $0x70,%bx
0x0000800d:  mov    %ax,%di
0x0000800f:  lgdtw  (%di)
0x00008012:  mov    %bx,%di
0x00008014:  lidtw  (%di)
0x00008017:  mov    %cr0,%eax
0x0000801a:  or     $0x1,%al
0x0000801c:  mov    %eax,%cr0

----------------
IN: 
0x0000801f:  mov    %cr4,%eax
0x00008022:  or     $0x10,%eax
0x00008026:  and    $0xffffff7f,%eax
0x0000802c:  mov    %eax,%cr4

----------------
IN: 
0x0000802f:  mov    0x66,%ax
0x00008032:  shl    $0x10,%eax
0x00008036:  mov    0x64,%ax
0x00008039:  mov    %eax,%cr3

----------------
IN: 
0x0000803c:  mov    %cr0,%eax
0x0000803f:  or     $0x80000000,%eax
0x00008045:  nop    
0x00008046:  mov    %eax,%cr0

----------------
IN: karch_lapic_send_startup_ipi
0xf0408f3c:  addb   $0x1,-0x9(%ebp)
0xf0408f40:  cmpb   $0x1,-0x9(%ebp)
0xf0408f44:  jbe    0xf0408ee8

----------------
IN: karch_lapic_send_startup_ipi
0xf0408f46:  mov    $0x1,%eax
0xf0408f4b:  leave  
0xf0408f4c:  ret    

----------------
IN: karch_smp_start_ap
0xf040947a:  add    $0x10,%esp
0xf040947d:  test   %al,%al
0xf040947f:  je     0xf04094d5

----------------
IN: karch_smp_start_ap
0xf0409481:  movl   $0x0,-0x10(%ebp)
0xf0409488:  jmp    0xf04094bd

----------------
IN: karch_smp_start_ap
0xf04094bd:  mov    -0x10(%ebp),%eax
0xf04094c0:  lea    0x1(%eax),%edx
0xf04094c3:  mov    %edx,-0x10(%ebp)
0xf04094c6:  cmp    $0xea5f,%eax
0xf04094cb:  jbe    0xf040948a

----------------
IN: 
0x00008049:  mov    %cr4,%eax
0x0000804c:  or     $0x80,%eax
0x00008052:  mov    %eax,%cr4

----------------
IN: karch_smp_start_ap
0xf040948a:  sub    $0xc,%esp
0xf040948d:  push   $0x1
0xf040948f:  call   0xf0407e90

----------------
IN: 
0x00008055:  nop    
0x00008056:  ljmpl  $0x8,$0xf0408f50

----------------
IN: karch_smp_start_ap
0xf0409494:  add    $0x10,%esp
0xf0409497:  movzwl 0xf04206c6,%eax
0xf040949e:  movswl %ax,%edx
0xf04094a1:  movzbl -0x1d(%ebp),%eax
0xf04094a5:  cmp    %eax,%edx
0xf04094a7:  jne    0xf04094bd

----------------
IN: 
0xf0408f50:  mov    $0x10,%ax
0xf0408f54:  mov    %eax,%ds

----------------
IN: 
0xf0408f56:  mov    %eax,%ss

----------------
IN: 
0xf0408f58:  mov    $0x402400,%esp

----------------
IN: 
0xf0408f5d:  call   0xf04050ea

----------------
IN: 
0xf0408f62:  jmp    0xf0409536

----------------
IN: karch_smp_boot_ap32
0xf0409536:  push   %ebp
0xf0409537:  mov    %esp,%ebp
0xf0409539:  sub    $0x18,%esp
0xf040953c:  mov    $0xf040c060,%eax
0xf0409541:  mov    (%eax),%eax
0xf0409543:  movzbl %al,%eax
0xf0409546:  sub    $0xc,%esp
0xf0409549:  push   %eax
0xf040954a:  call   0xf0405249

----------------
IN: karch_smp_boot_ap32
0xf040954f:  add    $0x10,%esp
0xf0409552:  mov    %eax,-0xc(%ebp)
0xf0409555:  cmpl   $0x0,-0xc(%ebp)
0xf0409559:  jne    0xf0409562

----------------
IN: karch_smp_boot_ap32
0xf0409562:  mov    -0xc(%ebp),%eax
0xf0409565:  mov    0x6c(%eax),%eax
0xf0409568:  sub    $0x8,%esp
0xf040956b:  push   $0xf040957b
0xf0409570:  push   %eax
0xf0409571:  call   0xf0405869

----------------
IN: karch_smp_init_ap32
0xf040957b:  push   %ebp
0xf040957c:  mov    %esp,%ebp
0xf040957e:  sub    $0x18,%esp
0xf0409581:  mov    $0xf040c060,%eax
0xf0409586:  mov    (%eax),%eax
0xf0409588:  mov    %eax,-0xc(%ebp)
0xf040958b:  movl   $0xb8000,-0x10(%ebp)
0xf0409592:  mov    -0xc(%ebp),%eax
0xf0409595:  mov    %ax,0xf04206c6
0xf040959b:  call   0xf040591c

----------------
IN: karch_smp_init_ap32
0xf04095a0:  mov    -0xc(%ebp),%eax
0xf04095a3:  movzbl %al,%eax
0xf04095a6:  sub    $0xc,%esp
0xf04095a9:  push   %eax
0xf04095aa:  call   0xf04095d9

----------------
IN: karch_smp_identify_cpu
0xf04095d9:  push   %ebp
0xf04095da:  mov    %esp,%ebp
0xf04095dc:  sub    $0x38,%esp
0xf04095df:  mov    0x8(%ebp),%eax
0xf04095e2:  mov    %al,-0x2c(%ebp)
0xf04095e5:  movzbl -0x2c(%ebp),%eax
0xf04095e9:  sub    $0xc,%esp
0xf04095ec:  push   %eax
0xf04095ed:  call   0xf0405249

----------------
IN: karch_smp_start_ap
0xf04094a9:  movzbl -0x1d(%ebp),%eax
0xf04094ad:  sub    $0x8,%esp
0xf04094b0:  push   $0x40
0xf04094b2:  push   %eax
0xf04094b3:  call   0xf04053d7

----------------
IN: karch_set_cpu_init_flags
0xf04053d7:  push   %ebp
0xf04053d8:  mov    %esp,%ebp
0xf04053da:  sub    $0x14,%esp
0xf04053dd:  mov    0x8(%ebp),%eax
0xf04053e0:  mov    %al,-0x14(%ebp)
0xf04053e3:  movzbl -0x14(%ebp),%eax
0xf04053e7:  push   %eax
0xf04053e8:  call   0xf0405249

----------------
IN: karch_set_cpu_init_flags
0xf04053ed:  add    $0x4,%esp
0xf04053f0:  mov    %eax,-0x4(%ebp)
0xf04053f3:  cmpl   $0x0,-0x4(%ebp)
0xf04053f7:  je     0xf0405413

----------------
IN: karch_smp_identify_cpu
0xf04095f2:  add    $0x10,%esp
0xf04095f5:  mov    %eax,-0x14(%ebp)
0xf04095f8:  cmpl   $0x0,-0x14(%ebp)
0xf04095fc:  je     0xf040970d

----------------
IN: karch_smp_identify_cpu
0xf0409602:  movl   $0x0,-0x1c(%ebp)
0xf0409609:  lea    -0x24(%ebp),%eax
0xf040960c:  push   %eax
0xf040960d:  lea    -0x28(%ebp),%eax
0xf0409610:  push   %eax
0xf0409611:  lea    -0x20(%ebp),%eax
0xf0409614:  push   %eax
0xf0409615:  lea    -0x1c(%ebp),%eax
0xf0409618:  push   %eax
0xf0409619:  call   0xf040576b

----------------
IN: karch_smp_identify_cpu
0xf040961e:  add    $0x10,%esp
0xf0409621:  mov    -0x20(%ebp),%eax
0xf0409624:  cmp    $0x756e6547,%eax
0xf0409629:  jne    0xf0409651

----------------
IN: karch_smp_identify_cpu
0xf040962b:  mov    -0x28(%ebp),%eax
0xf040962e:  cmp    $0x6c65746e,%eax
0xf0409633:  jne    0xf0409651

----------------
IN: karch_smp_identify_cpu
0xf0409635:  mov    -0x24(%ebp),%eax
0xf0409638:  cmp    $0x49656e69,%eax
0xf040963d:  je     0xf0409651

----------------
IN: karch_set_cpu_init_flags
0xf04053f9:  mov    -0x4(%ebp),%eax
0xf04053fc:  movzwl 0x74(%eax),%eax
0xf0405400:  mov    0xc(%ebp),%edx
0xf0405403:  or     %eax,%edx
0xf0405405:  mov    -0x4(%ebp),%eax
0xf0405408:  mov    %dx,0x74(%eax)
0xf040540c:  mov    $0x1,%eax
0xf0405411:  jmp    0xf0405418

----------------
IN: karch_set_cpu_init_flags
0xf0405418:  leave  
0xf0405419:  ret    

----------------
IN: karch_smp_start_ap
0xf04094b8:  add    $0x10,%esp
0xf04094bb:  jmp    0xf04094d6

----------------
IN: karch_smp_identify_cpu
0xf0409651:  mov    -0x1c(%ebp),%eax
0xf0409654:  test   %eax,%eax
0xf0409656:  je     0xf0409710

----------------
IN: karch_smp_identify_cpu
0xf040965c:  movl   $0x1,-0x1c(%ebp)
0xf0409663:  lea    -0x24(%ebp),%eax
0xf0409666:  push   %eax
0xf0409667:  lea    -0x28(%ebp),%eax
0xf040966a:  push   %eax
0xf040966b:  lea    -0x20(%ebp),%eax
0xf040966e:  push   %eax
0xf040966f:  lea    -0x1c(%ebp),%eax
0xf0409672:  push   %eax
0xf0409673:  call   0xf040576b

----------------
IN: karch_smp_identify_cpu
0xf0409678:  add    $0x10,%esp
0xf040967b:  mov    -0x1c(%ebp),%eax
0xf040967e:  and    $0xf,%eax
0xf0409681:  mov    %eax,-0x18(%ebp)
0xf0409684:  mov    -0x1c(%ebp),%eax
0xf0409687:  shr    $0x4,%eax
0xf040968a:  and    $0xf,%eax
0xf040968d:  mov    %eax,-0xc(%ebp)
0xf0409690:  cmpl   $0xf,-0xc(%ebp)
0xf0409694:  je     0xf040969c

----------------
IN: karch_smp_identify_cpu
0xf0409696:  cmpl   $0x6,-0xc(%ebp)
0xf040969a:  jne    0xf04096ab

----------------
IN: karch_smp_identify_cpu
0xf040969c:  mov    -0x1c(%ebp),%eax
0xf040969f:  shr    $0x10,%eax
0xf04096a2:  shl    $0x4,%eax
0xf04096a5:  movzbl %al,%eax
0xf04096a8:  add    %eax,-0xc(%ebp)
0xf04096ab:  mov    -0x1c(%ebp),%eax
0xf04096ae:  shr    $0x8,%eax
0xf04096b1:  and    $0xf,%eax
0xf04096b4:  mov    %eax,-0x10(%ebp)
0xf04096b7:  cmpl   $0xf,-0x10(%ebp)
0xf04096bb:  jne    0xf04096c9

----------------
IN: karch_smp_identify_cpu
0xf04096c9:  mov    -0x18(%ebp),%eax
0xf04096cc:  mov    %eax,%edx
0xf04096ce:  mov    -0x14(%ebp),%eax
0xf04096d1:  mov    %dl,0x82(%eax)
0xf04096d7:  mov    -0xc(%ebp),%eax
0xf04096da:  mov    %eax,%edx
0xf04096dc:  mov    -0x14(%ebp),%eax
0xf04096df:  mov    %dl,0x84(%eax)
0xf04096e5:  mov    -0x10(%ebp),%eax
0xf04096e8:  mov    %eax,%edx
0xf04096ea:  mov    -0x14(%ebp),%eax
0xf04096ed:  mov    %dl,0x83(%eax)
0xf04096f3:  mov    -0x28(%ebp),%edx
0xf04096f6:  mov    -0x14(%ebp),%eax
0xf04096f9:  mov    %edx,0x88(%eax)
0xf04096ff:  mov    -0x24(%ebp),%edx
0xf0409702:  mov    -0x14(%ebp),%eax
0xf0409705:  mov    %edx,0x8c(%eax)
0xf040970b:  jmp    0xf0409711

----------------
IN: karch_smp_identify_cpu
0xf0409711:  leave  
0xf0409712:  ret    

----------------
IN: karch_smp_init_ap32
0xf04095af:  add    $0x10,%esp
0xf04095b2:  call   0xf0405e44

----------------
IN: karch_smp_init_ap32
0xf04095b7:  call   0xf040671c

----------------
IN: karch_smp_init_ap32
0xf04095bc:  mov    -0xc(%ebp),%eax
0xf04095bf:  lea    0x30(%eax),%edx
0xf04095c2:  mov    -0xc(%ebp),%eax
0xf04095c5:  add    $0x1,%eax
0xf04095c8:  lea    (%eax,%eax,1),%ecx
0xf04095cb:  mov    -0x10(%ebp),%eax
0xf04095ce:  add    %ecx,%eax
0xf04095d0:  or     $0xf,%dh
0xf04095d3:  mov    %dx,(%eax)
0xf04095d6:  nop    
0xf04095d7:  jmp    0xf04095d6

----------------
IN: karch_smp_init_ap32
0xf04095d6:  nop    
0xf04095d7:  jmp    0xf04095d6

CPU Reset (CPU 2)
EAX=000f49ee EBX=00000000 ECX=00000000 EDX=00000002
ESI=00000000 EDI=00000000 EBP=00000000 ESP=00006c5c
EIP=000fd0ac EFL=00000006 [-----P-] CPL=0 II=0 A20=1 SMM=0 HLT=0
ES =0010 00000000 ffffffff 00cf9300 DPL=0 DS   [-WA]
CS =0008 00000000 ffffffff 00cf9b00 DPL=0 CS32 [-RA]
SS =0010 00000000 ffffffff 00cf9300 DPL=0 DS   [-WA]
DS =0010 00000000 ffffffff 00cf9300 DPL=0 DS   [-WA]
FS =0010 00000000 ffffffff 00cf9300 DPL=0 DS   [-WA]
GS =0010 00000000 ffffffff 00cf9300 DPL=0 DS   [-WA]
LDT=0000 00000000 0000ffff 00008200 DPL=0 LDT
TR =0000 00000000 0000ffff 00008b00 DPL=0 TSS32-busy
GDT=     000f6180 00000037
IDT=     000f61be 00000000
CR0=00000011 CR2=00000000 CR3=00000000 CR4=00000000
DR0=00000000 DR1=00000000 DR2=00000000 DR3=00000000 
DR6=ffff0ff0 DR7=00000400
CCS=00000004 CCD=00000003 CCO=EFLAGS
EFER=0000000000000000
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=0000000000000000 0000000000000000 XMM01=0000000000000000 0000000000000000
XMM02=0000000000000000 0000000000000000 XMM03=0000000000000000 0000000000000000
XMM04=0000000000000000 0000000000000000 XMM05=0000000000000000 0000000000000000
XMM06=0000000000000000 0000000000000000 XMM07=0000000000000000 0000000000000000
CPU Reset (CPU 3)
EAX=000f49ee EBX=00000000 ECX=00000000 EDX=00000003
ESI=00000000 EDI=00000000 EBP=00000000 ESP=00006c5c
EIP=000fd0ac EFL=00000002 [-------] CPL=0 II=0 A20=1 SMM=0 HLT=0
ES =0010 00000000 ffffffff 00cf9300 DPL=0 DS   [-WA]
CS =0008 00000000 ffffffff 00cf9b00 DPL=0 CS32 [-RA]
SS =0010 00000000 ffffffff 00cf9300 DPL=0 DS   [-WA]
DS =0010 00000000 ffffffff 00cf9300 DPL=0 DS   [-WA]
FS =0010 00000000 ffffffff 00cf9300 DPL=0 DS   [-WA]
GS =0010 00000000 ffffffff 00cf9300 DPL=0 DS   [-WA]
LDT=0000 00000000 0000ffff 00008200 DPL=0 LDT
TR =0000 00000000 0000ffff 00008b00 DPL=0 TSS32-busy
GDT=     000f6180 00000037
IDT=     000f61be 00000000
CR0=00000011 CR2=00000000 CR3=00000000 CR4=00000000
DR0=00000000 DR1=00000000 DR2=00000000 DR3=00000000 
DR6=ffff0ff0 DR7=00000400
CCS=00000000 CCD=00000002 CCO=EFLAGS
EFER=0000000000000000
FCW=037f FSW=0000 [ST=0] FTW=00 MXCSR=00001f80
FPR0=0000000000000000 0000 FPR1=0000000000000000 0000
FPR2=0000000000000000 0000 FPR3=0000000000000000 0000
FPR4=0000000000000000 0000 FPR5=0000000000000000 0000
FPR6=0000000000000000 0000 FPR7=0000000000000000 0000
XMM00=0000000000000000 0000000000000000 XMM01=0000000000000000 0000000000000000
XMM02=0000000000000000 0000000000000000 XMM03=0000000000000000 0000000000000000
XMM04=0000000000000000 0000000000000000 XMM05=0000000000000000 0000000000000000
XMM06=0000000000000000 0000000000000000 XMM07=0000000000000000 0000000000000000
----------------
IN: karch_smp_start_ap
0xf04094e7:  mov    $0x467,%edx
0xf04094ec:  mov    0xf04206c0,%eax
0xf04094f1:  mov    %eax,(%edx)
0xf04094f3:  sub    $0x8,%esp
0xf04094f6:  push   $0xf
0xf04094f8:  push   $0x70
0xf04094fa:  call   0xf04058bc

----------------
IN: karch_smp_start_ap
0xf04094ff:  add    $0x10,%esp
0xf0409502:  sub    $0x8,%esp
0xf0409505:  push   $0x0
0xf0409507:  push   $0x71
0xf0409509:  call   0xf04058bc

----------------
IN: karch_smp_start_ap
0xf040950e:  add    $0x10,%esp
0xf0409511:  movzbl -0x12(%ebp),%eax
0xf0409515:  sub    $0xc,%esp
0xf0409518:  push   %eax
0xf0409519:  call   0xf04095d9

----------------
IN: karch_smp_start_ap
0xf040951e:  add    $0x10,%esp
0xf0409521:  movzbl -0x12(%ebp),%eax
0xf0409525:  sub    $0x8,%esp
0xf0409528:  push   $0x40
0xf040952a:  push   %eax
0xf040952b:  call   0xf04053d7

----------------
IN: karch_smp_start_ap
0xf0409530:  add    $0x10,%esp
0xf0409533:  nop    
0xf0409534:  jmp    0xf0409533

----------------
IN: karch_smp_start_ap
0xf0409533:  nop    
0xf0409534:  jmp    0xf0409533

